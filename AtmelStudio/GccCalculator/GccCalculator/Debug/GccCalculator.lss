
GccCalculator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000036fa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000007c  00800060  000036fa  0000378e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000109  008000dc  008000dc  0000380a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000380a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00003868  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  000038a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000289d  00000000  00000000  000039d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009ab  00000000  00000000  00006271  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000155f  00000000  00000000  00006c1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000540  00000000  00000000  0000817c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006ea  00000000  00000000  000086bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002b28  00000000  00000000  00008da6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000138  00000000  00000000  0000b8ce  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__ctors_end>
       4:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
       8:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
       c:	0c 94 e3 0c 	jmp	0x19c6	; 0x19c6 <__vector_3>
      10:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
      14:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
      18:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
      1c:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
      20:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
      24:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
      28:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
      2c:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
      30:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
      34:	0c 94 d1 0c 	jmp	0x19a2	; 0x19a2 <__vector_13>
      38:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
      3c:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
      40:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
      44:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
      48:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
      4c:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
      50:	0c 94 10 01 	jmp	0x220	; 0x220 <__bad_interrupt>
      54:	03 6e       	ori	r16, 0xE3	; 227
      56:	db 36       	cpi	r29, 0x6B	; 107
      58:	3d 9a       	sbi	0x07, 5	; 7
      5a:	99 99       	sbic	0x13, 1	; 19
      5c:	99 3d       	cpi	r25, 0xD9	; 217
      5e:	ab aa       	std	Y+51, r10	; 0x33
      60:	aa 2a       	or	r10, r26
      62:	3e 00       	.word	0x003e	; ????
      64:	00 00       	nop
      66:	80 3f       	cpi	r24, 0xF0	; 240
      68:	08 4a       	sbci	r16, 0xA8	; 168
      6a:	d7 3b       	cpi	r29, 0xB7	; 183
      6c:	3b ce       	rjmp	.-906    	; 0xfffffce4 <__eeprom_end+0xff7efce4>
      6e:	01 6e       	ori	r16, 0xE1	; 225
      70:	84 bc       	out	0x24, r8	; 36
      72:	bf fd       	.word	0xfdbf	; ????
      74:	c1 2f       	mov	r28, r17
      76:	3d 6c       	ori	r19, 0xCD	; 205
      78:	74 31       	cpi	r23, 0x14	; 20
      7a:	9a bd       	out	0x2a, r25	; 42
      7c:	56 83       	std	Z+6, r21	; 0x06
      7e:	3d da       	rcall	.-2950   	; 0xfffff4fa <__eeprom_end+0xff7ef4fa>
      80:	3d 00       	.word	0x003d	; ????
      82:	c7 7f       	andi	r28, 0xF7	; 247
      84:	11 be       	out	0x31, r1	; 49
      86:	d9 e4       	ldi	r29, 0x49	; 73
      88:	bb 4c       	sbci	r27, 0xCB	; 203
      8a:	3e 91       	ld	r19, -X
      8c:	6b aa       	std	Y+51, r6	; 0x33
      8e:	aa be       	out	0x3a, r10	; 58
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	3f 07       	cpc	r19, r31
      96:	63 42       	sbci	r22, 0x23	; 35
      98:	36 b7       	in	r19, 0x36	; 54
      9a:	9b d8       	rcall	.-3786   	; 0xfffff1d2 <__eeprom_end+0xff7ef1d2>
      9c:	a7 1a       	sub	r10, r23
      9e:	39 68       	ori	r19, 0x89	; 137
      a0:	56 18       	sub	r5, r6
      a2:	ae ba       	out	0x1e, r10	; 30
      a4:	ab 55       	subi	r26, 0x5B	; 91
      a6:	8c 1d       	adc	r24, r12
      a8:	3c b7       	in	r19, 0x3c	; 60
      aa:	cc 57       	subi	r28, 0x7C	; 124
      ac:	63 bd       	out	0x23, r22	; 35
      ae:	6d ed       	ldi	r22, 0xDD	; 221
      b0:	fd 75       	andi	r31, 0x5D	; 93
      b2:	3e f6       	brtc	.-114    	; 0x42 <__SREG__+0x3>
      b4:	17 72       	andi	r17, 0x27	; 39
      b6:	31 bf       	out	0x31, r19	; 49
      b8:	00 00       	nop
      ba:	00 80       	ld	r0, Z
      bc:	3f 07       	cpc	r19, r31
      be:	2c 7a       	andi	r18, 0xAC	; 172
      c0:	a5 ba       	out	0x15, r10	; 21
      c2:	6c c5       	rjmp	.+2776   	; 0xb9c <command+0x2a>
      c4:	90 da       	rcall	.-2784   	; 0xfffff5e6 <__eeprom_end+0xff7ef5e6>
      c6:	3b 93       	.word	0x933b	; ????
      c8:	65 fc       	sbrc	r6, 5
      ca:	8b bc       	out	0x2b, r8	; 43
      cc:	53 f8       	bld	r5, 3
      ce:	10 fd       	sbrc	r17, 0
      d0:	3c 56       	subi	r19, 0x6C	; 108
      d2:	92 83       	std	Z+2, r25	; 0x02
      d4:	4d bd       	out	0x2d, r20	; 45
      d6:	87 9d       	mul	r24, r7
      d8:	3a b6       	in	r3, 0x3a	; 58
      da:	3d cb       	rjmp	.-2438   	; 0xfffff756 <__eeprom_end+0xff7ef756>
      dc:	c9 bf       	out	0x39, r28	; 57
      de:	5b be       	out	0x3b, r5	; 59
      e0:	73 da       	rcall	.-2842   	; 0xfffff5c8 <__eeprom_end+0xff7ef5c8>
      e2:	0f c9       	rjmp	.-3554   	; 0xfffff302 <__eeprom_end+0xff7ef302>
      e4:	3f 05       	cpc	r19, r15
      e6:	a8 4c       	sbci	r26, 0xC8	; 200
      e8:	cd b2       	in	r12, 0x1d	; 29
      ea:	d4 4e       	sbci	r29, 0xE4	; 228
      ec:	b9 38       	cpi	r27, 0x89	; 137
      ee:	36 a9       	ldd	r19, Z+54	; 0x36
      f0:	02 0c       	add	r0, r2
      f2:	50 b9       	out	0x00, r21	; 0
      f4:	91 86       	std	Z+9, r9	; 0x09
      f6:	88 08       	sbc	r8, r8
      f8:	3c a6       	std	Y+44, r3	; 0x2c
      fa:	aa aa       	std	Y+50, r10	; 0x32
      fc:	2a be       	out	0x3a, r2	; 58
      fe:	00 00       	nop
     100:	00 80       	ld	r0, Z
     102:	3f 08       	sbc	r3, r15
     104:	00 00       	nop
     106:	00 be       	out	0x30, r0	; 48
     108:	92 24       	eor	r9, r2
     10a:	49 12       	cpse	r4, r25
     10c:	3e ab       	std	Y+54, r19	; 0x36
     10e:	aa aa       	std	Y+50, r10	; 0x32
     110:	2a be       	out	0x3a, r2	; 58
     112:	cd cc       	rjmp	.-1638   	; 0xfffffaae <__eeprom_end+0xff7efaae>
     114:	cc 4c       	sbci	r28, 0xCC	; 204
     116:	3e 00       	.word	0x003e	; ????
     118:	00 00       	nop
     11a:	80 be       	out	0x30, r8	; 48
     11c:	ab aa       	std	Y+51, r10	; 0x33
     11e:	aa aa       	std	Y+50, r10	; 0x32
     120:	3e 00       	.word	0x003e	; ????
     122:	00 00       	nop
     124:	00 bf       	out	0x30, r16	; 48
     126:	00 00       	nop
     128:	00 80       	ld	r0, Z
     12a:	3f 00       	.word	0x003f	; ????
     12c:	00 00       	nop
     12e:	00 00       	nop
     130:	08 41       	sbci	r16, 0x18	; 24
     132:	78 d3       	rcall	.+1776   	; 0x824 <eval_exp5+0xc>
     134:	bb 43       	sbci	r27, 0x3B	; 59
     136:	87 d1       	rcall	.+782    	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
     138:	13 3d       	cpi	r17, 0xD3	; 211
     13a:	19 0e       	add	r1, r25
     13c:	3c c3       	rjmp	.+1656   	; 0x7b6 <eval_exp6+0x368>
     13e:	bd 42       	sbci	r27, 0x2D	; 45
     140:	82 ad       	ldd	r24, Z+58	; 0x3a
     142:	2b 3e       	cpi	r18, 0xEB	; 235
     144:	68 ec       	ldi	r22, 0xC8	; 200
     146:	82 76       	andi	r24, 0x62	; 98
     148:	be d9       	rcall	.-3204   	; 0xfffff4c6 <__eeprom_end+0xff7ef4c6>
     14a:	8f e1       	ldi	r24, 0x1F	; 31
     14c:	a9 3e       	cpi	r26, 0xE9	; 233
     14e:	4c 80       	ldd	r4, Y+4	; 0x04
     150:	ef ff       	.word	0xffef	; ????
     152:	be 01       	movw	r22, r28
     154:	c4 ff       	sbrs	r28, 4
     156:	7f 3f       	cpi	r23, 0xFF	; 255
     158:	00 00       	nop
     15a:	00 00       	nop
     15c:	00 02       	muls	r16, r16
     15e:	89 88       	ldd	r8, Y+17	; 0x11
     160:	08 3c       	cpi	r16, 0xC8	; 200
     162:	ab aa       	std	Y+51, r10	; 0x33
     164:	aa 2a       	or	r10, r26
     166:	3e 00       	.word	0x003e	; ????
     168:	00 00       	nop
     16a:	80 3f       	cpi	r24, 0xF0	; 240
     16c:	02 89       	ldd	r16, Z+18	; 0x12
     16e:	88 08       	sbc	r8, r8
     170:	3e ab       	std	Y+54, r19	; 0x36
     172:	aa aa       	std	Y+50, r10	; 0x32
     174:	aa be       	out	0x3a, r10	; 58
     176:	00 00       	nop
     178:	00 80       	ld	r0, Z
     17a:	3f 06       	cpc	r3, r31
     17c:	64 ec       	ldi	r22, 0xC4	; 196
     17e:	1b 3c       	cpi	r17, 0xCB	; 203
     180:	04 bc       	out	0x24, r0	; 36
     182:	16 3e       	cpi	r17, 0xE6	; 230
     184:	3b e5       	ldi	r19, 0x5B	; 91
     186:	b9 3c       	cpi	r27, 0xC9	; 201
     188:	c9 3c       	cpi	r28, 0xC9	; 201
     18a:	37 c2       	rjmp	.+1134   	; 0x5fa <eval_exp6+0x1ac>
     18c:	9e 5a       	subi	r25, 0xAE	; 174
     18e:	3d 66       	ori	r19, 0x6D	; 109
     190:	04 98       	cbi	0x00, 4	; 0
     192:	08 3e       	cpi	r16, 0xE8	; 232
     194:	ea 69       	ori	r30, 0x9A	; 154
     196:	aa aa       	std	Y+50, r10	; 0x32
     198:	3e 00       	.word	0x003e	; ????
     19a:	00 00       	nop
     19c:	80 3f       	cpi	r24, 0xF0	; 240

0000019e <__trampolines_end>:
     19e:	63 64       	ori	r22, 0x43	; 67
     1a0:	69 6e       	ori	r22, 0xE9	; 233
     1a2:	6f 70       	andi	r22, 0x0F	; 15
     1a4:	73 75       	andi	r23, 0x53	; 83
     1a6:	78 58       	subi	r23, 0x88	; 136
     1a8:	5b 00       	.word	0x005b	; ????

000001aa <pstr_nan>:
     1aa:	4e 41 4e                                            NAN

000001ad <pstr_inity>:
     1ad:	49 4e 49 54 59                                      INITY

000001b2 <pstr_inf>:
     1b2:	49 4e 46                                            INF

000001b5 <pwr_m10>:
     1b5:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     1c5:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

000001cd <pwr_p10>:
     1cd:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     1dd:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

000001e6 <__ctors_end>:
     1e6:	11 24       	eor	r1, r1
     1e8:	1f be       	out	0x3f, r1	; 63
     1ea:	cf e5       	ldi	r28, 0x5F	; 95
     1ec:	d8 e0       	ldi	r29, 0x08	; 8
     1ee:	de bf       	out	0x3e, r29	; 62
     1f0:	cd bf       	out	0x3d, r28	; 61

000001f2 <__do_copy_data>:
     1f2:	10 e0       	ldi	r17, 0x00	; 0
     1f4:	a0 e6       	ldi	r26, 0x60	; 96
     1f6:	b0 e0       	ldi	r27, 0x00	; 0
     1f8:	ea ef       	ldi	r30, 0xFA	; 250
     1fa:	f6 e3       	ldi	r31, 0x36	; 54
     1fc:	02 c0       	rjmp	.+4      	; 0x202 <__do_copy_data+0x10>
     1fe:	05 90       	lpm	r0, Z+
     200:	0d 92       	st	X+, r0
     202:	ac 3d       	cpi	r26, 0xDC	; 220
     204:	b1 07       	cpc	r27, r17
     206:	d9 f7       	brne	.-10     	; 0x1fe <__do_copy_data+0xc>

00000208 <__do_clear_bss>:
     208:	21 e0       	ldi	r18, 0x01	; 1
     20a:	ac ed       	ldi	r26, 0xDC	; 220
     20c:	b0 e0       	ldi	r27, 0x00	; 0
     20e:	01 c0       	rjmp	.+2      	; 0x212 <.do_clear_bss_start>

00000210 <.do_clear_bss_loop>:
     210:	1d 92       	st	X+, r1

00000212 <.do_clear_bss_start>:
     212:	a5 3e       	cpi	r26, 0xE5	; 229
     214:	b2 07       	cpc	r27, r18
     216:	e1 f7       	brne	.-8      	; 0x210 <.do_clear_bss_loop>
     218:	0e 94 07 0d 	call	0x1a0e	; 0x1a0e <main>
     21c:	0c 94 7b 1b 	jmp	0x36f6	; 0x36f6 <_exit>

00000220 <__bad_interrupt>:
     220:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000224 <uart_send>:
        // is needed to handle cases like 233.007
        fpart = fpart * pow(10, afterpoint);

        intToStr((int)fpart, res + i + 1, afterpoint);
    }
}
     224:	5d 9b       	sbis	0x0b, 5	; 11
     226:	fe cf       	rjmp	.-4      	; 0x224 <uart_send>
     228:	8c b9       	out	0x0c, r24	; 12
     22a:	08 95       	ret

0000022c <uart_receive>:
     22c:	5f 9b       	sbis	0x0b, 7	; 11
     22e:	fe cf       	rjmp	.-4      	; 0x22c <uart_receive>
     230:	8c b1       	in	r24, 0x0c	; 12
     232:	08 95       	ret

00000234 <get_token>:
     234:	ef 92       	push	r14
     236:	ff 92       	push	r15
     238:	0f 93       	push	r16
     23a:	1f 93       	push	r17
     23c:	cf 93       	push	r28
     23e:	df 93       	push	r29
     240:	10 92 f2 00 	sts	0x00F2, r1	; 0x8000f2 <tok_type>
     244:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <token>
     248:	e0 91 43 01 	lds	r30, 0x0143	; 0x800143 <exp_ptr>
     24c:	f0 91 44 01 	lds	r31, 0x0144	; 0x800144 <exp_ptr+0x1>
     250:	80 81       	ld	r24, Z
     252:	81 11       	cpse	r24, r1
     254:	06 c0       	rjmp	.+12     	; 0x262 <get_token+0x2e>
     256:	b4 c0       	rjmp	.+360    	; 0x3c0 <get_token+0x18c>
     258:	21 96       	adiw	r28, 0x01	; 1
     25a:	d0 93 44 01 	sts	0x0144, r29	; 0x800144 <exp_ptr+0x1>
     25e:	c0 93 43 01 	sts	0x0143, r28	; 0x800143 <exp_ptr>
     262:	c0 91 43 01 	lds	r28, 0x0143	; 0x800143 <exp_ptr>
     266:	d0 91 44 01 	lds	r29, 0x0144	; 0x800144 <exp_ptr+0x1>
     26a:	f8 80       	ld	r15, Y
     26c:	0f 2d       	mov	r16, r15
     26e:	10 e0       	ldi	r17, 0x00	; 0
     270:	c8 01       	movw	r24, r16
     272:	0e 94 d5 14 	call	0x29aa	; 0x29aa <isspace>
     276:	89 2b       	or	r24, r25
     278:	79 f7       	brne	.-34     	; 0x258 <get_token+0x24>
     27a:	b8 01       	movw	r22, r16
     27c:	86 e6       	ldi	r24, 0x66	; 102
     27e:	90 e0       	ldi	r25, 0x00	; 0
     280:	0e 94 e6 14 	call	0x29cc	; 0x29cc <strchr>
     284:	89 2b       	or	r24, r25
     286:	79 f0       	breq	.+30     	; 0x2a6 <get_token+0x72>
     288:	81 e0       	ldi	r24, 0x01	; 1
     28a:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <tok_type>
     28e:	ce 01       	movw	r24, r28
     290:	01 96       	adiw	r24, 0x01	; 1
     292:	90 93 44 01 	sts	0x0144, r25	; 0x800144 <exp_ptr+0x1>
     296:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <exp_ptr>
     29a:	88 81       	ld	r24, Y
     29c:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <token>
     2a0:	ce ea       	ldi	r28, 0xAE	; 174
     2a2:	d1 e0       	ldi	r29, 0x01	; 1
     2a4:	7b c0       	rjmp	.+246    	; 0x39c <get_token+0x168>
     2a6:	c8 01       	movw	r24, r16
     2a8:	0e 94 cd 14 	call	0x299a	; 0x299a <isalpha>
     2ac:	89 2b       	or	r24, r25
     2ae:	99 f4       	brne	.+38     	; 0x2d6 <get_token+0xa2>
     2b0:	40 c0       	rjmp	.+128    	; 0x332 <get_token+0xfe>
     2b2:	7e 01       	movw	r14, r28
     2b4:	8f ef       	ldi	r24, 0xFF	; 255
     2b6:	e8 1a       	sub	r14, r24
     2b8:	f8 0a       	sbc	r15, r24
     2ba:	c8 01       	movw	r24, r16
     2bc:	01 96       	adiw	r24, 0x01	; 1
     2be:	90 93 44 01 	sts	0x0144, r25	; 0x800144 <exp_ptr+0x1>
     2c2:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <exp_ptr>
     2c6:	f8 01       	movw	r30, r16
     2c8:	80 81       	ld	r24, Z
     2ca:	90 e0       	ldi	r25, 0x00	; 0
     2cc:	0e 94 de 14 	call	0x29bc	; 0x29bc <toupper>
     2d0:	88 83       	st	Y, r24
     2d2:	e7 01       	movw	r28, r14
     2d4:	02 c0       	rjmp	.+4      	; 0x2da <get_token+0xa6>
     2d6:	cd ea       	ldi	r28, 0xAD	; 173
     2d8:	d1 e0       	ldi	r29, 0x01	; 1
     2da:	00 91 43 01 	lds	r16, 0x0143	; 0x800143 <exp_ptr>
     2de:	10 91 44 01 	lds	r17, 0x0144	; 0x800144 <exp_ptr+0x1>
     2e2:	f8 01       	movw	r30, r16
     2e4:	f0 80       	ld	r15, Z
     2e6:	6f 2d       	mov	r22, r15
     2e8:	70 e0       	ldi	r23, 0x00	; 0
     2ea:	80 e7       	ldi	r24, 0x70	; 112
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	0e 94 e6 14 	call	0x29cc	; 0x29cc <strchr>
     2f2:	89 2b       	or	r24, r25
     2f4:	49 f4       	brne	.+18     	; 0x308 <get_token+0xd4>
     2f6:	f1 10       	cpse	r15, r1
     2f8:	dc cf       	rjmp	.-72     	; 0x2b2 <get_token+0x7e>
     2fa:	06 c0       	rjmp	.+12     	; 0x308 <get_token+0xd4>
     2fc:	0f 5f       	subi	r16, 0xFF	; 255
     2fe:	1f 4f       	sbci	r17, 0xFF	; 255
     300:	10 93 44 01 	sts	0x0144, r17	; 0x800144 <exp_ptr+0x1>
     304:	00 93 43 01 	sts	0x0143, r16	; 0x800143 <exp_ptr>
     308:	00 91 43 01 	lds	r16, 0x0143	; 0x800143 <exp_ptr>
     30c:	10 91 44 01 	lds	r17, 0x0144	; 0x800144 <exp_ptr+0x1>
     310:	f8 01       	movw	r30, r16
     312:	f0 80       	ld	r15, Z
     314:	8f 2d       	mov	r24, r15
     316:	90 e0       	ldi	r25, 0x00	; 0
     318:	0e 94 d5 14 	call	0x29aa	; 0x29aa <isspace>
     31c:	89 2b       	or	r24, r25
     31e:	71 f7       	brne	.-36     	; 0x2fc <get_token+0xc8>
     320:	f8 e2       	ldi	r31, 0x28	; 40
     322:	ff 12       	cpse	r15, r31
     324:	02 c0       	rjmp	.+4      	; 0x32a <get_token+0xf6>
     326:	84 e0       	ldi	r24, 0x04	; 4
     328:	01 c0       	rjmp	.+2      	; 0x32c <get_token+0xf8>
     32a:	82 e0       	ldi	r24, 0x02	; 2
     32c:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <tok_type>
     330:	35 c0       	rjmp	.+106    	; 0x39c <get_token+0x168>
     332:	8f 2d       	mov	r24, r15
     334:	90 e0       	ldi	r25, 0x00	; 0
     336:	c0 97       	sbiw	r24, 0x30	; 48
     338:	0a 97       	sbiw	r24, 0x0a	; 10
     33a:	c0 f0       	brcs	.+48     	; 0x36c <get_token+0x138>
     33c:	8e e2       	ldi	r24, 0x2E	; 46
     33e:	f8 16       	cp	r15, r24
     340:	c1 f0       	breq	.+48     	; 0x372 <get_token+0x13e>
     342:	cd ea       	ldi	r28, 0xAD	; 173
     344:	d1 e0       	ldi	r29, 0x01	; 1
     346:	2a c0       	rjmp	.+84     	; 0x39c <get_token+0x168>
     348:	7e 01       	movw	r14, r28
     34a:	ef ef       	ldi	r30, 0xFF	; 255
     34c:	ee 1a       	sub	r14, r30
     34e:	fe 0a       	sbc	r15, r30
     350:	c8 01       	movw	r24, r16
     352:	01 96       	adiw	r24, 0x01	; 1
     354:	90 93 44 01 	sts	0x0144, r25	; 0x800144 <exp_ptr+0x1>
     358:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <exp_ptr>
     35c:	f8 01       	movw	r30, r16
     35e:	80 81       	ld	r24, Z
     360:	90 e0       	ldi	r25, 0x00	; 0
     362:	0e 94 de 14 	call	0x29bc	; 0x29bc <toupper>
     366:	88 83       	st	Y, r24
     368:	e7 01       	movw	r28, r14
     36a:	05 c0       	rjmp	.+10     	; 0x376 <get_token+0x142>
     36c:	cd ea       	ldi	r28, 0xAD	; 173
     36e:	d1 e0       	ldi	r29, 0x01	; 1
     370:	02 c0       	rjmp	.+4      	; 0x376 <get_token+0x142>
     372:	cd ea       	ldi	r28, 0xAD	; 173
     374:	d1 e0       	ldi	r29, 0x01	; 1
     376:	00 91 43 01 	lds	r16, 0x0143	; 0x800143 <exp_ptr>
     37a:	10 91 44 01 	lds	r17, 0x0144	; 0x800144 <exp_ptr+0x1>
     37e:	f8 01       	movw	r30, r16
     380:	f0 80       	ld	r15, Z
     382:	6f 2d       	mov	r22, r15
     384:	70 e0       	ldi	r23, 0x00	; 0
     386:	80 e7       	ldi	r24, 0x70	; 112
     388:	90 e0       	ldi	r25, 0x00	; 0
     38a:	0e 94 e6 14 	call	0x29cc	; 0x29cc <strchr>
     38e:	89 2b       	or	r24, r25
     390:	11 f4       	brne	.+4      	; 0x396 <get_token+0x162>
     392:	f1 10       	cpse	r15, r1
     394:	d9 cf       	rjmp	.-78     	; 0x348 <get_token+0x114>
     396:	83 e0       	ldi	r24, 0x03	; 3
     398:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <tok_type>
     39c:	18 82       	st	Y, r1
     39e:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <tok_type>
     3a2:	82 30       	cpi	r24, 0x02	; 2
     3a4:	69 f4       	brne	.+26     	; 0x3c0 <get_token+0x18c>
     3a6:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <token+0x1>
     3aa:	88 23       	and	r24, r24
     3ac:	49 f0       	breq	.+18     	; 0x3c0 <get_token+0x18c>
     3ae:	89 e0       	ldi	r24, 0x09	; 9
     3b0:	ed e7       	ldi	r30, 0x7D	; 125
     3b2:	f0 e0       	ldi	r31, 0x00	; 0
     3b4:	a3 ef       	ldi	r26, 0xF3	; 243
     3b6:	b0 e0       	ldi	r27, 0x00	; 0
     3b8:	01 90       	ld	r0, Z+
     3ba:	0d 92       	st	X+, r0
     3bc:	8a 95       	dec	r24
     3be:	e1 f7       	brne	.-8      	; 0x3b8 <get_token+0x184>
     3c0:	df 91       	pop	r29
     3c2:	cf 91       	pop	r28
     3c4:	1f 91       	pop	r17
     3c6:	0f 91       	pop	r16
     3c8:	ff 90       	pop	r15
     3ca:	ef 90       	pop	r14
     3cc:	08 95       	ret

000003ce <eval_exp2>:
     3ce:	8f 92       	push	r8
     3d0:	9f 92       	push	r9
     3d2:	af 92       	push	r10
     3d4:	bf 92       	push	r11
     3d6:	cf 92       	push	r12
     3d8:	df 92       	push	r13
     3da:	ef 92       	push	r14
     3dc:	ff 92       	push	r15
     3de:	cf 93       	push	r28
     3e0:	0e 94 67 04 	call	0x8ce	; 0x8ce <eval_exp3>
     3e4:	4b 01       	movw	r8, r22
     3e6:	5c 01       	movw	r10, r24
     3e8:	c1 2c       	mov	r12, r1
     3ea:	d1 2c       	mov	r13, r1
     3ec:	76 01       	movw	r14, r12
     3ee:	1d c0       	rjmp	.+58     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
     3f0:	0e 94 1a 01 	call	0x234	; 0x234 <get_token>
     3f4:	c7 01       	movw	r24, r14
     3f6:	b6 01       	movw	r22, r12
     3f8:	0e 94 67 04 	call	0x8ce	; 0x8ce <eval_exp3>
     3fc:	6b 01       	movw	r12, r22
     3fe:	7c 01       	movw	r14, r24
     400:	cb 32       	cpi	r28, 0x2B	; 43
     402:	59 f0       	breq	.+22     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
     404:	cd 32       	cpi	r28, 0x2D	; 45
     406:	89 f4       	brne	.+34     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
     408:	9b 01       	movw	r18, r22
     40a:	ac 01       	movw	r20, r24
     40c:	c5 01       	movw	r24, r10
     40e:	b4 01       	movw	r22, r8
     410:	0e 94 74 0d 	call	0x1ae8	; 0x1ae8 <__subsf3>
     414:	4b 01       	movw	r8, r22
     416:	5c 01       	movw	r10, r24
     418:	08 c0       	rjmp	.+16     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
     41a:	9b 01       	movw	r18, r22
     41c:	ac 01       	movw	r20, r24
     41e:	c5 01       	movw	r24, r10
     420:	b4 01       	movw	r22, r8
     422:	0e 94 75 0d 	call	0x1aea	; 0x1aea <__addsf3>
     426:	4b 01       	movw	r8, r22
     428:	5c 01       	movw	r10, r24
     42a:	c0 91 ad 01 	lds	r28, 0x01AD	; 0x8001ad <token>
     42e:	cb 32       	cpi	r28, 0x2B	; 43
     430:	f9 f2       	breq	.-66     	; 0x3f0 <eval_exp2+0x22>
     432:	cd 32       	cpi	r28, 0x2D	; 45
     434:	e9 f2       	breq	.-70     	; 0x3f0 <eval_exp2+0x22>
     436:	c5 01       	movw	r24, r10
     438:	b4 01       	movw	r22, r8
     43a:	cf 91       	pop	r28
     43c:	ff 90       	pop	r15
     43e:	ef 90       	pop	r14
     440:	df 90       	pop	r13
     442:	cf 90       	pop	r12
     444:	bf 90       	pop	r11
     446:	af 90       	pop	r10
     448:	9f 90       	pop	r9
     44a:	8f 90       	pop	r8
     44c:	08 95       	ret

0000044e <eval_exp6>:
     44e:	df 92       	push	r13
     450:	ef 92       	push	r14
     452:	ff 92       	push	r15
     454:	0f 93       	push	r16
     456:	1f 93       	push	r17
     458:	cf 93       	push	r28
     45a:	df 93       	push	r29
     45c:	cd b7       	in	r28, 0x3d	; 61
     45e:	de b7       	in	r29, 0x3e	; 62
     460:	c0 55       	subi	r28, 0x50	; 80
     462:	d1 09       	sbc	r29, r1
     464:	0f b6       	in	r0, 0x3f	; 63
     466:	f8 94       	cli
     468:	de bf       	out	0x3e, r29	; 62
     46a:	0f be       	out	0x3f, r0	; 63
     46c:	cd bf       	out	0x3d, r28	; 61
     46e:	e6 2e       	mov	r14, r22
     470:	f7 2e       	mov	r15, r23
     472:	08 2f       	mov	r16, r24
     474:	d9 2e       	mov	r13, r25
     476:	10 91 f2 00 	lds	r17, 0x00F2	; 0x8000f2 <tok_type>
     47a:	14 30       	cpi	r17, 0x04	; 4
     47c:	41 f4       	brne	.+16     	; 0x48e <eval_exp6+0x40>
     47e:	6d ea       	ldi	r22, 0xAD	; 173
     480:	71 e0       	ldi	r23, 0x01	; 1
     482:	ce 01       	movw	r24, r28
     484:	01 96       	adiw	r24, 0x01	; 1
     486:	0e 94 fa 14 	call	0x29f4	; 0x29f4 <strcpy>
     48a:	0e 94 1a 01 	call	0x234	; 0x234 <get_token>
     48e:	e0 91 ad 01 	lds	r30, 0x01AD	; 0x8001ad <token>
     492:	e8 32       	cpi	r30, 0x28	; 40
     494:	09 f0       	breq	.+2      	; 0x498 <eval_exp6+0x4a>
     496:	81 c1       	rjmp	.+770    	; 0x79a <eval_exp6+0x34c>
     498:	0e 94 1a 01 	call	0x234	; 0x234 <get_token>
     49c:	6e 2d       	mov	r22, r14
     49e:	7f 2d       	mov	r23, r15
     4a0:	80 2f       	mov	r24, r16
     4a2:	9d 2d       	mov	r25, r13
     4a4:	0e 94 e7 01 	call	0x3ce	; 0x3ce <eval_exp2>
     4a8:	e6 2e       	mov	r14, r22
     4aa:	f7 2e       	mov	r15, r23
     4ac:	08 2f       	mov	r16, r24
     4ae:	d9 2e       	mov	r13, r25
     4b0:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <token>
     4b4:	89 32       	cpi	r24, 0x29	; 41
     4b6:	49 f0       	breq	.+18     	; 0x4ca <eval_exp6+0x7c>
     4b8:	86 e0       	ldi	r24, 0x06	; 6
     4ba:	e3 ed       	ldi	r30, 0xD3	; 211
     4bc:	f0 e0       	ldi	r31, 0x00	; 0
     4be:	a3 ef       	ldi	r26, 0xF3	; 243
     4c0:	b0 e0       	ldi	r27, 0x00	; 0
     4c2:	01 90       	ld	r0, Z+
     4c4:	0d 92       	st	X+, r0
     4c6:	8a 95       	dec	r24
     4c8:	e1 f7       	brne	.-8      	; 0x4c2 <eval_exp6+0x74>
     4ca:	14 30       	cpi	r17, 0x04	; 4
     4cc:	09 f0       	breq	.+2      	; 0x4d0 <eval_exp6+0x82>
     4ce:	61 c1       	rjmp	.+706    	; 0x792 <eval_exp6+0x344>
     4d0:	67 e8       	ldi	r22, 0x87	; 135
     4d2:	70 e0       	ldi	r23, 0x00	; 0
     4d4:	ce 01       	movw	r24, r28
     4d6:	01 96       	adiw	r24, 0x01	; 1
     4d8:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <strcmp>
     4dc:	89 2b       	or	r24, r25
     4de:	89 f4       	brne	.+34     	; 0x502 <eval_exp6+0xb4>
     4e0:	25 e3       	ldi	r18, 0x35	; 53
     4e2:	3a ef       	ldi	r19, 0xFA	; 250
     4e4:	4e e8       	ldi	r20, 0x8E	; 142
     4e6:	5c e3       	ldi	r21, 0x3C	; 60
     4e8:	6e 2d       	mov	r22, r14
     4ea:	7f 2d       	mov	r23, r15
     4ec:	80 2f       	mov	r24, r16
     4ee:	9d 2d       	mov	r25, r13
     4f0:	0e 94 ff 11 	call	0x23fe	; 0x23fe <__mulsf3>
     4f4:	0e 94 06 13 	call	0x260c	; 0x260c <sin>
     4f8:	e6 2e       	mov	r14, r22
     4fa:	f7 2e       	mov	r15, r23
     4fc:	08 2f       	mov	r16, r24
     4fe:	d9 2e       	mov	r13, r25
     500:	48 c1       	rjmp	.+656    	; 0x792 <eval_exp6+0x344>
     502:	6c e8       	ldi	r22, 0x8C	; 140
     504:	70 e0       	ldi	r23, 0x00	; 0
     506:	ce 01       	movw	r24, r28
     508:	01 96       	adiw	r24, 0x01	; 1
     50a:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <strcmp>
     50e:	89 2b       	or	r24, r25
     510:	89 f4       	brne	.+34     	; 0x534 <eval_exp6+0xe6>
     512:	25 e3       	ldi	r18, 0x35	; 53
     514:	3a ef       	ldi	r19, 0xFA	; 250
     516:	4e e8       	ldi	r20, 0x8E	; 142
     518:	5c e3       	ldi	r21, 0x3C	; 60
     51a:	6e 2d       	mov	r22, r14
     51c:	7f 2d       	mov	r23, r15
     51e:	80 2f       	mov	r24, r16
     520:	9d 2d       	mov	r25, r13
     522:	0e 94 ff 11 	call	0x23fe	; 0x23fe <__mulsf3>
     526:	0e 94 47 0e 	call	0x1c8e	; 0x1c8e <cos>
     52a:	e6 2e       	mov	r14, r22
     52c:	f7 2e       	mov	r15, r23
     52e:	08 2f       	mov	r16, r24
     530:	d9 2e       	mov	r13, r25
     532:	2f c1       	rjmp	.+606    	; 0x792 <eval_exp6+0x344>
     534:	61 e9       	ldi	r22, 0x91	; 145
     536:	70 e0       	ldi	r23, 0x00	; 0
     538:	ce 01       	movw	r24, r28
     53a:	01 96       	adiw	r24, 0x01	; 1
     53c:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <strcmp>
     540:	89 2b       	or	r24, r25
     542:	89 f4       	brne	.+34     	; 0x566 <eval_exp6+0x118>
     544:	25 e3       	ldi	r18, 0x35	; 53
     546:	3a ef       	ldi	r19, 0xFA	; 250
     548:	4e e8       	ldi	r20, 0x8E	; 142
     54a:	5c e3       	ldi	r21, 0x3C	; 60
     54c:	6e 2d       	mov	r22, r14
     54e:	7f 2d       	mov	r23, r15
     550:	80 2f       	mov	r24, r16
     552:	9d 2d       	mov	r25, r13
     554:	0e 94 ff 11 	call	0x23fe	; 0x23fe <__mulsf3>
     558:	0e 94 8c 13 	call	0x2718	; 0x2718 <tan>
     55c:	e6 2e       	mov	r14, r22
     55e:	f7 2e       	mov	r15, r23
     560:	08 2f       	mov	r16, r24
     562:	d9 2e       	mov	r13, r25
     564:	16 c1       	rjmp	.+556    	; 0x792 <eval_exp6+0x344>
     566:	66 e8       	ldi	r22, 0x86	; 134
     568:	70 e0       	ldi	r23, 0x00	; 0
     56a:	ce 01       	movw	r24, r28
     56c:	01 96       	adiw	r24, 0x01	; 1
     56e:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <strcmp>
     572:	89 2b       	or	r24, r25
     574:	89 f4       	brne	.+34     	; 0x598 <eval_exp6+0x14a>
     576:	6e 2d       	mov	r22, r14
     578:	7f 2d       	mov	r23, r15
     57a:	80 2f       	mov	r24, r16
     57c:	9d 2d       	mov	r25, r13
     57e:	0e 94 e1 0d 	call	0x1bc2	; 0x1bc2 <asin>
     582:	20 ee       	ldi	r18, 0xE0	; 224
     584:	3e e2       	ldi	r19, 0x2E	; 46
     586:	45 e6       	ldi	r20, 0x65	; 101
     588:	52 e4       	ldi	r21, 0x42	; 66
     58a:	0e 94 ff 11 	call	0x23fe	; 0x23fe <__mulsf3>
     58e:	e6 2e       	mov	r14, r22
     590:	f7 2e       	mov	r15, r23
     592:	08 2f       	mov	r16, r24
     594:	d9 2e       	mov	r13, r25
     596:	fd c0       	rjmp	.+506    	; 0x792 <eval_exp6+0x344>
     598:	6b e8       	ldi	r22, 0x8B	; 139
     59a:	70 e0       	ldi	r23, 0x00	; 0
     59c:	ce 01       	movw	r24, r28
     59e:	01 96       	adiw	r24, 0x01	; 1
     5a0:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <strcmp>
     5a4:	89 2b       	or	r24, r25
     5a6:	89 f4       	brne	.+34     	; 0x5ca <eval_exp6+0x17c>
     5a8:	6e 2d       	mov	r22, r14
     5aa:	7f 2d       	mov	r23, r15
     5ac:	80 2f       	mov	r24, r16
     5ae:	9d 2d       	mov	r25, r13
     5b0:	0e 94 63 0d 	call	0x1ac6	; 0x1ac6 <acos>
     5b4:	20 ee       	ldi	r18, 0xE0	; 224
     5b6:	3e e2       	ldi	r19, 0x2E	; 46
     5b8:	45 e6       	ldi	r20, 0x65	; 101
     5ba:	52 e4       	ldi	r21, 0x42	; 66
     5bc:	0e 94 ff 11 	call	0x23fe	; 0x23fe <__mulsf3>
     5c0:	e6 2e       	mov	r14, r22
     5c2:	f7 2e       	mov	r15, r23
     5c4:	08 2f       	mov	r16, r24
     5c6:	d9 2e       	mov	r13, r25
     5c8:	e4 c0       	rjmp	.+456    	; 0x792 <eval_exp6+0x344>
     5ca:	60 e9       	ldi	r22, 0x90	; 144
     5cc:	70 e0       	ldi	r23, 0x00	; 0
     5ce:	ce 01       	movw	r24, r28
     5d0:	01 96       	adiw	r24, 0x01	; 1
     5d2:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <strcmp>
     5d6:	89 2b       	or	r24, r25
     5d8:	89 f4       	brne	.+34     	; 0x5fc <eval_exp6+0x1ae>
     5da:	6e 2d       	mov	r22, r14
     5dc:	7f 2d       	mov	r23, r15
     5de:	80 2f       	mov	r24, r16
     5e0:	9d 2d       	mov	r25, r13
     5e2:	0e 94 fc 0d 	call	0x1bf8	; 0x1bf8 <atan>
     5e6:	20 ee       	ldi	r18, 0xE0	; 224
     5e8:	3e e2       	ldi	r19, 0x2E	; 46
     5ea:	45 e6       	ldi	r20, 0x65	; 101
     5ec:	52 e4       	ldi	r21, 0x42	; 66
     5ee:	0e 94 ff 11 	call	0x23fe	; 0x23fe <__mulsf3>
     5f2:	e6 2e       	mov	r14, r22
     5f4:	f7 2e       	mov	r15, r23
     5f6:	08 2f       	mov	r16, r24
     5f8:	d9 2e       	mov	r13, r25
     5fa:	cb c0       	rjmp	.+406    	; 0x792 <eval_exp6+0x344>
     5fc:	65 e9       	ldi	r22, 0x95	; 149
     5fe:	70 e0       	ldi	r23, 0x00	; 0
     600:	ce 01       	movw	r24, r28
     602:	01 96       	adiw	r24, 0x01	; 1
     604:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <strcmp>
     608:	89 2b       	or	r24, r25
     60a:	59 f4       	brne	.+22     	; 0x622 <eval_exp6+0x1d4>
     60c:	6e 2d       	mov	r22, r14
     60e:	7f 2d       	mov	r23, r15
     610:	80 2f       	mov	r24, r16
     612:	9d 2d       	mov	r25, r13
     614:	0e 94 e0 12 	call	0x25c0	; 0x25c0 <sinh>
     618:	e6 2e       	mov	r14, r22
     61a:	f7 2e       	mov	r15, r23
     61c:	08 2f       	mov	r16, r24
     61e:	d9 2e       	mov	r13, r25
     620:	b8 c0       	rjmp	.+368    	; 0x792 <eval_exp6+0x344>
     622:	6a e9       	ldi	r22, 0x9A	; 154
     624:	70 e0       	ldi	r23, 0x00	; 0
     626:	ce 01       	movw	r24, r28
     628:	01 96       	adiw	r24, 0x01	; 1
     62a:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <strcmp>
     62e:	89 2b       	or	r24, r25
     630:	59 f4       	brne	.+22     	; 0x648 <eval_exp6+0x1fa>
     632:	6e 2d       	mov	r22, r14
     634:	7f 2d       	mov	r23, r15
     636:	80 2f       	mov	r24, r16
     638:	9d 2d       	mov	r25, r13
     63a:	0e 94 30 0e 	call	0x1c60	; 0x1c60 <cosh>
     63e:	e6 2e       	mov	r14, r22
     640:	f7 2e       	mov	r15, r23
     642:	08 2f       	mov	r16, r24
     644:	d9 2e       	mov	r13, r25
     646:	a5 c0       	rjmp	.+330    	; 0x792 <eval_exp6+0x344>
     648:	6f e9       	ldi	r22, 0x9F	; 159
     64a:	70 e0       	ldi	r23, 0x00	; 0
     64c:	ce 01       	movw	r24, r28
     64e:	01 96       	adiw	r24, 0x01	; 1
     650:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <strcmp>
     654:	89 2b       	or	r24, r25
     656:	59 f4       	brne	.+22     	; 0x66e <eval_exp6+0x220>
     658:	6e 2d       	mov	r22, r14
     65a:	7f 2d       	mov	r23, r15
     65c:	80 2f       	mov	r24, r16
     65e:	9d 2d       	mov	r25, r13
     660:	0e 94 58 13 	call	0x26b0	; 0x26b0 <tanh>
     664:	e6 2e       	mov	r14, r22
     666:	f7 2e       	mov	r15, r23
     668:	08 2f       	mov	r16, r24
     66a:	d9 2e       	mov	r13, r25
     66c:	92 c0       	rjmp	.+292    	; 0x792 <eval_exp6+0x344>
     66e:	64 ea       	ldi	r22, 0xA4	; 164
     670:	70 e0       	ldi	r23, 0x00	; 0
     672:	ce 01       	movw	r24, r28
     674:	01 96       	adiw	r24, 0x01	; 1
     676:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <strcmp>
     67a:	89 2b       	or	r24, r25
     67c:	59 f4       	brne	.+22     	; 0x694 <eval_exp6+0x246>
     67e:	6e 2d       	mov	r22, r14
     680:	7f 2d       	mov	r23, r15
     682:	80 2f       	mov	r24, r16
     684:	9d 2d       	mov	r25, r13
     686:	0e 94 83 11 	call	0x2306	; 0x2306 <log>
     68a:	e6 2e       	mov	r14, r22
     68c:	f7 2e       	mov	r15, r23
     68e:	08 2f       	mov	r16, r24
     690:	d9 2e       	mov	r13, r25
     692:	7f c0       	rjmp	.+254    	; 0x792 <eval_exp6+0x344>
     694:	67 ea       	ldi	r22, 0xA7	; 167
     696:	70 e0       	ldi	r23, 0x00	; 0
     698:	ce 01       	movw	r24, r28
     69a:	01 96       	adiw	r24, 0x01	; 1
     69c:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <strcmp>
     6a0:	89 2b       	or	r24, r25
     6a2:	59 f4       	brne	.+22     	; 0x6ba <eval_exp6+0x26c>
     6a4:	6e 2d       	mov	r22, r14
     6a6:	7f 2d       	mov	r23, r15
     6a8:	80 2f       	mov	r24, r16
     6aa:	9d 2d       	mov	r25, r13
     6ac:	0e 94 73 11 	call	0x22e6	; 0x22e6 <log10>
     6b0:	e6 2e       	mov	r14, r22
     6b2:	f7 2e       	mov	r15, r23
     6b4:	08 2f       	mov	r16, r24
     6b6:	d9 2e       	mov	r13, r25
     6b8:	6c c0       	rjmp	.+216    	; 0x792 <eval_exp6+0x344>
     6ba:	6b ea       	ldi	r22, 0xAB	; 171
     6bc:	70 e0       	ldi	r23, 0x00	; 0
     6be:	ce 01       	movw	r24, r28
     6c0:	01 96       	adiw	r24, 0x01	; 1
     6c2:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <strcmp>
     6c6:	89 2b       	or	r24, r25
     6c8:	59 f4       	brne	.+22     	; 0x6e0 <eval_exp6+0x292>
     6ca:	6e 2d       	mov	r22, r14
     6cc:	7f 2d       	mov	r23, r15
     6ce:	80 2f       	mov	r24, r16
     6d0:	9d 2d       	mov	r25, r13
     6d2:	0e 94 c6 0e 	call	0x1d8c	; 0x1d8c <exp>
     6d6:	e6 2e       	mov	r14, r22
     6d8:	f7 2e       	mov	r15, r23
     6da:	08 2f       	mov	r16, r24
     6dc:	d9 2e       	mov	r13, r25
     6de:	59 c0       	rjmp	.+178    	; 0x792 <eval_exp6+0x344>
     6e0:	6d ea       	ldi	r22, 0xAD	; 173
     6e2:	70 e0       	ldi	r23, 0x00	; 0
     6e4:	ce 01       	movw	r24, r28
     6e6:	01 96       	adiw	r24, 0x01	; 1
     6e8:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <strcmp>
     6ec:	89 2b       	or	r24, r25
     6ee:	59 f4       	brne	.+22     	; 0x706 <eval_exp6+0x2b8>
     6f0:	6e 2d       	mov	r22, r14
     6f2:	7f 2d       	mov	r23, r15
     6f4:	80 2f       	mov	r24, r16
     6f6:	9d 2d       	mov	r25, r13
     6f8:	0e 94 14 13 	call	0x2628	; 0x2628 <sqrt>
     6fc:	e6 2e       	mov	r14, r22
     6fe:	f7 2e       	mov	r15, r23
     700:	08 2f       	mov	r16, r24
     702:	d9 2e       	mov	r13, r25
     704:	46 c0       	rjmp	.+140    	; 0x792 <eval_exp6+0x344>
     706:	62 eb       	ldi	r22, 0xB2	; 178
     708:	70 e0       	ldi	r23, 0x00	; 0
     70a:	ce 01       	movw	r24, r28
     70c:	01 96       	adiw	r24, 0x01	; 1
     70e:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <strcmp>
     712:	89 2b       	or	r24, r25
     714:	79 f4       	brne	.+30     	; 0x734 <eval_exp6+0x2e6>
     716:	2e 2d       	mov	r18, r14
     718:	3f 2d       	mov	r19, r15
     71a:	40 2f       	mov	r20, r16
     71c:	5d 2d       	mov	r21, r13
     71e:	6e 2d       	mov	r22, r14
     720:	7f 2d       	mov	r23, r15
     722:	80 2f       	mov	r24, r16
     724:	9d 2d       	mov	r25, r13
     726:	0e 94 ff 11 	call	0x23fe	; 0x23fe <__mulsf3>
     72a:	e6 2e       	mov	r14, r22
     72c:	f7 2e       	mov	r15, r23
     72e:	08 2f       	mov	r16, r24
     730:	d9 2e       	mov	r13, r25
     732:	2f c0       	rjmp	.+94     	; 0x792 <eval_exp6+0x344>
     734:	66 eb       	ldi	r22, 0xB6	; 182
     736:	70 e0       	ldi	r23, 0x00	; 0
     738:	ce 01       	movw	r24, r28
     73a:	01 96       	adiw	r24, 0x01	; 1
     73c:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <strcmp>
     740:	89 2b       	or	r24, r25
     742:	59 f4       	brne	.+22     	; 0x75a <eval_exp6+0x30c>
     744:	6e 2d       	mov	r22, r14
     746:	7f 2d       	mov	r23, r15
     748:	80 2f       	mov	r24, r16
     74a:	9d 2d       	mov	r25, r13
     74c:	0e 94 bc 12 	call	0x2578	; 0x2578 <round>
     750:	e6 2e       	mov	r14, r22
     752:	f7 2e       	mov	r15, r23
     754:	08 2f       	mov	r16, r24
     756:	d9 2e       	mov	r13, r25
     758:	1c c0       	rjmp	.+56     	; 0x792 <eval_exp6+0x344>
     75a:	6c eb       	ldi	r22, 0xBC	; 188
     75c:	70 e0       	ldi	r23, 0x00	; 0
     75e:	ce 01       	movw	r24, r28
     760:	01 96       	adiw	r24, 0x01	; 1
     762:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <strcmp>
     766:	89 2b       	or	r24, r25
     768:	59 f4       	brne	.+22     	; 0x780 <eval_exp6+0x332>
     76a:	6e 2d       	mov	r22, r14
     76c:	7f 2d       	mov	r23, r15
     76e:	80 2f       	mov	r24, r16
     770:	9d 2d       	mov	r25, r13
     772:	0e 94 b5 0f 	call	0x1f6a	; 0x1f6a <floor>
     776:	e6 2e       	mov	r14, r22
     778:	f7 2e       	mov	r15, r23
     77a:	08 2f       	mov	r16, r24
     77c:	d9 2e       	mov	r13, r25
     77e:	09 c0       	rjmp	.+18     	; 0x792 <eval_exp6+0x344>
     780:	86 e0       	ldi	r24, 0x06	; 6
     782:	e3 ed       	ldi	r30, 0xD3	; 211
     784:	f0 e0       	ldi	r31, 0x00	; 0
     786:	a3 ef       	ldi	r26, 0xF3	; 243
     788:	b0 e0       	ldi	r27, 0x00	; 0
     78a:	01 90       	ld	r0, Z+
     78c:	0d 92       	st	X+, r0
     78e:	8a 95       	dec	r24
     790:	e1 f7       	brne	.-8      	; 0x78a <eval_exp6+0x33c>
     792:	0e 94 1a 01 	call	0x234	; 0x234 <get_token>
     796:	1d 2d       	mov	r17, r13
     798:	2c c0       	rjmp	.+88     	; 0x7f2 <eval_exp6+0x3a4>
     79a:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <tok_type>
     79e:	82 30       	cpi	r24, 0x02	; 2
     7a0:	19 f0       	breq	.+6      	; 0x7a8 <eval_exp6+0x35a>
     7a2:	83 30       	cpi	r24, 0x03	; 3
     7a4:	89 f0       	breq	.+34     	; 0x7c8 <eval_exp6+0x37a>
     7a6:	1b c0       	rjmp	.+54     	; 0x7de <eval_exp6+0x390>
     7a8:	f0 e0       	ldi	r31, 0x00	; 0
     7aa:	e1 54       	subi	r30, 0x41	; 65
     7ac:	f1 09       	sbc	r31, r1
     7ae:	ee 0f       	add	r30, r30
     7b0:	ff 1f       	adc	r31, r31
     7b2:	ee 0f       	add	r30, r30
     7b4:	ff 1f       	adc	r31, r31
     7b6:	eb 5b       	subi	r30, 0xBB	; 187
     7b8:	fe 4f       	sbci	r31, 0xFE	; 254
     7ba:	e0 80       	ld	r14, Z
     7bc:	f1 80       	ldd	r15, Z+1	; 0x01
     7be:	02 81       	ldd	r16, Z+2	; 0x02
     7c0:	13 81       	ldd	r17, Z+3	; 0x03
     7c2:	0e 94 1a 01 	call	0x234	; 0x234 <get_token>
     7c6:	15 c0       	rjmp	.+42     	; 0x7f2 <eval_exp6+0x3a4>
     7c8:	8d ea       	ldi	r24, 0xAD	; 173
     7ca:	91 e0       	ldi	r25, 0x01	; 1
     7cc:	0e 94 c6 14 	call	0x298c	; 0x298c <atof>
     7d0:	e6 2e       	mov	r14, r22
     7d2:	f7 2e       	mov	r15, r23
     7d4:	08 2f       	mov	r16, r24
     7d6:	19 2f       	mov	r17, r25
     7d8:	0e 94 1a 01 	call	0x234	; 0x234 <get_token>
     7dc:	0a c0       	rjmp	.+20     	; 0x7f2 <eval_exp6+0x3a4>
     7de:	8d e0       	ldi	r24, 0x0D	; 13
     7e0:	e0 ec       	ldi	r30, 0xC0	; 192
     7e2:	f0 e0       	ldi	r31, 0x00	; 0
     7e4:	a3 ef       	ldi	r26, 0xF3	; 243
     7e6:	b0 e0       	ldi	r27, 0x00	; 0
     7e8:	01 90       	ld	r0, Z+
     7ea:	0d 92       	st	X+, r0
     7ec:	8a 95       	dec	r24
     7ee:	e1 f7       	brne	.-8      	; 0x7e8 <eval_exp6+0x39a>
     7f0:	1d 2d       	mov	r17, r13
     7f2:	6e 2d       	mov	r22, r14
     7f4:	7f 2d       	mov	r23, r15
     7f6:	80 2f       	mov	r24, r16
     7f8:	91 2f       	mov	r25, r17
     7fa:	c0 5b       	subi	r28, 0xB0	; 176
     7fc:	df 4f       	sbci	r29, 0xFF	; 255
     7fe:	0f b6       	in	r0, 0x3f	; 63
     800:	f8 94       	cli
     802:	de bf       	out	0x3e, r29	; 62
     804:	0f be       	out	0x3f, r0	; 63
     806:	cd bf       	out	0x3d, r28	; 61
     808:	df 91       	pop	r29
     80a:	cf 91       	pop	r28
     80c:	1f 91       	pop	r17
     80e:	0f 91       	pop	r16
     810:	ff 90       	pop	r15
     812:	ef 90       	pop	r14
     814:	df 90       	pop	r13
     816:	08 95       	ret

00000818 <eval_exp5>:
     818:	cf 92       	push	r12
     81a:	df 92       	push	r13
     81c:	ef 92       	push	r14
     81e:	ff 92       	push	r15
     820:	cf 93       	push	r28
     822:	6b 01       	movw	r12, r22
     824:	7c 01       	movw	r14, r24
     826:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <tok_type>
     82a:	81 30       	cpi	r24, 0x01	; 1
     82c:	49 f4       	brne	.+18     	; 0x840 <eval_exp5+0x28>
     82e:	c0 91 ad 01 	lds	r28, 0x01AD	; 0x8001ad <token>
     832:	cb 32       	cpi	r28, 0x2B	; 43
     834:	11 f0       	breq	.+4      	; 0x83a <eval_exp5+0x22>
     836:	cd 32       	cpi	r28, 0x2D	; 45
     838:	29 f4       	brne	.+10     	; 0x844 <eval_exp5+0x2c>
     83a:	0e 94 1a 01 	call	0x234	; 0x234 <get_token>
     83e:	03 c0       	rjmp	.+6      	; 0x846 <eval_exp5+0x2e>
     840:	c0 e0       	ldi	r28, 0x00	; 0
     842:	01 c0       	rjmp	.+2      	; 0x846 <eval_exp5+0x2e>
     844:	c0 e0       	ldi	r28, 0x00	; 0
     846:	c7 01       	movw	r24, r14
     848:	b6 01       	movw	r22, r12
     84a:	0e 94 27 02 	call	0x44e	; 0x44e <eval_exp6>
     84e:	cd 32       	cpi	r28, 0x2D	; 45
     850:	09 f4       	brne	.+2      	; 0x854 <eval_exp5+0x3c>
     852:	90 58       	subi	r25, 0x80	; 128
     854:	cf 91       	pop	r28
     856:	ff 90       	pop	r15
     858:	ef 90       	pop	r14
     85a:	df 90       	pop	r13
     85c:	cf 90       	pop	r12
     85e:	08 95       	ret

00000860 <eval_exp4>:
     860:	cf 92       	push	r12
     862:	df 92       	push	r13
     864:	ef 92       	push	r14
     866:	ff 92       	push	r15
     868:	0f 93       	push	r16
     86a:	1f 93       	push	r17
     86c:	cf 93       	push	r28
     86e:	df 93       	push	r29
     870:	0e 94 0c 04 	call	0x818	; 0x818 <eval_exp5>
     874:	06 2f       	mov	r16, r22
     876:	17 2f       	mov	r17, r23
     878:	d8 2f       	mov	r29, r24
     87a:	c9 2f       	mov	r28, r25
     87c:	c1 2c       	mov	r12, r1
     87e:	d1 2c       	mov	r13, r1
     880:	76 01       	movw	r14, r12
     882:	14 c0       	rjmp	.+40     	; 0x8ac <eval_exp4+0x4c>
     884:	0e 94 1a 01 	call	0x234	; 0x234 <get_token>
     888:	c7 01       	movw	r24, r14
     88a:	b6 01       	movw	r22, r12
     88c:	0e 94 0c 04 	call	0x818	; 0x818 <eval_exp5>
     890:	6b 01       	movw	r12, r22
     892:	7c 01       	movw	r14, r24
     894:	9b 01       	movw	r18, r22
     896:	ac 01       	movw	r20, r24
     898:	60 2f       	mov	r22, r16
     89a:	71 2f       	mov	r23, r17
     89c:	8d 2f       	mov	r24, r29
     89e:	9c 2f       	mov	r25, r28
     8a0:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <pow>
     8a4:	06 2f       	mov	r16, r22
     8a6:	17 2f       	mov	r17, r23
     8a8:	d8 2f       	mov	r29, r24
     8aa:	c9 2f       	mov	r28, r25
     8ac:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <token>
     8b0:	8e 35       	cpi	r24, 0x5E	; 94
     8b2:	41 f3       	breq	.-48     	; 0x884 <eval_exp4+0x24>
     8b4:	60 2f       	mov	r22, r16
     8b6:	71 2f       	mov	r23, r17
     8b8:	8d 2f       	mov	r24, r29
     8ba:	9c 2f       	mov	r25, r28
     8bc:	df 91       	pop	r29
     8be:	cf 91       	pop	r28
     8c0:	1f 91       	pop	r17
     8c2:	0f 91       	pop	r16
     8c4:	ff 90       	pop	r15
     8c6:	ef 90       	pop	r14
     8c8:	df 90       	pop	r13
     8ca:	cf 90       	pop	r12
     8cc:	08 95       	ret

000008ce <eval_exp3>:
     8ce:	8f 92       	push	r8
     8d0:	9f 92       	push	r9
     8d2:	af 92       	push	r10
     8d4:	bf 92       	push	r11
     8d6:	cf 92       	push	r12
     8d8:	df 92       	push	r13
     8da:	ef 92       	push	r14
     8dc:	ff 92       	push	r15
     8de:	cf 93       	push	r28
     8e0:	0e 94 30 04 	call	0x860	; 0x860 <eval_exp4>
     8e4:	4b 01       	movw	r8, r22
     8e6:	5c 01       	movw	r10, r24
     8e8:	c1 2c       	mov	r12, r1
     8ea:	d1 2c       	mov	r13, r1
     8ec:	76 01       	movw	r14, r12
     8ee:	1d c0       	rjmp	.+58     	; 0x92a <eval_exp3+0x5c>
     8f0:	0e 94 1a 01 	call	0x234	; 0x234 <get_token>
     8f4:	c7 01       	movw	r24, r14
     8f6:	b6 01       	movw	r22, r12
     8f8:	0e 94 30 04 	call	0x860	; 0x860 <eval_exp4>
     8fc:	6b 01       	movw	r12, r22
     8fe:	7c 01       	movw	r14, r24
     900:	cf 32       	cpi	r28, 0x2F	; 47
     902:	59 f0       	breq	.+22     	; 0x91a <eval_exp3+0x4c>
     904:	c8 37       	cpi	r28, 0x78	; 120
     906:	89 f4       	brne	.+34     	; 0x92a <eval_exp3+0x5c>
     908:	9b 01       	movw	r18, r22
     90a:	ac 01       	movw	r20, r24
     90c:	c5 01       	movw	r24, r10
     90e:	b4 01       	movw	r22, r8
     910:	0e 94 ff 11 	call	0x23fe	; 0x23fe <__mulsf3>
     914:	4b 01       	movw	r8, r22
     916:	5c 01       	movw	r10, r24
     918:	08 c0       	rjmp	.+16     	; 0x92a <eval_exp3+0x5c>
     91a:	9b 01       	movw	r18, r22
     91c:	ac 01       	movw	r20, r24
     91e:	c5 01       	movw	r24, r10
     920:	b4 01       	movw	r22, r8
     922:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <__divsf3>
     926:	4b 01       	movw	r8, r22
     928:	5c 01       	movw	r10, r24
     92a:	c0 91 ad 01 	lds	r28, 0x01AD	; 0x8001ad <token>
     92e:	c8 37       	cpi	r28, 0x78	; 120
     930:	f9 f2       	breq	.-66     	; 0x8f0 <eval_exp3+0x22>
     932:	cf 32       	cpi	r28, 0x2F	; 47
     934:	e9 f2       	breq	.-70     	; 0x8f0 <eval_exp3+0x22>
     936:	c5 01       	movw	r24, r10
     938:	b4 01       	movw	r22, r8
     93a:	cf 91       	pop	r28
     93c:	ff 90       	pop	r15
     93e:	ef 90       	pop	r14
     940:	df 90       	pop	r13
     942:	cf 90       	pop	r12
     944:	bf 90       	pop	r11
     946:	af 90       	pop	r10
     948:	9f 90       	pop	r9
     94a:	8f 90       	pop	r8
     94c:	08 95       	ret

0000094e <eval_exp1>:
     94e:	8f 92       	push	r8
     950:	9f 92       	push	r9
     952:	af 92       	push	r10
     954:	bf 92       	push	r11
     956:	cf 92       	push	r12
     958:	df 92       	push	r13
     95a:	ef 92       	push	r14
     95c:	ff 92       	push	r15
     95e:	0f 93       	push	r16
     960:	1f 93       	push	r17
     962:	cf 93       	push	r28
     964:	df 93       	push	r29
     966:	cd b7       	in	r28, 0x3d	; 61
     968:	de b7       	in	r29, 0x3e	; 62
     96a:	c0 55       	subi	r28, 0x50	; 80
     96c:	d1 09       	sbc	r29, r1
     96e:	0f b6       	in	r0, 0x3f	; 63
     970:	f8 94       	cli
     972:	de bf       	out	0x3e, r29	; 62
     974:	0f be       	out	0x3f, r0	; 63
     976:	cd bf       	out	0x3d, r28	; 61
     978:	4b 01       	movw	r8, r22
     97a:	5c 01       	movw	r10, r24
     97c:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <tok_type>
     980:	82 30       	cpi	r24, 0x02	; 2
     982:	09 f0       	breq	.+2      	; 0x986 <eval_exp1+0x38>
     984:	43 c0       	rjmp	.+134    	; 0xa0c <eval_exp1+0xbe>
     986:	c0 90 43 01 	lds	r12, 0x0143	; 0x800143 <exp_ptr>
     98a:	d0 90 44 01 	lds	r13, 0x0144	; 0x800144 <exp_ptr+0x1>
     98e:	6d ea       	ldi	r22, 0xAD	; 173
     990:	71 e0       	ldi	r23, 0x01	; 1
     992:	ce 01       	movw	r24, r28
     994:	01 96       	adiw	r24, 0x01	; 1
     996:	0e 94 fa 14 	call	0x29f4	; 0x29f4 <strcpy>
     99a:	0f 2e       	mov	r0, r31
     99c:	fd ea       	ldi	r31, 0xAD	; 173
     99e:	ef 2e       	mov	r14, r31
     9a0:	f1 e0       	ldi	r31, 0x01	; 1
     9a2:	ff 2e       	mov	r15, r31
     9a4:	f0 2d       	mov	r31, r0
     9a6:	f7 01       	movw	r30, r14
     9a8:	00 81       	ld	r16, Z
     9aa:	10 e0       	ldi	r17, 0x00	; 0
     9ac:	01 54       	subi	r16, 0x41	; 65
     9ae:	11 09       	sbc	r17, r1
     9b0:	0e 94 1a 01 	call	0x234	; 0x234 <get_token>
     9b4:	f7 01       	movw	r30, r14
     9b6:	80 81       	ld	r24, Z
     9b8:	8d 33       	cpi	r24, 0x3D	; 61
     9ba:	71 f0       	breq	.+28     	; 0x9d8 <eval_exp1+0x8a>
     9bc:	d0 92 44 01 	sts	0x0144, r13	; 0x800144 <exp_ptr+0x1>
     9c0:	c0 92 43 01 	sts	0x0143, r12	; 0x800143 <exp_ptr>
     9c4:	be 01       	movw	r22, r28
     9c6:	6f 5f       	subi	r22, 0xFF	; 255
     9c8:	7f 4f       	sbci	r23, 0xFF	; 255
     9ca:	c7 01       	movw	r24, r14
     9cc:	0e 94 fa 14 	call	0x29f4	; 0x29f4 <strcpy>
     9d0:	82 e0       	ldi	r24, 0x02	; 2
     9d2:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <tok_type>
     9d6:	1a c0       	rjmp	.+52     	; 0xa0c <eval_exp1+0xbe>
     9d8:	0e 94 1a 01 	call	0x234	; 0x234 <get_token>
     9dc:	c5 01       	movw	r24, r10
     9de:	b4 01       	movw	r22, r8
     9e0:	0e 94 e7 01 	call	0x3ce	; 0x3ce <eval_exp2>
     9e4:	00 0f       	add	r16, r16
     9e6:	11 1f       	adc	r17, r17
     9e8:	00 0f       	add	r16, r16
     9ea:	11 1f       	adc	r17, r17
     9ec:	f8 01       	movw	r30, r16
     9ee:	eb 5b       	subi	r30, 0xBB	; 187
     9f0:	fe 4f       	sbci	r31, 0xFE	; 254
     9f2:	06 2f       	mov	r16, r22
     9f4:	17 2f       	mov	r17, r23
     9f6:	28 2f       	mov	r18, r24
     9f8:	39 2f       	mov	r19, r25
     9fa:	00 83       	st	Z, r16
     9fc:	11 83       	std	Z+1, r17	; 0x01
     9fe:	22 83       	std	Z+2, r18	; 0x02
     a00:	33 83       	std	Z+3, r19	; 0x03
     a02:	56 2f       	mov	r21, r22
     a04:	47 2f       	mov	r20, r23
     a06:	38 2f       	mov	r19, r24
     a08:	29 2f       	mov	r18, r25
     a0a:	08 c0       	rjmp	.+16     	; 0xa1c <eval_exp1+0xce>
     a0c:	c5 01       	movw	r24, r10
     a0e:	b4 01       	movw	r22, r8
     a10:	0e 94 e7 01 	call	0x3ce	; 0x3ce <eval_exp2>
     a14:	56 2f       	mov	r21, r22
     a16:	47 2f       	mov	r20, r23
     a18:	38 2f       	mov	r19, r24
     a1a:	29 2f       	mov	r18, r25
     a1c:	65 2f       	mov	r22, r21
     a1e:	74 2f       	mov	r23, r20
     a20:	83 2f       	mov	r24, r19
     a22:	92 2f       	mov	r25, r18
     a24:	c0 5b       	subi	r28, 0xB0	; 176
     a26:	df 4f       	sbci	r29, 0xFF	; 255
     a28:	0f b6       	in	r0, 0x3f	; 63
     a2a:	f8 94       	cli
     a2c:	de bf       	out	0x3e, r29	; 62
     a2e:	0f be       	out	0x3f, r0	; 63
     a30:	cd bf       	out	0x3d, r28	; 61
     a32:	df 91       	pop	r29
     a34:	cf 91       	pop	r28
     a36:	1f 91       	pop	r17
     a38:	0f 91       	pop	r16
     a3a:	ff 90       	pop	r15
     a3c:	ef 90       	pop	r14
     a3e:	df 90       	pop	r13
     a40:	cf 90       	pop	r12
     a42:	bf 90       	pop	r11
     a44:	af 90       	pop	r10
     a46:	9f 90       	pop	r9
     a48:	8f 90       	pop	r8
     a4a:	08 95       	ret

00000a4c <eval_exp>:
     a4c:	10 92 f3 00 	sts	0x00F3, r1	; 0x8000f3 <errormsg>
     a50:	90 93 44 01 	sts	0x0144, r25	; 0x800144 <exp_ptr+0x1>
     a54:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <exp_ptr>
     a58:	0e 94 1a 01 	call	0x234	; 0x234 <get_token>
     a5c:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <token>
     a60:	81 11       	cpse	r24, r1
     a62:	0e c0       	rjmp	.+28     	; 0xa80 <eval_exp+0x34>
     a64:	86 e0       	ldi	r24, 0x06	; 6
     a66:	e3 ed       	ldi	r30, 0xD3	; 211
     a68:	f0 e0       	ldi	r31, 0x00	; 0
     a6a:	a3 ef       	ldi	r26, 0xF3	; 243
     a6c:	b0 e0       	ldi	r27, 0x00	; 0
     a6e:	01 90       	ld	r0, Z+
     a70:	0d 92       	st	X+, r0
     a72:	8a 95       	dec	r24
     a74:	e1 f7       	brne	.-8      	; 0xa6e <eval_exp+0x22>
     a76:	50 e0       	ldi	r21, 0x00	; 0
     a78:	40 e0       	ldi	r20, 0x00	; 0
     a7a:	30 e0       	ldi	r19, 0x00	; 0
     a7c:	20 e0       	ldi	r18, 0x00	; 0
     a7e:	1b c0       	rjmp	.+54     	; 0xab6 <eval_exp+0x6a>
     a80:	60 e0       	ldi	r22, 0x00	; 0
     a82:	70 e0       	ldi	r23, 0x00	; 0
     a84:	cb 01       	movw	r24, r22
     a86:	0e 94 a7 04 	call	0x94e	; 0x94e <eval_exp1>
     a8a:	20 91 ad 01 	lds	r18, 0x01AD	; 0x8001ad <token>
     a8e:	22 23       	and	r18, r18
     a90:	71 f0       	breq	.+28     	; 0xaae <eval_exp+0x62>
     a92:	26 e0       	ldi	r18, 0x06	; 6
     a94:	e3 ed       	ldi	r30, 0xD3	; 211
     a96:	f0 e0       	ldi	r31, 0x00	; 0
     a98:	a3 ef       	ldi	r26, 0xF3	; 243
     a9a:	b0 e0       	ldi	r27, 0x00	; 0
     a9c:	01 90       	ld	r0, Z+
     a9e:	0d 92       	st	X+, r0
     aa0:	2a 95       	dec	r18
     aa2:	e1 f7       	brne	.-8      	; 0xa9c <eval_exp+0x50>
     aa4:	56 2f       	mov	r21, r22
     aa6:	47 2f       	mov	r20, r23
     aa8:	38 2f       	mov	r19, r24
     aaa:	29 2f       	mov	r18, r25
     aac:	04 c0       	rjmp	.+8      	; 0xab6 <eval_exp+0x6a>
     aae:	56 2f       	mov	r21, r22
     ab0:	47 2f       	mov	r20, r23
     ab2:	38 2f       	mov	r19, r24
     ab4:	29 2f       	mov	r18, r25
     ab6:	65 2f       	mov	r22, r21
     ab8:	74 2f       	mov	r23, r20
     aba:	83 2f       	mov	r24, r19
     abc:	92 2f       	mov	r25, r18
     abe:	08 95       	ret

00000ac0 <parse_exp>:
double parse_exp(char *expstr)
{
     ac0:	cf 92       	push	r12
     ac2:	df 92       	push	r13
     ac4:	ef 92       	push	r14
     ac6:	ff 92       	push	r15
     ac8:	dc 01       	movw	r26, r24
    int i,len=strlen(expstr);
     aca:	fc 01       	movw	r30, r24
     acc:	01 90       	ld	r0, Z+
     ace:	00 20       	and	r0, r0
     ad0:	e9 f7       	brne	.-6      	; 0xacc <parse_exp+0xc>
     ad2:	31 97       	sbiw	r30, 0x01	; 1
     ad4:	bf 01       	movw	r22, r30
     ad6:	68 1b       	sub	r22, r24
     ad8:	79 0b       	sbc	r23, r25
    for(i=0;i<len;i++)
     ada:	20 e0       	ldi	r18, 0x00	; 0
     adc:	30 e0       	ldi	r19, 0x00	; 0
     ade:	0e c0       	rjmp	.+28     	; 0xafc <parse_exp+0x3c>
    {
        if('a'<=expstr[i]&&expstr[i]<='z'&&expstr[i]!='x')expstr[i]=expstr[i]-32;
     ae0:	fd 01       	movw	r30, r26
     ae2:	e2 0f       	add	r30, r18
     ae4:	f3 1f       	adc	r31, r19
     ae6:	90 81       	ld	r25, Z
     ae8:	4f e9       	ldi	r20, 0x9F	; 159
     aea:	49 0f       	add	r20, r25
     aec:	4a 31       	cpi	r20, 0x1A	; 26
     aee:	20 f4       	brcc	.+8      	; 0xaf8 <parse_exp+0x38>
     af0:	98 37       	cpi	r25, 0x78	; 120
     af2:	11 f0       	breq	.+4      	; 0xaf8 <parse_exp+0x38>
     af4:	90 52       	subi	r25, 0x20	; 32
     af6:	90 83       	st	Z, r25
    }
}
double parse_exp(char *expstr)
{
    int i,len=strlen(expstr);
    for(i=0;i<len;i++)
     af8:	2f 5f       	subi	r18, 0xFF	; 255
     afa:	3f 4f       	sbci	r19, 0xFF	; 255
     afc:	26 17       	cp	r18, r22
     afe:	37 07       	cpc	r19, r23
     b00:	7c f3       	brlt	.-34     	; 0xae0 <parse_exp+0x20>
    {
        if('a'<=expstr[i]&&expstr[i]<='z'&&expstr[i]!='x')expstr[i]=expstr[i]-32;
    }
    double ans = eval_exp(expstr);
     b02:	cd 01       	movw	r24, r26
     b04:	0e 94 26 05 	call	0xa4c	; 0xa4c <eval_exp>
     b08:	6b 01       	movw	r12, r22
     b0a:	7c 01       	movw	r14, r24
    for(int i=0; i<20; i++) {
     b0c:	80 e0       	ldi	r24, 0x00	; 0
     b0e:	90 e0       	ldi	r25, 0x00	; 0
     b10:	05 c0       	rjmp	.+10     	; 0xb1c <parse_exp+0x5c>
        rans[i] = '\0';
     b12:	fc 01       	movw	r30, r24
     b14:	e4 52       	subi	r30, 0x24	; 36
     b16:	ff 4f       	sbci	r31, 0xFF	; 255
     b18:	10 82       	st	Z, r1
    for(i=0;i<len;i++)
    {
        if('a'<=expstr[i]&&expstr[i]<='z'&&expstr[i]!='x')expstr[i]=expstr[i]-32;
    }
    double ans = eval_exp(expstr);
    for(int i=0; i<20; i++) {
     b1a:	01 96       	adiw	r24, 0x01	; 1
     b1c:	84 31       	cpi	r24, 0x14	; 20
     b1e:	91 05       	cpc	r25, r1
     b20:	c4 f3       	brlt	.-16     	; 0xb12 <parse_exp+0x52>
        rans[i] = '\0';
    }
    if (*errormsg)
     b22:	80 91 f3 00 	lds	r24, 0x00F3	; 0x8000f3 <errormsg>
     b26:	81 11       	cpse	r24, r1
     b28:	1b c0       	rjmp	.+54     	; 0xb60 <parse_exp+0xa0>
            errormsg[i]='\0';
        }
        rans[n]='\0';*/
        ans=1e18;
    }
    else if(ans<0)
     b2a:	20 e0       	ldi	r18, 0x00	; 0
     b2c:	30 e0       	ldi	r19, 0x00	; 0
     b2e:	a9 01       	movw	r20, r18
     b30:	c7 01       	movw	r24, r14
     b32:	b6 01       	movw	r22, r12
     b34:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__cmpsf2>
     b38:	88 23       	and	r24, r24
     b3a:	4c f4       	brge	.+18     	; 0xb4e <parse_exp+0x8e>
    {
        ans=ans-0.0005;
     b3c:	2f e6       	ldi	r18, 0x6F	; 111
     b3e:	32 e1       	ldi	r19, 0x12	; 18
     b40:	43 e0       	ldi	r20, 0x03	; 3
     b42:	5a e3       	ldi	r21, 0x3A	; 58
     b44:	c7 01       	movw	r24, r14
     b46:	b6 01       	movw	r22, r12
     b48:	0e 94 74 0d 	call	0x1ae8	; 0x1ae8 <__subsf3>
     b4c:	0d c0       	rjmp	.+26     	; 0xb68 <parse_exp+0xa8>
    }
	else
	{
		ans=ans+0.0005;
     b4e:	2f e6       	ldi	r18, 0x6F	; 111
     b50:	32 e1       	ldi	r19, 0x12	; 18
     b52:	43 e0       	ldi	r20, 0x03	; 3
     b54:	5a e3       	ldi	r21, 0x3A	; 58
     b56:	c7 01       	movw	r24, r14
     b58:	b6 01       	movw	r22, r12
     b5a:	0e 94 75 0d 	call	0x1aea	; 0x1aea <__addsf3>
     b5e:	04 c0       	rjmp	.+8      	; 0xb68 <parse_exp+0xa8>
        {
            rans[i]=errormsg[i];
            errormsg[i]='\0';
        }
        rans[n]='\0';*/
        ans=1e18;
     b60:	6b e6       	ldi	r22, 0x6B	; 107
     b62:	7b e0       	ldi	r23, 0x0B	; 11
     b64:	8e e5       	ldi	r24, 0x5E	; 94
     b66:	9d e5       	ldi	r25, 0x5D	; 93
	else
	{
		ans=ans+0.0005;
	}
    return ans;
}
     b68:	ff 90       	pop	r15
     b6a:	ef 90       	pop	r14
     b6c:	df 90       	pop	r13
     b6e:	cf 90       	pop	r12
     b70:	08 95       	ret

00000b72 <command>:
{
	/*PORTC=0X02;
	PORTD=cmd;
	PORTC=0X00;*/
	//Implementing previous PORTC=0X02;
	cport=PORTC&(0b11001111);
     b72:	95 b3       	in	r25, 0x15	; 21
     b74:	9f 7c       	andi	r25, 0xCF	; 207
	cport=cport|(2<<4);
     b76:	90 62       	ori	r25, 0x20	; 32
     b78:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <cport>
	PORTC=cport;
     b7c:	95 bb       	out	0x15, r25	; 21
	//Implementing previous PORTD=cmd;
	dport=PORTD&(0b00000011);
     b7e:	92 b3       	in	r25, 0x12	; 18
     b80:	93 70       	andi	r25, 0x03	; 3
     b82:	90 93 f0 00 	sts	0x00F0, r25	; 0x8000f0 <dport>
	ddata=cmd&(0b11111100);
     b86:	28 2f       	mov	r18, r24
     b88:	2c 7f       	andi	r18, 0xFC	; 252
     b8a:	20 93 ef 00 	sts	0x00EF, r18	; 0x8000ef <ddata>
	cdata=cmd&(0b00000011);
	cdata=cdata<<6;
     b8e:	82 95       	swap	r24
     b90:	88 0f       	add	r24, r24
     b92:	88 0f       	add	r24, r24
     b94:	80 7c       	andi	r24, 0xC0	; 192
     b96:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <cdata>
	cport=PORTC&(0b00111111);
     b9a:	35 b3       	in	r19, 0x15	; 21
     b9c:	3f 73       	andi	r19, 0x3F	; 63
	dport=dport|ddata;
     b9e:	92 2b       	or	r25, r18
     ba0:	90 93 f0 00 	sts	0x00F0, r25	; 0x8000f0 <dport>
	cport=cport|cdata;
     ba4:	83 2b       	or	r24, r19
     ba6:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <cport>
	PORTD=dport;
     baa:	92 bb       	out	0x12, r25	; 18
	PORTC=cport;
     bac:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <cport>
     bb0:	85 bb       	out	0x15, r24	; 21
	//Implementing previous PORTC=0X00;
	cport=PORTC&(0b11001111);
     bb2:	85 b3       	in	r24, 0x15	; 21
     bb4:	8f 7c       	andi	r24, 0xCF	; 207
     bb6:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <cport>
	cport=cport|(0<<4);
	PORTC=cport;
     bba:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     bbc:	81 ee       	ldi	r24, 0xE1	; 225
     bbe:	94 e0       	ldi	r25, 0x04	; 4
     bc0:	01 97       	sbiw	r24, 0x01	; 1
     bc2:	f1 f7       	brne	.-4      	; 0xbc0 <command+0x4e>
     bc4:	00 c0       	rjmp	.+0      	; 0xbc6 <command+0x54>
     bc6:	00 00       	nop
     bc8:	08 95       	ret

00000bca <lcd_data>:
{
	/*PORTC=0X03;r
	PORTD=data;
	PORTC=0X01;*/
	//Implementing previous PORTC=0X03;
	cport=PORTC&(0b11001111);
     bca:	95 b3       	in	r25, 0x15	; 21
	cport=cport|(3<<4);
     bcc:	90 63       	ori	r25, 0x30	; 48
     bce:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <cport>
	PORTC=cport;
     bd2:	95 bb       	out	0x15, r25	; 21
	//Implementing previous PORTD=data;
	dport=PORTD&(0b00000011);
     bd4:	92 b3       	in	r25, 0x12	; 18
     bd6:	93 70       	andi	r25, 0x03	; 3
     bd8:	90 93 f0 00 	sts	0x00F0, r25	; 0x8000f0 <dport>
	ddata=data&(0b11111100);
     bdc:	28 2f       	mov	r18, r24
     bde:	2c 7f       	andi	r18, 0xFC	; 252
     be0:	20 93 ef 00 	sts	0x00EF, r18	; 0x8000ef <ddata>
	cdata=data&(0b00000011);
	cdata=cdata<<6;
     be4:	82 95       	swap	r24
     be6:	88 0f       	add	r24, r24
     be8:	88 0f       	add	r24, r24
     bea:	80 7c       	andi	r24, 0xC0	; 192
     bec:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <cdata>
	cport=PORTC&(0b00111111);
     bf0:	35 b3       	in	r19, 0x15	; 21
     bf2:	3f 73       	andi	r19, 0x3F	; 63
	dport=dport|ddata;
     bf4:	92 2b       	or	r25, r18
     bf6:	90 93 f0 00 	sts	0x00F0, r25	; 0x8000f0 <dport>
	cport=cport|cdata;
     bfa:	83 2b       	or	r24, r19
     bfc:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <cport>
	PORTD=dport;
     c00:	92 bb       	out	0x12, r25	; 18
	PORTC=cport;
     c02:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <cport>
     c06:	85 bb       	out	0x15, r24	; 21
	//Implementing previous PORTC=0X01;
	cport=PORTC&(0b11001111);
     c08:	85 b3       	in	r24, 0x15	; 21
     c0a:	8f 7c       	andi	r24, 0xCF	; 207
	cport=cport|(1<<4);
     c0c:	80 61       	ori	r24, 0x10	; 16
     c0e:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <cport>
	PORTC=cport;
     c12:	85 bb       	out	0x15, r24	; 21
     c14:	81 ee       	ldi	r24, 0xE1	; 225
     c16:	94 e0       	ldi	r25, 0x04	; 4
     c18:	01 97       	sbiw	r24, 0x01	; 1
     c1a:	f1 f7       	brne	.-4      	; 0xc18 <lcd_data+0x4e>
     c1c:	00 c0       	rjmp	.+0      	; 0xc1e <lcd_data+0x54>
     c1e:	00 00       	nop
     c20:	08 95       	ret

00000c22 <uart_init>:
	_delay_ms(5);
}
void uart_init()
{
	UCSRA = 0b00000010;
     c22:	82 e0       	ldi	r24, 0x02	; 2
     c24:	8b b9       	out	0x0b, r24	; 11
	UCSRB = 0b10011000;
     c26:	88 e9       	ldi	r24, 0x98	; 152
     c28:	8a b9       	out	0x0a, r24	; 10
	UCSRC = 0b10000110;
     c2a:	86 e8       	ldi	r24, 0x86	; 134
     c2c:	80 bd       	out	0x20, r24	; 32
	
	UBRRH = 0;
     c2e:	10 bc       	out	0x20, r1	; 32
	UBRRL = 12;
     c30:	8c e0       	ldi	r24, 0x0C	; 12
     c32:	89 b9       	out	0x09, r24	; 9
     c34:	08 95       	ret

00000c36 <clrScr>:
	while ((UCSRA & (1<<RXC)) == 0x00);
	return UDR;
}
void clrScr()
{
	for(int i=0; i<18; i++) {
     c36:	80 e0       	ldi	r24, 0x00	; 0
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	0d c0       	rjmp	.+26     	; 0xc56 <clrScr+0x20>
		isEnd[i] = 0;
     c3c:	fc 01       	movw	r30, r24
     c3e:	ef 5c       	subi	r30, 0xCF	; 207
     c40:	fe 4f       	sbci	r31, 0xFE	; 254
     c42:	10 82       	st	Z, r1
		expStr[i] = rans[i] = '\0';
     c44:	fc 01       	movw	r30, r24
     c46:	e4 52       	subi	r30, 0x24	; 36
     c48:	ff 4f       	sbci	r31, 0xFF	; 255
     c4a:	10 82       	st	Z, r1
     c4c:	fc 01       	movw	r30, r24
     c4e:	e9 53       	subi	r30, 0x39	; 57
     c50:	fe 4f       	sbci	r31, 0xFE	; 254
     c52:	10 82       	st	Z, r1
	while ((UCSRA & (1<<RXC)) == 0x00);
	return UDR;
}
void clrScr()
{
	for(int i=0; i<18; i++) {
     c54:	01 96       	adiw	r24, 0x01	; 1
     c56:	82 31       	cpi	r24, 0x12	; 18
     c58:	91 05       	cpc	r25, r1
     c5a:	84 f3       	brlt	.-32     	; 0xc3c <clrScr+0x6>
		isEnd[i] = 0;
		expStr[i] = rans[i] = '\0';
	}
	currpos = 0;
     c5c:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <currpos+0x1>
     c60:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <currpos>
	command(0x01);
     c64:	81 e0       	ldi	r24, 0x01	; 1
     c66:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
     c6a:	08 95       	ret

00000c6c <printExp>:
}
void printExp()
{
     c6c:	cf 93       	push	r28
     c6e:	df 93       	push	r29
	command(0x01);
     c70:	81 e0       	ldi	r24, 0x01	; 1
     c72:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
	for(int i=0;i<currpos;i++)
     c76:	c0 e0       	ldi	r28, 0x00	; 0
     c78:	d0 e0       	ldi	r29, 0x00	; 0
     c7a:	0a c0       	rjmp	.+20     	; 0xc90 <printExp+0x24>
	{
		lcd_data(expStr[i]);
     c7c:	fe 01       	movw	r30, r28
     c7e:	e9 53       	subi	r30, 0x39	; 57
     c80:	fe 4f       	sbci	r31, 0xFE	; 254
     c82:	80 81       	ld	r24, Z
     c84:	0e 94 e5 05 	call	0xbca	; 0xbca <lcd_data>
		command(0x06);
     c88:	86 e0       	ldi	r24, 0x06	; 6
     c8a:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
	command(0x01);
}
void printExp()
{
	command(0x01);
	for(int i=0;i<currpos;i++)
     c8e:	21 96       	adiw	r28, 0x01	; 1
     c90:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <currpos>
     c94:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <currpos+0x1>
     c98:	c8 17       	cp	r28, r24
     c9a:	d9 07       	cpc	r29, r25
     c9c:	7c f3       	brlt	.-34     	; 0xc7c <printExp+0x10>
	{
		lcd_data(expStr[i]);
		command(0x06);
	}
}
     c9e:	df 91       	pop	r29
     ca0:	cf 91       	pop	r28
     ca2:	08 95       	ret

00000ca4 <printRes>:
void printRes()
{
     ca4:	2f 92       	push	r2
     ca6:	3f 92       	push	r3
     ca8:	4f 92       	push	r4
     caa:	5f 92       	push	r5
     cac:	6f 92       	push	r6
     cae:	7f 92       	push	r7
     cb0:	8f 92       	push	r8
     cb2:	9f 92       	push	r9
     cb4:	af 92       	push	r10
     cb6:	bf 92       	push	r11
     cb8:	cf 92       	push	r12
     cba:	df 92       	push	r13
     cbc:	ef 92       	push	r14
     cbe:	ff 92       	push	r15
     cc0:	0f 93       	push	r16
     cc2:	1f 93       	push	r17
     cc4:	cf 93       	push	r28
     cc6:	df 93       	push	r29
     cc8:	cd b7       	in	r28, 0x3d	; 61
     cca:	de b7       	in	r29, 0x3e	; 62
     ccc:	e1 97       	sbiw	r28, 0x31	; 49
     cce:	0f b6       	in	r0, 0x3f	; 63
     cd0:	f8 94       	cli
     cd2:	de bf       	out	0x3e, r29	; 62
     cd4:	0f be       	out	0x3f, r0	; 63
     cd6:	cd bf       	out	0x3d, r28	; 61
	double d=parse_exp(expStr);
     cd8:	87 ec       	ldi	r24, 0xC7	; 199
     cda:	91 e0       	ldi	r25, 0x01	; 1
     cdc:	0e 94 60 05 	call	0xac0	; 0xac0 <parse_exp>
     ce0:	6b 01       	movw	r12, r22
     ce2:	7c 01       	movw	r14, r24
	if(d<=NMAX||d>=PMAX)
     ce4:	21 e2       	ldi	r18, 0x21	; 33
     ce6:	36 ee       	ldi	r19, 0xE6	; 230
     ce8:	45 eb       	ldi	r20, 0xB5	; 181
     cea:	56 ed       	ldi	r21, 0xD6	; 214
     cec:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__cmpsf2>
     cf0:	18 16       	cp	r1, r24
     cf2:	54 f4       	brge	.+20     	; 0xd08 <printRes+0x64>
     cf4:	29 ea       	ldi	r18, 0xA9	; 169
     cf6:	3f e5       	ldi	r19, 0x5F	; 95
     cf8:	43 e6       	ldi	r20, 0x63	; 99
     cfa:	58 e5       	ldi	r21, 0x58	; 88
     cfc:	c7 01       	movw	r24, r14
     cfe:	b6 01       	movw	r22, r12
     d00:	0e 94 2c 11 	call	0x2258	; 0x2258 <__gesf2>
     d04:	88 23       	and	r24, r24
     d06:	54 f0       	brlt	.+20     	; 0xd1c <printRes+0x78>
	{
		sprintf(rans,"Range Error");
     d08:	8c e0       	ldi	r24, 0x0C	; 12
     d0a:	ed ec       	ldi	r30, 0xCD	; 205
     d0c:	f0 e0       	ldi	r31, 0x00	; 0
     d0e:	ac ed       	ldi	r26, 0xDC	; 220
     d10:	b0 e0       	ldi	r27, 0x00	; 0
     d12:	01 90       	ld	r0, Z+
     d14:	0d 92       	st	X+, r0
     d16:	8a 95       	dec	r24
     d18:	e1 f7       	brne	.-8      	; 0xd12 <printRes+0x6e>
     d1a:	8f c2       	rjmp	.+1310   	; 0x123a <printRes+0x596>
	}
	else
	{
		long long denominator=1;
		int i,sign_bit=0;
		if(d<0)
     d1c:	20 e0       	ldi	r18, 0x00	; 0
     d1e:	30 e0       	ldi	r19, 0x00	; 0
     d20:	a9 01       	movw	r20, r18
     d22:	c7 01       	movw	r24, r14
     d24:	b6 01       	movw	r22, r12
     d26:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__cmpsf2>
     d2a:	88 23       	and	r24, r24
     d2c:	3c f4       	brge	.+14     	; 0xd3c <printRes+0x98>
		{
			sign_bit=1;
			d=-d;
     d2e:	f7 fa       	bst	r15, 7
     d30:	f0 94       	com	r15
     d32:	f7 f8       	bld	r15, 7
     d34:	f0 94       	com	r15
	{
		long long denominator=1;
		int i,sign_bit=0;
		if(d<0)
		{
			sign_bit=1;
     d36:	81 e0       	ldi	r24, 0x01	; 1
     d38:	90 e0       	ldi	r25, 0x00	; 0
     d3a:	02 c0       	rjmp	.+4      	; 0xd40 <printRes+0x9c>
		sprintf(rans,"Range Error");
	}
	else
	{
		long long denominator=1;
		int i,sign_bit=0;
     d3c:	80 e0       	ldi	r24, 0x00	; 0
     d3e:	90 e0       	ldi	r25, 0x00	; 0
		{
			sign_bit=1;
			d=-d;
		}
		long long rng;
		if(sign_bit)
     d40:	89 2b       	or	r24, r25
     d42:	89 f0       	breq	.+34     	; 0xd66 <printRes+0xc2>
		{
			rans[0]='-';
     d44:	8d e2       	ldi	r24, 0x2D	; 45
     d46:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__data_end>
			rng=-NMAX;
     d4a:	1f 8a       	std	Y+23, r1	; 0x17
     d4c:	80 e4       	ldi	r24, 0x40	; 64
     d4e:	88 8f       	std	Y+24, r24	; 0x18
     d50:	9a e7       	ldi	r25, 0x7A	; 122
     d52:	99 8f       	std	Y+25, r25	; 0x19
     d54:	e0 e1       	ldi	r30, 0x10	; 16
     d56:	ea 8f       	std	Y+26, r30	; 0x1a
     d58:	83 ef       	ldi	r24, 0xF3	; 243
     d5a:	8b 8f       	std	Y+27, r24	; 0x1b
     d5c:	9a e5       	ldi	r25, 0x5A	; 90
     d5e:	9c 8f       	std	Y+28, r25	; 0x1c
     d60:	1d 8e       	std	Y+29, r1	; 0x1d
     d62:	1e 8e       	std	Y+30, r1	; 0x1e
     d64:	0e c0       	rjmp	.+28     	; 0xd82 <printRes+0xde>
		}
		else rng=PMAX;
     d66:	1f 8a       	std	Y+23, r1	; 0x17
     d68:	e0 e8       	ldi	r30, 0x80	; 128
     d6a:	e8 8f       	std	Y+24, r30	; 0x18
     d6c:	86 ec       	ldi	r24, 0xC6	; 198
     d6e:	89 8f       	std	Y+25, r24	; 0x19
     d70:	94 ea       	ldi	r25, 0xA4	; 164
     d72:	9a 8f       	std	Y+26, r25	; 0x1a
     d74:	ee e7       	ldi	r30, 0x7E	; 126
     d76:	eb 8f       	std	Y+27, r30	; 0x1b
     d78:	8d e8       	ldi	r24, 0x8D	; 141
     d7a:	8c 8f       	std	Y+28, r24	; 0x1c
     d7c:	93 e0       	ldi	r25, 0x03	; 3
     d7e:	9d 8f       	std	Y+29, r25	; 0x1d
     d80:	1e 8e       	std	Y+30, r1	; 0x1e
		int pos=strlen(rans);
     d82:	ec ed       	ldi	r30, 0xDC	; 220
     d84:	f0 e0       	ldi	r31, 0x00	; 0
     d86:	01 90       	ld	r0, Z+
     d88:	00 20       	and	r0, r0
     d8a:	e9 f7       	brne	.-6      	; 0xd86 <printRes+0xe2>
     d8c:	31 97       	sbiw	r30, 0x01	; 1
     d8e:	cf 01       	movw	r24, r30
     d90:	8c 5d       	subi	r24, 0xDC	; 220
     d92:	90 40       	sbci	r25, 0x00	; 0
     d94:	9c 83       	std	Y+4, r25	; 0x04
     d96:	8b 83       	std	Y+3, r24	; 0x03
	{
		sprintf(rans,"Range Error");
	}
	else
	{
		long long denominator=1;
     d98:	91 e0       	ldi	r25, 0x01	; 1
     d9a:	9f 87       	std	Y+15, r25	; 0x0f
     d9c:	18 8a       	std	Y+16, r1	; 0x10
     d9e:	19 8a       	std	Y+17, r1	; 0x11
     da0:	1a 8a       	std	Y+18, r1	; 0x12
     da2:	1b 8a       	std	Y+19, r1	; 0x13
     da4:	1c 8a       	std	Y+20, r1	; 0x14
     da6:	1d 8a       	std	Y+21, r1	; 0x15
     da8:	1e 8a       	std	Y+22, r1	; 0x16
     daa:	44 24       	eor	r4, r4
     dac:	43 94       	inc	r4
     dae:	51 2c       	mov	r5, r1
     db0:	61 2c       	mov	r6, r1
     db2:	71 2c       	mov	r7, r1
     db4:	a1 2c       	mov	r10, r1
     db6:	b1 2c       	mov	r11, r1
     db8:	10 e0       	ldi	r17, 0x00	; 0
     dba:	00 e0       	ldi	r16, 0x00	; 0
			rans[0]='-';
			rng=-NMAX;
		}
		else rng=PMAX;
		int pos=strlen(rans);
		while(d>0 && d*10<rng && denominator<1000)
     dbc:	34 c0       	rjmp	.+104    	; 0xe26 <printRes+0x182>
		{
			d=d*10;
			denominator=denominator*10;
     dbe:	24 2d       	mov	r18, r4
     dc0:	35 2d       	mov	r19, r5
     dc2:	46 2d       	mov	r20, r6
     dc4:	57 2d       	mov	r21, r7
     dc6:	6a 2d       	mov	r22, r10
     dc8:	7b 2d       	mov	r23, r11
     dca:	81 2f       	mov	r24, r17
     dcc:	90 2f       	mov	r25, r16
     dce:	01 e0       	ldi	r16, 0x01	; 1
     dd0:	0e 94 8f 14 	call	0x291e	; 0x291e <__ashldi3>
     dd4:	42 2e       	mov	r4, r18
     dd6:	53 2e       	mov	r5, r19
     dd8:	64 2e       	mov	r6, r20
     dda:	75 2e       	mov	r7, r21
     ddc:	b6 2f       	mov	r27, r22
     dde:	a7 2f       	mov	r26, r23
     de0:	f8 2f       	mov	r31, r24
     de2:	e9 2f       	mov	r30, r25
     de4:	02 e0       	ldi	r16, 0x02	; 2
     de6:	0e 94 8f 14 	call	0x291e	; 0x291e <__ashldi3>
     dea:	a2 2e       	mov	r10, r18
     dec:	b3 2e       	mov	r11, r19
     dee:	c4 2e       	mov	r12, r20
     df0:	d5 2e       	mov	r13, r21
     df2:	e6 2e       	mov	r14, r22
     df4:	f7 2e       	mov	r15, r23
     df6:	08 2f       	mov	r16, r24
     df8:	19 2f       	mov	r17, r25
     dfa:	24 2d       	mov	r18, r4
     dfc:	35 2d       	mov	r19, r5
     dfe:	46 2d       	mov	r20, r6
     e00:	57 2d       	mov	r21, r7
     e02:	6b 2f       	mov	r22, r27
     e04:	7a 2f       	mov	r23, r26
     e06:	8f 2f       	mov	r24, r31
     e08:	9e 2f       	mov	r25, r30
     e0a:	0e 94 a8 14 	call	0x2950	; 0x2950 <__adddi3>
     e0e:	42 2e       	mov	r4, r18
     e10:	53 2e       	mov	r5, r19
     e12:	64 2e       	mov	r6, r20
     e14:	75 2e       	mov	r7, r21
     e16:	a6 2e       	mov	r10, r22
     e18:	b7 2e       	mov	r11, r23
     e1a:	18 2f       	mov	r17, r24
     e1c:	09 2f       	mov	r16, r25
		}
		else rng=PMAX;
		int pos=strlen(rans);
		while(d>0 && d*10<rng && denominator<1000)
		{
			d=d*10;
     e1e:	c8 2c       	mov	r12, r8
     e20:	d9 2c       	mov	r13, r9
     e22:	e9 80       	ldd	r14, Y+1	; 0x01
     e24:	fa 80       	ldd	r15, Y+2	; 0x02
			rans[0]='-';
			rng=-NMAX;
		}
		else rng=PMAX;
		int pos=strlen(rans);
		while(d>0 && d*10<rng && denominator<1000)
     e26:	20 e0       	ldi	r18, 0x00	; 0
     e28:	30 e0       	ldi	r19, 0x00	; 0
     e2a:	a9 01       	movw	r20, r18
     e2c:	c7 01       	movw	r24, r14
     e2e:	b6 01       	movw	r22, r12
     e30:	0e 94 2c 11 	call	0x2258	; 0x2258 <__gesf2>
     e34:	18 16       	cp	r1, r24
     e36:	9c f5       	brge	.+102    	; 0xe9e <printRes+0x1fa>
     e38:	20 e0       	ldi	r18, 0x00	; 0
     e3a:	30 e0       	ldi	r19, 0x00	; 0
     e3c:	40 e2       	ldi	r20, 0x20	; 32
     e3e:	51 e4       	ldi	r21, 0x41	; 65
     e40:	c7 01       	movw	r24, r14
     e42:	b6 01       	movw	r22, r12
     e44:	0e 94 ff 11 	call	0x23fe	; 0x23fe <__mulsf3>
     e48:	86 2e       	mov	r8, r22
     e4a:	97 2e       	mov	r9, r23
     e4c:	89 83       	std	Y+1, r24	; 0x01
     e4e:	9a 83       	std	Y+2, r25	; 0x02
     e50:	2f 89       	ldd	r18, Y+23	; 0x17
     e52:	38 8d       	ldd	r19, Y+24	; 0x18
     e54:	49 8d       	ldd	r20, Y+25	; 0x19
     e56:	5a 8d       	ldd	r21, Y+26	; 0x1a
     e58:	6b 8d       	ldd	r22, Y+27	; 0x1b
     e5a:	7c 8d       	ldd	r23, Y+28	; 0x1c
     e5c:	8d 8d       	ldd	r24, Y+29	; 0x1d
     e5e:	9e 8d       	ldd	r25, Y+30	; 0x1e
     e60:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <__floatdisf>
     e64:	9b 01       	movw	r18, r22
     e66:	ac 01       	movw	r20, r24
     e68:	68 2d       	mov	r22, r8
     e6a:	79 2d       	mov	r23, r9
     e6c:	89 81       	ldd	r24, Y+1	; 0x01
     e6e:	9a 81       	ldd	r25, Y+2	; 0x02
     e70:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__cmpsf2>
     e74:	88 23       	and	r24, r24
     e76:	9c f4       	brge	.+38     	; 0xe9e <printRes+0x1fa>
     e78:	24 2d       	mov	r18, r4
     e7a:	35 2d       	mov	r19, r5
     e7c:	46 2d       	mov	r20, r6
     e7e:	57 2d       	mov	r21, r7
     e80:	6a 2d       	mov	r22, r10
     e82:	7b 2d       	mov	r23, r11
     e84:	81 2f       	mov	r24, r17
     e86:	90 2f       	mov	r25, r16
     e88:	27 3e       	cpi	r18, 0xE7	; 231
     e8a:	33 40       	sbci	r19, 0x03	; 3
     e8c:	41 05       	cpc	r20, r1
     e8e:	51 05       	cpc	r21, r1
     e90:	61 05       	cpc	r22, r1
     e92:	71 05       	cpc	r23, r1
     e94:	81 05       	cpc	r24, r1
     e96:	91 05       	cpc	r25, r1
     e98:	09 f0       	breq	.+2      	; 0xe9c <printRes+0x1f8>
     e9a:	0c f4       	brge	.+2      	; 0xe9e <printRes+0x1fa>
     e9c:	90 cf       	rjmp	.-224    	; 0xdbe <printRes+0x11a>
     e9e:	4f 86       	std	Y+15, r4	; 0x0f
     ea0:	58 8a       	std	Y+16, r5	; 0x10
     ea2:	69 8a       	std	Y+17, r6	; 0x11
     ea4:	7a 8a       	std	Y+18, r7	; 0x12
     ea6:	ab 8a       	std	Y+19, r10	; 0x13
     ea8:	bc 8a       	std	Y+20, r11	; 0x14
     eaa:	1d 8b       	std	Y+21, r17	; 0x15
     eac:	0e 8b       	std	Y+22, r16	; 0x16
		{
			d=d*10;
			denominator=denominator*10;
		}
		long long f=(long long) d;
     eae:	c7 01       	movw	r24, r14
     eb0:	b6 01       	movw	r22, r12
     eb2:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <__fixsfdi>
     eb6:	42 2e       	mov	r4, r18
     eb8:	53 2e       	mov	r5, r19
     eba:	64 2e       	mov	r6, r20
     ebc:	75 2e       	mov	r7, r21
     ebe:	86 2e       	mov	r8, r22
     ec0:	97 2e       	mov	r9, r23
     ec2:	8a 83       	std	Y+2, r24	; 0x02
     ec4:	99 83       	std	Y+1, r25	; 0x01
		long long s=f%denominator;
     ec6:	af 84       	ldd	r10, Y+15	; 0x0f
     ec8:	b8 88       	ldd	r11, Y+16	; 0x10
     eca:	c9 88       	ldd	r12, Y+17	; 0x11
     ecc:	da 88       	ldd	r13, Y+18	; 0x12
     ece:	eb 88       	ldd	r14, Y+19	; 0x13
     ed0:	fc 88       	ldd	r15, Y+20	; 0x14
     ed2:	01 2f       	mov	r16, r17
     ed4:	1e 89       	ldd	r17, Y+22	; 0x16
     ed6:	0e 94 b8 13 	call	0x2770	; 0x2770 <__moddi3>
     eda:	2f 8f       	std	Y+31, r18	; 0x1f
     edc:	38 a3       	std	Y+32, r19	; 0x20
     ede:	49 a3       	std	Y+33, r20	; 0x21
     ee0:	5a a3       	std	Y+34, r21	; 0x22
     ee2:	6b a3       	std	Y+35, r22	; 0x23
     ee4:	7c a3       	std	Y+36, r23	; 0x24
     ee6:	8d a3       	std	Y+37, r24	; 0x25
     ee8:	9e a3       	std	Y+38, r25	; 0x26
     eea:	2f a3       	std	Y+39, r18	; 0x27
     eec:	38 a7       	std	Y+40, r19	; 0x28
     eee:	49 a7       	std	Y+41, r20	; 0x29
     ef0:	5a a7       	std	Y+42, r21	; 0x2a
     ef2:	6b a7       	std	Y+43, r22	; 0x2b
     ef4:	7c a7       	std	Y+44, r23	; 0x2c
     ef6:	8d a7       	std	Y+45, r24	; 0x2d
     ef8:	9e a7       	std	Y+46, r25	; 0x2e
		f=f/denominator;
     efa:	24 2d       	mov	r18, r4
     efc:	35 2d       	mov	r19, r5
     efe:	46 2d       	mov	r20, r6
     f00:	57 2d       	mov	r21, r7
     f02:	68 2d       	mov	r22, r8
     f04:	79 2d       	mov	r23, r9
     f06:	8a 81       	ldd	r24, Y+2	; 0x02
     f08:	99 81       	ldd	r25, Y+1	; 0x01
     f0a:	0e 94 ba 13 	call	0x2774	; 0x2774 <__divdi3>
     f0e:	2d 83       	std	Y+5, r18	; 0x05
     f10:	3e 83       	std	Y+6, r19	; 0x06
     f12:	4f 83       	std	Y+7, r20	; 0x07
     f14:	58 87       	std	Y+8, r21	; 0x08
     f16:	69 87       	std	Y+9, r22	; 0x09
     f18:	7a 87       	std	Y+10, r23	; 0x0a
     f1a:	8b 87       	std	Y+11, r24	; 0x0b
     f1c:	9c 87       	std	Y+12, r25	; 0x0c
		long long rev_num=0;
		int digits=0;
     f1e:	1e 86       	std	Y+14, r1	; 0x0e
     f20:	1d 86       	std	Y+13, r1	; 0x0d
			denominator=denominator*10;
		}
		long long f=(long long) d;
		long long s=f%denominator;
		f=f/denominator;
		long long rev_num=0;
     f22:	1f a6       	std	Y+47, r1	; 0x2f
     f24:	19 82       	std	Y+1, r1	; 0x01
     f26:	91 2c       	mov	r9, r1
     f28:	81 2c       	mov	r8, r1
     f2a:	71 2c       	mov	r7, r1
     f2c:	61 2c       	mov	r6, r1
     f2e:	51 2c       	mov	r5, r1
     f30:	41 2c       	mov	r4, r1
     f32:	21 2c       	mov	r2, r1
     f34:	31 2c       	mov	r3, r1
		int digits=0;
		do
		{
			rev_num=rev_num*10+(f%10);
     f36:	2f a5       	ldd	r18, Y+47	; 0x2f
     f38:	39 81       	ldd	r19, Y+1	; 0x01
     f3a:	49 2d       	mov	r20, r9
     f3c:	58 2d       	mov	r21, r8
     f3e:	67 2d       	mov	r22, r7
     f40:	76 2d       	mov	r23, r6
     f42:	85 2d       	mov	r24, r5
     f44:	94 2d       	mov	r25, r4
     f46:	01 e0       	ldi	r16, 0x01	; 1
     f48:	0e 94 8f 14 	call	0x291e	; 0x291e <__ashldi3>
     f4c:	82 2e       	mov	r8, r18
     f4e:	93 2e       	mov	r9, r19
     f50:	4a 83       	std	Y+2, r20	; 0x02
     f52:	59 83       	std	Y+1, r21	; 0x01
     f54:	b6 2f       	mov	r27, r22
     f56:	a7 2f       	mov	r26, r23
     f58:	f8 2f       	mov	r31, r24
     f5a:	e9 2f       	mov	r30, r25
     f5c:	02 e0       	ldi	r16, 0x02	; 2
     f5e:	0e 94 8f 14 	call	0x291e	; 0x291e <__ashldi3>
     f62:	a2 2e       	mov	r10, r18
     f64:	b3 2e       	mov	r11, r19
     f66:	c4 2e       	mov	r12, r20
     f68:	d5 2e       	mov	r13, r21
     f6a:	e6 2e       	mov	r14, r22
     f6c:	f7 2e       	mov	r15, r23
     f6e:	08 2f       	mov	r16, r24
     f70:	19 2f       	mov	r17, r25
     f72:	28 2d       	mov	r18, r8
     f74:	39 2d       	mov	r19, r9
     f76:	4a 81       	ldd	r20, Y+2	; 0x02
     f78:	59 81       	ldd	r21, Y+1	; 0x01
     f7a:	6b 2f       	mov	r22, r27
     f7c:	7a 2f       	mov	r23, r26
     f7e:	8f 2f       	mov	r24, r31
     f80:	9e 2f       	mov	r25, r30
     f82:	0e 94 a8 14 	call	0x2950	; 0x2950 <__adddi3>
     f86:	42 2e       	mov	r4, r18
     f88:	53 2e       	mov	r5, r19
     f8a:	64 2e       	mov	r6, r20
     f8c:	75 2e       	mov	r7, r21
     f8e:	86 2e       	mov	r8, r22
     f90:	97 2e       	mov	r9, r23
     f92:	8a 83       	std	Y+2, r24	; 0x02
     f94:	99 83       	std	Y+1, r25	; 0x01
     f96:	0f 2e       	mov	r0, r31
     f98:	fa e0       	ldi	r31, 0x0A	; 10
     f9a:	af 2e       	mov	r10, r31
     f9c:	f0 2d       	mov	r31, r0
     f9e:	b1 2c       	mov	r11, r1
     fa0:	c1 2c       	mov	r12, r1
     fa2:	d1 2c       	mov	r13, r1
     fa4:	e1 2c       	mov	r14, r1
     fa6:	f1 2c       	mov	r15, r1
     fa8:	00 e0       	ldi	r16, 0x00	; 0
     faa:	10 e0       	ldi	r17, 0x00	; 0
     fac:	2d 81       	ldd	r18, Y+5	; 0x05
     fae:	3e 81       	ldd	r19, Y+6	; 0x06
     fb0:	4f 81       	ldd	r20, Y+7	; 0x07
     fb2:	58 85       	ldd	r21, Y+8	; 0x08
     fb4:	69 85       	ldd	r22, Y+9	; 0x09
     fb6:	7a 85       	ldd	r23, Y+10	; 0x0a
     fb8:	8b 85       	ldd	r24, Y+11	; 0x0b
     fba:	9c 85       	ldd	r25, Y+12	; 0x0c
     fbc:	0e 94 b8 13 	call	0x2770	; 0x2770 <__moddi3>
     fc0:	a2 2e       	mov	r10, r18
     fc2:	b3 2e       	mov	r11, r19
     fc4:	c4 2e       	mov	r12, r20
     fc6:	d5 2e       	mov	r13, r21
     fc8:	e6 2e       	mov	r14, r22
     fca:	f7 2e       	mov	r15, r23
     fcc:	08 2f       	mov	r16, r24
     fce:	19 2f       	mov	r17, r25
     fd0:	24 2d       	mov	r18, r4
     fd2:	35 2d       	mov	r19, r5
     fd4:	46 2d       	mov	r20, r6
     fd6:	57 2d       	mov	r21, r7
     fd8:	68 2d       	mov	r22, r8
     fda:	79 2d       	mov	r23, r9
     fdc:	8a 81       	ldd	r24, Y+2	; 0x02
     fde:	99 81       	ldd	r25, Y+1	; 0x01
     fe0:	0e 94 a8 14 	call	0x2950	; 0x2950 <__adddi3>
     fe4:	2f a7       	std	Y+47, r18	; 0x2f
     fe6:	39 83       	std	Y+1, r19	; 0x01
     fe8:	94 2e       	mov	r9, r20
     fea:	85 2e       	mov	r8, r21
     fec:	76 2e       	mov	r7, r22
     fee:	67 2e       	mov	r6, r23
     ff0:	58 2e       	mov	r5, r24
     ff2:	49 2e       	mov	r4, r25
			f=f/10;
     ff4:	0f 2e       	mov	r0, r31
     ff6:	fa e0       	ldi	r31, 0x0A	; 10
     ff8:	af 2e       	mov	r10, r31
     ffa:	f0 2d       	mov	r31, r0
     ffc:	b1 2c       	mov	r11, r1
     ffe:	c1 2c       	mov	r12, r1
    1000:	d1 2c       	mov	r13, r1
    1002:	e1 2c       	mov	r14, r1
    1004:	f1 2c       	mov	r15, r1
    1006:	00 e0       	ldi	r16, 0x00	; 0
    1008:	10 e0       	ldi	r17, 0x00	; 0
    100a:	2d 81       	ldd	r18, Y+5	; 0x05
    100c:	3e 81       	ldd	r19, Y+6	; 0x06
    100e:	4f 81       	ldd	r20, Y+7	; 0x07
    1010:	58 85       	ldd	r21, Y+8	; 0x08
    1012:	69 85       	ldd	r22, Y+9	; 0x09
    1014:	7a 85       	ldd	r23, Y+10	; 0x0a
    1016:	8b 85       	ldd	r24, Y+11	; 0x0b
    1018:	9c 85       	ldd	r25, Y+12	; 0x0c
    101a:	0e 94 ba 13 	call	0x2774	; 0x2774 <__divdi3>
    101e:	2d 83       	std	Y+5, r18	; 0x05
    1020:	3e 83       	std	Y+6, r19	; 0x06
    1022:	4f 83       	std	Y+7, r20	; 0x07
    1024:	58 87       	std	Y+8, r21	; 0x08
    1026:	69 87       	std	Y+9, r22	; 0x09
    1028:	7a 87       	std	Y+10, r23	; 0x0a
    102a:	8b 87       	std	Y+11, r24	; 0x0b
    102c:	9c 87       	std	Y+12, r25	; 0x0c
			digits++;
    102e:	ef ef       	ldi	r30, 0xFF	; 255
    1030:	2e 1a       	sub	r2, r30
    1032:	3e 0a       	sbc	r3, r30
		}while(f>0);
    1034:	a0 e0       	ldi	r26, 0x00	; 0
    1036:	0e 94 ba 14 	call	0x2974	; 0x2974 <__cmpdi2_s8>
    103a:	11 f0       	breq	.+4      	; 0x1040 <printRes+0x39c>
    103c:	0c f0       	brlt	.+2      	; 0x1040 <printRes+0x39c>
    103e:	7b cf       	rjmp	.-266    	; 0xf36 <printRes+0x292>
    1040:	3e 86       	std	Y+14, r3	; 0x0e
    1042:	2d 86       	std	Y+13, r2	; 0x0d
    1044:	8f a5       	ldd	r24, Y+47	; 0x2f
    1046:	21 2c       	mov	r2, r1
    1048:	31 2c       	mov	r3, r1
    104a:	4a 82       	std	Y+2, r4	; 0x02
    104c:	45 2c       	mov	r4, r5
    104e:	58 2e       	mov	r5, r24
    1050:	8b 81       	ldd	r24, Y+3	; 0x03
    1052:	9c 81       	ldd	r25, Y+4	; 0x04
    1054:	99 ab       	std	Y+49, r25	; 0x31
    1056:	88 ab       	std	Y+48, r24	; 0x30
    1058:	37 c0       	rjmp	.+110    	; 0x10c8 <printRes+0x424>
		for(i=0; i<digits; i++)
		{
			long long current_digit=rev_num%10;
    105a:	0f 2e       	mov	r0, r31
    105c:	fa e0       	ldi	r31, 0x0A	; 10
    105e:	af 2e       	mov	r10, r31
    1060:	f0 2d       	mov	r31, r0
    1062:	b1 2c       	mov	r11, r1
    1064:	c1 2c       	mov	r12, r1
    1066:	d1 2c       	mov	r13, r1
    1068:	e1 2c       	mov	r14, r1
    106a:	f1 2c       	mov	r15, r1
    106c:	00 e0       	ldi	r16, 0x00	; 0
    106e:	10 e0       	ldi	r17, 0x00	; 0
    1070:	25 2d       	mov	r18, r5
    1072:	39 81       	ldd	r19, Y+1	; 0x01
    1074:	49 2d       	mov	r20, r9
    1076:	58 2d       	mov	r21, r8
    1078:	67 2d       	mov	r22, r7
    107a:	76 2d       	mov	r23, r6
    107c:	84 2d       	mov	r24, r4
    107e:	9a 81       	ldd	r25, Y+2	; 0x02
    1080:	0e 94 b8 13 	call	0x2770	; 0x2770 <__moddi3>
    1084:	2b 83       	std	Y+3, r18	; 0x03
			rev_num=rev_num/10;
    1086:	25 2d       	mov	r18, r5
    1088:	39 81       	ldd	r19, Y+1	; 0x01
    108a:	49 2d       	mov	r20, r9
    108c:	58 2d       	mov	r21, r8
    108e:	67 2d       	mov	r22, r7
    1090:	76 2d       	mov	r23, r6
    1092:	84 2d       	mov	r24, r4
    1094:	9a 81       	ldd	r25, Y+2	; 0x02
    1096:	0e 94 ba 13 	call	0x2774	; 0x2774 <__divdi3>
    109a:	52 2e       	mov	r5, r18
    109c:	39 83       	std	Y+1, r19	; 0x01
    109e:	94 2e       	mov	r9, r20
    10a0:	85 2e       	mov	r8, r21
    10a2:	76 2e       	mov	r7, r22
    10a4:	67 2e       	mov	r6, r23
    10a6:	48 2e       	mov	r4, r24
    10a8:	9a 83       	std	Y+2, r25	; 0x02
			int cans=(int) current_digit;
			rans[pos++]=(cans+'0');
    10aa:	e8 a9       	ldd	r30, Y+48	; 0x30
    10ac:	f9 a9       	ldd	r31, Y+49	; 0x31
    10ae:	e4 52       	subi	r30, 0x24	; 36
    10b0:	ff 4f       	sbci	r31, 0xFF	; 255
    10b2:	8b 81       	ldd	r24, Y+3	; 0x03
    10b4:	80 5d       	subi	r24, 0xD0	; 208
    10b6:	80 83       	st	Z, r24
		{
			rev_num=rev_num*10+(f%10);
			f=f/10;
			digits++;
		}while(f>0);
		for(i=0; i<digits; i++)
    10b8:	9f ef       	ldi	r25, 0xFF	; 255
    10ba:	29 1a       	sub	r2, r25
    10bc:	39 0a       	sbc	r3, r25
		{
			long long current_digit=rev_num%10;
			rev_num=rev_num/10;
			int cans=(int) current_digit;
			rans[pos++]=(cans+'0');
    10be:	88 a9       	ldd	r24, Y+48	; 0x30
    10c0:	99 a9       	ldd	r25, Y+49	; 0x31
    10c2:	01 96       	adiw	r24, 0x01	; 1
    10c4:	99 ab       	std	Y+49, r25	; 0x31
    10c6:	88 ab       	std	Y+48, r24	; 0x30
		{
			rev_num=rev_num*10+(f%10);
			f=f/10;
			digits++;
		}while(f>0);
		for(i=0; i<digits; i++)
    10c8:	8d 85       	ldd	r24, Y+13	; 0x0d
    10ca:	9e 85       	ldd	r25, Y+14	; 0x0e
    10cc:	28 16       	cp	r2, r24
    10ce:	39 06       	cpc	r3, r25
    10d0:	24 f2       	brlt	.-120    	; 0x105a <printRes+0x3b6>
    10d2:	88 a9       	ldd	r24, Y+48	; 0x30
    10d4:	99 a9       	ldd	r25, Y+49	; 0x31
    10d6:	9c 83       	std	Y+4, r25	; 0x04
    10d8:	8b 83       	std	Y+3, r24	; 0x03
			long long current_digit=rev_num%10;
			rev_num=rev_num/10;
			int cans=(int) current_digit;
			rans[pos++]=(cans+'0');
		}
		if(!(s==0||f>=(rng/100)))
    10da:	2f 8d       	ldd	r18, Y+31	; 0x1f
    10dc:	38 a1       	ldd	r19, Y+32	; 0x20
    10de:	49 a1       	ldd	r20, Y+33	; 0x21
    10e0:	5a a1       	ldd	r21, Y+34	; 0x22
    10e2:	6b a1       	ldd	r22, Y+35	; 0x23
    10e4:	7c a1       	ldd	r23, Y+36	; 0x24
    10e6:	8d a1       	ldd	r24, Y+37	; 0x25
    10e8:	9e a1       	ldd	r25, Y+38	; 0x26
    10ea:	a0 e0       	ldi	r26, 0x00	; 0
    10ec:	0e 94 ba 14 	call	0x2974	; 0x2974 <__cmpdi2_s8>
    10f0:	09 f4       	brne	.+2      	; 0x10f4 <printRes+0x450>
    10f2:	a3 c0       	rjmp	.+326    	; 0x123a <printRes+0x596>
    10f4:	0f 2e       	mov	r0, r31
    10f6:	f4 e6       	ldi	r31, 0x64	; 100
    10f8:	af 2e       	mov	r10, r31
    10fa:	f0 2d       	mov	r31, r0
    10fc:	b1 2c       	mov	r11, r1
    10fe:	c1 2c       	mov	r12, r1
    1100:	d1 2c       	mov	r13, r1
    1102:	e1 2c       	mov	r14, r1
    1104:	f1 2c       	mov	r15, r1
    1106:	00 e0       	ldi	r16, 0x00	; 0
    1108:	10 e0       	ldi	r17, 0x00	; 0
    110a:	2f 89       	ldd	r18, Y+23	; 0x17
    110c:	38 8d       	ldd	r19, Y+24	; 0x18
    110e:	49 8d       	ldd	r20, Y+25	; 0x19
    1110:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1112:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1114:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1116:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1118:	9e 8d       	ldd	r25, Y+30	; 0x1e
    111a:	0e 94 ba 13 	call	0x2774	; 0x2774 <__divdi3>
    111e:	a2 2e       	mov	r10, r18
    1120:	b3 2e       	mov	r11, r19
    1122:	c4 2e       	mov	r12, r20
    1124:	d5 2e       	mov	r13, r21
    1126:	e6 2e       	mov	r14, r22
    1128:	f7 2e       	mov	r15, r23
    112a:	08 2f       	mov	r16, r24
    112c:	19 2f       	mov	r17, r25
    112e:	2d 81       	ldd	r18, Y+5	; 0x05
    1130:	3e 81       	ldd	r19, Y+6	; 0x06
    1132:	4f 81       	ldd	r20, Y+7	; 0x07
    1134:	58 85       	ldd	r21, Y+8	; 0x08
    1136:	69 85       	ldd	r22, Y+9	; 0x09
    1138:	7a 85       	ldd	r23, Y+10	; 0x0a
    113a:	8b 85       	ldd	r24, Y+11	; 0x0b
    113c:	9c 85       	ldd	r25, Y+12	; 0x0c
    113e:	0e 94 b1 14 	call	0x2962	; 0x2962 <__cmpdi2>
    1142:	0c f0       	brlt	.+2      	; 0x1146 <printRes+0x4a2>
    1144:	7a c0       	rjmp	.+244    	; 0x123a <printRes+0x596>
		{
			rans[pos++]='.';
    1146:	6b 80       	ldd	r6, Y+3	; 0x03
    1148:	7c 80       	ldd	r7, Y+4	; 0x04
    114a:	9f ef       	ldi	r25, 0xFF	; 255
    114c:	69 1a       	sub	r6, r25
    114e:	79 0a       	sbc	r7, r25
    1150:	eb 81       	ldd	r30, Y+3	; 0x03
    1152:	fc 81       	ldd	r31, Y+4	; 0x04
    1154:	e4 52       	subi	r30, 0x24	; 36
    1156:	ff 4f       	sbci	r31, 0xFF	; 255
    1158:	8e e2       	ldi	r24, 0x2E	; 46
    115a:	80 83       	st	Z, r24
    115c:	ef a1       	ldd	r30, Y+39	; 0x27
    115e:	f8 a5       	ldd	r31, Y+40	; 0x28
    1160:	b9 a5       	ldd	r27, Y+41	; 0x29
    1162:	1c a5       	ldd	r17, Y+44	; 0x2c
    1164:	0d a5       	ldd	r16, Y+45	; 0x2d
    1166:	fe a4       	ldd	r15, Y+46	; 0x2e
			while(pos<15&&s>0)
    1168:	56 c0       	rjmp	.+172    	; 0x1216 <printRes+0x572>
			{
				s=s*10;
    116a:	2e 2f       	mov	r18, r30
    116c:	3f 2f       	mov	r19, r31
    116e:	4b 2f       	mov	r20, r27
    1170:	5a a5       	ldd	r21, Y+42	; 0x2a
    1172:	6b a5       	ldd	r22, Y+43	; 0x2b
    1174:	71 2f       	mov	r23, r17
    1176:	80 2f       	mov	r24, r16
    1178:	9f 2d       	mov	r25, r15
    117a:	01 e0       	ldi	r16, 0x01	; 1
    117c:	0e 94 8f 14 	call	0x291e	; 0x291e <__ashldi3>
    1180:	82 2e       	mov	r8, r18
    1182:	93 2e       	mov	r9, r19
    1184:	4a 83       	std	Y+2, r20	; 0x02
    1186:	59 83       	std	Y+1, r21	; 0x01
    1188:	b6 2f       	mov	r27, r22
    118a:	a7 2f       	mov	r26, r23
    118c:	f8 2f       	mov	r31, r24
    118e:	e9 2f       	mov	r30, r25
    1190:	02 e0       	ldi	r16, 0x02	; 2
    1192:	0e 94 8f 14 	call	0x291e	; 0x291e <__ashldi3>
    1196:	a2 2e       	mov	r10, r18
    1198:	b3 2e       	mov	r11, r19
    119a:	c4 2e       	mov	r12, r20
    119c:	d5 2e       	mov	r13, r21
    119e:	e6 2e       	mov	r14, r22
    11a0:	f7 2e       	mov	r15, r23
    11a2:	08 2f       	mov	r16, r24
    11a4:	19 2f       	mov	r17, r25
    11a6:	28 2d       	mov	r18, r8
    11a8:	39 2d       	mov	r19, r9
    11aa:	4a 81       	ldd	r20, Y+2	; 0x02
    11ac:	59 81       	ldd	r21, Y+1	; 0x01
    11ae:	6b 2f       	mov	r22, r27
    11b0:	7a 2f       	mov	r23, r26
    11b2:	8f 2f       	mov	r24, r31
    11b4:	9e 2f       	mov	r25, r30
    11b6:	0e 94 a8 14 	call	0x2950	; 0x2950 <__adddi3>
    11ba:	29 83       	std	Y+1, r18	; 0x01
    11bc:	23 2e       	mov	r2, r19
    11be:	34 2e       	mov	r3, r20
    11c0:	45 2e       	mov	r4, r21
    11c2:	56 2e       	mov	r5, r22
    11c4:	7d 83       	std	Y+5, r23	; 0x05
    11c6:	8b 83       	std	Y+3, r24	; 0x03
    11c8:	9a 83       	std	Y+2, r25	; 0x02
				long long curr=s/denominator;
    11ca:	af 84       	ldd	r10, Y+15	; 0x0f
    11cc:	b8 88       	ldd	r11, Y+16	; 0x10
    11ce:	c9 88       	ldd	r12, Y+17	; 0x11
    11d0:	da 88       	ldd	r13, Y+18	; 0x12
    11d2:	eb 88       	ldd	r14, Y+19	; 0x13
    11d4:	fc 88       	ldd	r15, Y+20	; 0x14
    11d6:	0d 89       	ldd	r16, Y+21	; 0x15
    11d8:	1e 89       	ldd	r17, Y+22	; 0x16
    11da:	0e 94 ba 13 	call	0x2774	; 0x2774 <__divdi3>
				int cans=(int) curr;
				rans[pos++]=(cans+'0');
    11de:	43 01       	movw	r8, r6
    11e0:	ef ef       	ldi	r30, 0xFF	; 255
    11e2:	8e 1a       	sub	r8, r30
    11e4:	9e 0a       	sbc	r9, r30
    11e6:	f3 01       	movw	r30, r6
    11e8:	e4 52       	subi	r30, 0x24	; 36
    11ea:	ff 4f       	sbci	r31, 0xFF	; 255
    11ec:	20 5d       	subi	r18, 0xD0	; 208
    11ee:	20 83       	st	Z, r18
				s=s%denominator;
    11f0:	29 81       	ldd	r18, Y+1	; 0x01
    11f2:	32 2d       	mov	r19, r2
    11f4:	43 2d       	mov	r20, r3
    11f6:	54 2d       	mov	r21, r4
    11f8:	65 2d       	mov	r22, r5
    11fa:	7d 81       	ldd	r23, Y+5	; 0x05
    11fc:	8b 81       	ldd	r24, Y+3	; 0x03
    11fe:	9a 81       	ldd	r25, Y+2	; 0x02
    1200:	0e 94 b8 13 	call	0x2770	; 0x2770 <__moddi3>
    1204:	e2 2f       	mov	r30, r18
    1206:	f3 2f       	mov	r31, r19
    1208:	b4 2f       	mov	r27, r20
    120a:	5a a7       	std	Y+42, r21	; 0x2a
    120c:	6b a7       	std	Y+43, r22	; 0x2b
    120e:	17 2f       	mov	r17, r23
    1210:	08 2f       	mov	r16, r24
    1212:	f9 2e       	mov	r15, r25
			while(pos<15&&s>0)
			{
				s=s*10;
				long long curr=s/denominator;
				int cans=(int) curr;
				rans[pos++]=(cans+'0');
    1214:	34 01       	movw	r6, r8
			rans[pos++]=(cans+'0');
		}
		if(!(s==0||f>=(rng/100)))
		{
			rans[pos++]='.';
			while(pos<15&&s>0)
    1216:	8f e0       	ldi	r24, 0x0F	; 15
    1218:	68 16       	cp	r6, r24
    121a:	71 04       	cpc	r7, r1
    121c:	74 f4       	brge	.+28     	; 0x123a <printRes+0x596>
    121e:	2e 2f       	mov	r18, r30
    1220:	3f 2f       	mov	r19, r31
    1222:	4b 2f       	mov	r20, r27
    1224:	5a a5       	ldd	r21, Y+42	; 0x2a
    1226:	6b a5       	ldd	r22, Y+43	; 0x2b
    1228:	71 2f       	mov	r23, r17
    122a:	80 2f       	mov	r24, r16
    122c:	9f 2d       	mov	r25, r15
    122e:	a0 e0       	ldi	r26, 0x00	; 0
    1230:	0e 94 ba 14 	call	0x2974	; 0x2974 <__cmpdi2_s8>
    1234:	11 f0       	breq	.+4      	; 0x123a <printRes+0x596>
    1236:	0c f0       	brlt	.+2      	; 0x123a <printRes+0x596>
    1238:	98 cf       	rjmp	.-208    	; 0x116a <printRes+0x4c6>
				s=s%denominator;
			}
		}
	}
	//Lcd4_Write_String(rans);
	command(0xC0);			// line 2 of lcd.
    123a:	80 ec       	ldi	r24, 0xC0	; 192
    123c:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
	for(int i=0;i<16;i++)
    1240:	80 e0       	ldi	r24, 0x00	; 0
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	9c 83       	std	Y+4, r25	; 0x04
    1246:	8b 83       	std	Y+3, r24	; 0x03
    1248:	11 c0       	rjmp	.+34     	; 0x126c <printRes+0x5c8>
	{
		if(rans[i]=='\0') break;
    124a:	eb 81       	ldd	r30, Y+3	; 0x03
    124c:	fc 81       	ldd	r31, Y+4	; 0x04
    124e:	e4 52       	subi	r30, 0x24	; 36
    1250:	ff 4f       	sbci	r31, 0xFF	; 255
    1252:	80 81       	ld	r24, Z
    1254:	88 23       	and	r24, r24
    1256:	71 f0       	breq	.+28     	; 0x1274 <printRes+0x5d0>
		lcd_data(rans[i]);
    1258:	0e 94 e5 05 	call	0xbca	; 0xbca <lcd_data>
		command(0x06);
    125c:	86 e0       	ldi	r24, 0x06	; 6
    125e:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
			}
		}
	}
	//Lcd4_Write_String(rans);
	command(0xC0);			// line 2 of lcd.
	for(int i=0;i<16;i++)
    1262:	8b 81       	ldd	r24, Y+3	; 0x03
    1264:	9c 81       	ldd	r25, Y+4	; 0x04
    1266:	01 96       	adiw	r24, 0x01	; 1
    1268:	9c 83       	std	Y+4, r25	; 0x04
    126a:	8b 83       	std	Y+3, r24	; 0x03
    126c:	8b 81       	ldd	r24, Y+3	; 0x03
    126e:	9c 81       	ldd	r25, Y+4	; 0x04
    1270:	40 97       	sbiw	r24, 0x10	; 16
    1272:	5c f3       	brlt	.-42     	; 0x124a <printRes+0x5a6>
	{
		if(rans[i]=='\0') break;
		lcd_data(rans[i]);
		command(0x06);
	}
	resultShowing=1;
    1274:	81 e0       	ldi	r24, 0x01	; 1
    1276:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <resultShowing>
}
    127a:	e1 96       	adiw	r28, 0x31	; 49
    127c:	0f b6       	in	r0, 0x3f	; 63
    127e:	f8 94       	cli
    1280:	de bf       	out	0x3e, r29	; 62
    1282:	0f be       	out	0x3f, r0	; 63
    1284:	cd bf       	out	0x3d, r28	; 61
    1286:	df 91       	pop	r29
    1288:	cf 91       	pop	r28
    128a:	1f 91       	pop	r17
    128c:	0f 91       	pop	r16
    128e:	ff 90       	pop	r15
    1290:	ef 90       	pop	r14
    1292:	df 90       	pop	r13
    1294:	cf 90       	pop	r12
    1296:	bf 90       	pop	r11
    1298:	af 90       	pop	r10
    129a:	9f 90       	pop	r9
    129c:	8f 90       	pop	r8
    129e:	7f 90       	pop	r7
    12a0:	6f 90       	pop	r6
    12a2:	5f 90       	pop	r5
    12a4:	4f 90       	pop	r4
    12a6:	3f 90       	pop	r3
    12a8:	2f 90       	pop	r2
    12aa:	08 95       	ret

000012ac <makeExp>:

void makeExp(char ch,unsigned char commandOn)
{
    12ac:	cf 93       	push	r28
    12ae:	df 93       	push	r29
    12b0:	d8 2f       	mov	r29, r24
    12b2:	c6 2f       	mov	r28, r22
	if(resultShowing)
    12b4:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <resultShowing>
    12b8:	88 23       	and	r24, r24
    12ba:	39 f0       	breq	.+14     	; 0x12ca <makeExp+0x1e>
	{
		resultShowing=!resultShowing;
    12bc:	91 e0       	ldi	r25, 0x01	; 1
    12be:	81 11       	cpse	r24, r1
    12c0:	90 e0       	ldi	r25, 0x00	; 0
    12c2:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <resultShowing>
		clrScr();
    12c6:	0e 94 1b 06 	call	0xc36	; 0xc36 <clrScr>
	}
	expStr[currpos++]=ch;
    12ca:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <currpos>
    12ce:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <currpos+0x1>
    12d2:	c9 01       	movw	r24, r18
    12d4:	01 96       	adiw	r24, 0x01	; 1
    12d6:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <currpos+0x1>
    12da:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <currpos>
    12de:	f9 01       	movw	r30, r18
    12e0:	e9 53       	subi	r30, 0x39	; 57
    12e2:	fe 4f       	sbci	r31, 0xFE	; 254
    12e4:	d0 83       	st	Z, r29
	expStr[currpos]='\0';
    12e6:	fc 01       	movw	r30, r24
    12e8:	e9 53       	subi	r30, 0x39	; 57
    12ea:	fe 4f       	sbci	r31, 0xFE	; 254
    12ec:	10 82       	st	Z, r1
	if(commandOn)
    12ee:	cc 23       	and	r28, r28
    12f0:	51 f0       	breq	.+20     	; 0x1306 <makeExp+0x5a>
	{
		printExp();
    12f2:	0e 94 36 06 	call	0xc6c	; 0xc6c <printExp>
		isEnd[currpos-1]=1;
    12f6:	e0 91 2e 01 	lds	r30, 0x012E	; 0x80012e <currpos>
    12fa:	f0 91 2f 01 	lds	r31, 0x012F	; 0x80012f <currpos+0x1>
    12fe:	e0 5d       	subi	r30, 0xD0	; 208
    1300:	fe 4f       	sbci	r31, 0xFE	; 254
    1302:	81 e0       	ldi	r24, 0x01	; 1
    1304:	80 83       	st	Z, r24
	}
}
    1306:	df 91       	pop	r29
    1308:	cf 91       	pop	r28
    130a:	08 95       	ret

0000130c <delExp>:

void delExp()
{
	if(resultShowing)
    130c:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <resultShowing>
    1310:	88 23       	and	r24, r24
    1312:	39 f0       	breq	.+14     	; 0x1322 <delExp+0x16>
	{
		resultShowing=!resultShowing;
    1314:	91 e0       	ldi	r25, 0x01	; 1
    1316:	81 11       	cpse	r24, r1
    1318:	90 e0       	ldi	r25, 0x00	; 0
    131a:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <resultShowing>
		clrScr();
    131e:	0e 94 1b 06 	call	0xc36	; 0xc36 <clrScr>
	}
	if(currpos==0) return;
    1322:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <currpos>
    1326:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <currpos+0x1>
    132a:	00 97       	sbiw	r24, 0x00	; 0
    132c:	21 f1       	breq	.+72     	; 0x1376 <delExp+0x6a>
	isEnd[currpos-1]=0;
    132e:	01 97       	sbiw	r24, 0x01	; 1
    1330:	fc 01       	movw	r30, r24
    1332:	ef 5c       	subi	r30, 0xCF	; 207
    1334:	fe 4f       	sbci	r31, 0xFE	; 254
    1336:	10 82       	st	Z, r1
	for(int i=currpos-1;i>0;i--)
    1338:	15 c0       	rjmp	.+42     	; 0x1364 <delExp+0x58>
	{
		expStr[i]='\0';
    133a:	fc 01       	movw	r30, r24
    133c:	e9 53       	subi	r30, 0x39	; 57
    133e:	fe 4f       	sbci	r31, 0xFE	; 254
    1340:	10 82       	st	Z, r1
		if(isEnd[i-1])
    1342:	9c 01       	movw	r18, r24
    1344:	21 50       	subi	r18, 0x01	; 1
    1346:	31 09       	sbc	r19, r1
    1348:	f9 01       	movw	r30, r18
    134a:	ef 5c       	subi	r30, 0xCF	; 207
    134c:	fe 4f       	sbci	r31, 0xFE	; 254
    134e:	40 81       	ld	r20, Z
    1350:	44 23       	and	r20, r20
    1352:	39 f0       	breq	.+14     	; 0x1362 <delExp+0x56>
		{
			currpos=i;
    1354:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <currpos+0x1>
    1358:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <currpos>
			printExp();
    135c:	0e 94 36 06 	call	0xc6c	; 0xc6c <printExp>
			return;
    1360:	08 95       	ret
		resultShowing=!resultShowing;
		clrScr();
	}
	if(currpos==0) return;
	isEnd[currpos-1]=0;
	for(int i=currpos-1;i>0;i--)
    1362:	c9 01       	movw	r24, r18
    1364:	18 16       	cp	r1, r24
    1366:	19 06       	cpc	r1, r25
    1368:	44 f3       	brlt	.-48     	; 0x133a <delExp+0x2e>
			currpos=i;
			printExp();
			return;
		}
	}
	currpos=0;
    136a:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <currpos+0x1>
    136e:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <currpos>
	printExp();
    1372:	0e 94 36 06 	call	0xc6c	; 0xc6c <printExp>
    1376:	08 95       	ret

00001378 <sendToMem>:
}

void sendToMem()
{
    1378:	cf 93       	push	r28
    137a:	df 93       	push	r29
	if(!resultShowing) return;
    137c:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <resultShowing>
    1380:	88 23       	and	r24, r24
    1382:	09 f4       	brne	.+2      	; 0x1386 <sendToMem+0xe>
    1384:	55 c0       	rjmp	.+170    	; 0x1430 <sendToMem+0xb8>
    1386:	8f e1       	ldi	r24, 0x1F	; 31
    1388:	9e e4       	ldi	r25, 0x4E	; 78
    138a:	01 97       	sbiw	r24, 0x01	; 1
    138c:	f1 f7       	brne	.-4      	; 0x138a <sendToMem+0x12>
    138e:	00 c0       	rjmp	.+0      	; 0x1390 <sendToMem+0x18>
    1390:	00 00       	nop
	_delay_ms(INIT_DELAY);
	for(int i=0;i<currpos;i++)
    1392:	c0 e0       	ldi	r28, 0x00	; 0
    1394:	d0 e0       	ldi	r29, 0x00	; 0
    1396:	17 c0       	rjmp	.+46     	; 0x13c6 <sendToMem+0x4e>
    1398:	8b e4       	ldi	r24, 0x4B	; 75
    139a:	9d e1       	ldi	r25, 0x1D	; 29
    139c:	01 97       	sbiw	r24, 0x01	; 1
    139e:	f1 f7       	brne	.-4      	; 0x139c <sendToMem+0x24>
    13a0:	00 c0       	rjmp	.+0      	; 0x13a2 <sendToMem+0x2a>
    13a2:	00 00       	nop
	{
		_delay_ms(PER_CHAR_DELAY);
		if(expStr[i]>='A' && expStr[i]<='Z') 
    13a4:	fe 01       	movw	r30, r28
    13a6:	e9 53       	subi	r30, 0x39	; 57
    13a8:	fe 4f       	sbci	r31, 0xFE	; 254
    13aa:	80 81       	ld	r24, Z
    13ac:	9f eb       	ldi	r25, 0xBF	; 191
    13ae:	98 0f       	add	r25, r24
    13b0:	9a 31       	cpi	r25, 0x1A	; 26
    13b2:	28 f4       	brcc	.+10     	; 0x13be <sendToMem+0x46>
			printf("%c",expStr[i]+32);
    13b4:	90 e0       	ldi	r25, 0x00	; 0
    13b6:	80 96       	adiw	r24, 0x20	; 32
    13b8:	0e 94 4c 15 	call	0x2a98	; 0x2a98 <putchar>
    13bc:	03 c0       	rjmp	.+6      	; 0x13c4 <sendToMem+0x4c>
		else
			printf("%c",expStr[i]);
    13be:	90 e0       	ldi	r25, 0x00	; 0
    13c0:	0e 94 4c 15 	call	0x2a98	; 0x2a98 <putchar>

void sendToMem()
{
	if(!resultShowing) return;
	_delay_ms(INIT_DELAY);
	for(int i=0;i<currpos;i++)
    13c4:	21 96       	adiw	r28, 0x01	; 1
    13c6:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <currpos>
    13ca:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <currpos+0x1>
    13ce:	c8 17       	cp	r28, r24
    13d0:	d9 07       	cpc	r29, r25
    13d2:	14 f3       	brlt	.-60     	; 0x1398 <sendToMem+0x20>
    13d4:	8b e4       	ldi	r24, 0x4B	; 75
    13d6:	9d e1       	ldi	r25, 0x1D	; 29
    13d8:	01 97       	sbiw	r24, 0x01	; 1
    13da:	f1 f7       	brne	.-4      	; 0x13d8 <sendToMem+0x60>
    13dc:	00 c0       	rjmp	.+0      	; 0x13de <sendToMem+0x66>
    13de:	00 00       	nop
			printf("%c",expStr[i]+32);
		else
			printf("%c",expStr[i]);
	}
	_delay_ms(PER_CHAR_DELAY);
	printf("%c",'#');
    13e0:	83 e2       	ldi	r24, 0x23	; 35
    13e2:	90 e0       	ldi	r25, 0x00	; 0
    13e4:	0e 94 4c 15 	call	0x2a98	; 0x2a98 <putchar>
	for(int i=0;i<18;i++)
    13e8:	c0 e0       	ldi	r28, 0x00	; 0
    13ea:	d0 e0       	ldi	r29, 0x00	; 0
    13ec:	14 c0       	rjmp	.+40     	; 0x1416 <sendToMem+0x9e>
	{
		if(rans[i]=='\0') break;
    13ee:	fe 01       	movw	r30, r28
    13f0:	e4 52       	subi	r30, 0x24	; 36
    13f2:	ff 4f       	sbci	r31, 0xFF	; 255
    13f4:	80 81       	ld	r24, Z
    13f6:	88 23       	and	r24, r24
    13f8:	89 f0       	breq	.+34     	; 0x141c <sendToMem+0xa4>
    13fa:	8b e4       	ldi	r24, 0x4B	; 75
    13fc:	9d e1       	ldi	r25, 0x1D	; 29
    13fe:	01 97       	sbiw	r24, 0x01	; 1
    1400:	f1 f7       	brne	.-4      	; 0x13fe <sendToMem+0x86>
    1402:	00 c0       	rjmp	.+0      	; 0x1404 <sendToMem+0x8c>
    1404:	00 00       	nop
		_delay_ms(PER_CHAR_DELAY);
		printf("%c",rans[i]);
    1406:	fe 01       	movw	r30, r28
    1408:	e4 52       	subi	r30, 0x24	; 36
    140a:	ff 4f       	sbci	r31, 0xFF	; 255
    140c:	80 81       	ld	r24, Z
    140e:	90 e0       	ldi	r25, 0x00	; 0
    1410:	0e 94 4c 15 	call	0x2a98	; 0x2a98 <putchar>
		else
			printf("%c",expStr[i]);
	}
	_delay_ms(PER_CHAR_DELAY);
	printf("%c",'#');
	for(int i=0;i<18;i++)
    1414:	21 96       	adiw	r28, 0x01	; 1
    1416:	c2 31       	cpi	r28, 0x12	; 18
    1418:	d1 05       	cpc	r29, r1
    141a:	4c f3       	brlt	.-46     	; 0x13ee <sendToMem+0x76>
    141c:	8b e4       	ldi	r24, 0x4B	; 75
    141e:	9d e1       	ldi	r25, 0x1D	; 29
    1420:	01 97       	sbiw	r24, 0x01	; 1
    1422:	f1 f7       	brne	.-4      	; 0x1420 <sendToMem+0xa8>
    1424:	00 c0       	rjmp	.+0      	; 0x1426 <sendToMem+0xae>
    1426:	00 00       	nop
		if(rans[i]=='\0') break;
		_delay_ms(PER_CHAR_DELAY);
		printf("%c",rans[i]);
	}
	_delay_ms(PER_CHAR_DELAY);
	printf("%c",'@');
    1428:	80 e4       	ldi	r24, 0x40	; 64
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	0e 94 4c 15 	call	0x2a98	; 0x2a98 <putchar>
}
    1430:	df 91       	pop	r29
    1432:	cf 91       	pop	r28
    1434:	08 95       	ret

00001436 <checkError>:
void checkError()
{
	if((PORTB&32))
    1436:	c5 9b       	sbis	0x18, 5	; 24
    1438:	7b c0       	rjmp	.+246    	; 0x1530 <checkError+0xfa>
	{
		clrScr();
    143a:	0e 94 1b 06 	call	0xc36	; 0xc36 <clrScr>
		unsigned char dummy=UDR;
    143e:	8c b1       	in	r24, 0x0c	; 12
		dummy=UDR;
    1440:	8c b1       	in	r24, 0x0c	; 12
		dummy=UDR;
    1442:	8c b1       	in	r24, 0x0c	; 12
		dummy=UDR;
    1444:	8c b1       	in	r24, 0x0c	; 12
		dummy=UDR;
    1446:	8c b1       	in	r24, 0x0c	; 12
		//UCSRA=UCSRA&(0b11100011);
		UCSRA = 0b00000010;
    1448:	82 e0       	ldi	r24, 0x02	; 2
    144a:	8b b9       	out	0x0b, r24	; 11
		if((PORTB&32)) PORTB=PORTB^32;
    144c:	c5 9b       	sbis	0x18, 5	; 24
    144e:	04 c0       	rjmp	.+8      	; 0x1458 <checkError+0x22>
    1450:	98 b3       	in	r25, 0x18	; 24
    1452:	80 e2       	ldi	r24, 0x20	; 32
    1454:	89 27       	eor	r24, r25
    1456:	88 bb       	out	0x18, r24	; 24
		lcd_data('T');
    1458:	84 e5       	ldi	r24, 0x54	; 84
    145a:	0e 94 e5 05 	call	0xbca	; 0xbca <lcd_data>
		command(0x06);
    145e:	86 e0       	ldi	r24, 0x06	; 6
    1460:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
		lcd_data('r');
    1464:	82 e7       	ldi	r24, 0x72	; 114
    1466:	0e 94 e5 05 	call	0xbca	; 0xbca <lcd_data>
		command(0x06);
    146a:	86 e0       	ldi	r24, 0x06	; 6
    146c:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
		lcd_data('a');
    1470:	81 e6       	ldi	r24, 0x61	; 97
    1472:	0e 94 e5 05 	call	0xbca	; 0xbca <lcd_data>
		command(0x06);
    1476:	86 e0       	ldi	r24, 0x06	; 6
    1478:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
		lcd_data('n');
    147c:	8e e6       	ldi	r24, 0x6E	; 110
    147e:	0e 94 e5 05 	call	0xbca	; 0xbca <lcd_data>
		command(0x06);
    1482:	86 e0       	ldi	r24, 0x06	; 6
    1484:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
		lcd_data('s');
    1488:	83 e7       	ldi	r24, 0x73	; 115
    148a:	0e 94 e5 05 	call	0xbca	; 0xbca <lcd_data>
		command(0x06);
    148e:	86 e0       	ldi	r24, 0x06	; 6
    1490:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
		lcd_data('m');
    1494:	8d e6       	ldi	r24, 0x6D	; 109
    1496:	0e 94 e5 05 	call	0xbca	; 0xbca <lcd_data>
		command(0x06);
    149a:	86 e0       	ldi	r24, 0x06	; 6
    149c:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
		lcd_data('i');
    14a0:	89 e6       	ldi	r24, 0x69	; 105
    14a2:	0e 94 e5 05 	call	0xbca	; 0xbca <lcd_data>
		command(0x06);
    14a6:	86 e0       	ldi	r24, 0x06	; 6
    14a8:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
		lcd_data('s');
    14ac:	83 e7       	ldi	r24, 0x73	; 115
    14ae:	0e 94 e5 05 	call	0xbca	; 0xbca <lcd_data>
		command(0x06);
    14b2:	86 e0       	ldi	r24, 0x06	; 6
    14b4:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
		lcd_data('s');
    14b8:	83 e7       	ldi	r24, 0x73	; 115
    14ba:	0e 94 e5 05 	call	0xbca	; 0xbca <lcd_data>
		command(0x06);
    14be:	86 e0       	ldi	r24, 0x06	; 6
    14c0:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
		lcd_data('i');
    14c4:	89 e6       	ldi	r24, 0x69	; 105
    14c6:	0e 94 e5 05 	call	0xbca	; 0xbca <lcd_data>
		command(0x06);
    14ca:	86 e0       	ldi	r24, 0x06	; 6
    14cc:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
		lcd_data('o');
    14d0:	8f e6       	ldi	r24, 0x6F	; 111
    14d2:	0e 94 e5 05 	call	0xbca	; 0xbca <lcd_data>
		command(0x06);
    14d6:	86 e0       	ldi	r24, 0x06	; 6
    14d8:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
		lcd_data('n');
    14dc:	8e e6       	ldi	r24, 0x6E	; 110
    14de:	0e 94 e5 05 	call	0xbca	; 0xbca <lcd_data>
		command(0x06);
    14e2:	86 e0       	ldi	r24, 0x06	; 6
    14e4:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
		command(0xC0);
    14e8:	80 ec       	ldi	r24, 0xC0	; 192
    14ea:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
		lcd_data('E');
    14ee:	85 e4       	ldi	r24, 0x45	; 69
    14f0:	0e 94 e5 05 	call	0xbca	; 0xbca <lcd_data>
		command(0x06);
    14f4:	86 e0       	ldi	r24, 0x06	; 6
    14f6:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
		lcd_data('r');
    14fa:	82 e7       	ldi	r24, 0x72	; 114
    14fc:	0e 94 e5 05 	call	0xbca	; 0xbca <lcd_data>
		command(0x06);
    1500:	86 e0       	ldi	r24, 0x06	; 6
    1502:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
		lcd_data('r');
    1506:	82 e7       	ldi	r24, 0x72	; 114
    1508:	0e 94 e5 05 	call	0xbca	; 0xbca <lcd_data>
		command(0x06);
    150c:	86 e0       	ldi	r24, 0x06	; 6
    150e:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
		lcd_data('o');
    1512:	8f e6       	ldi	r24, 0x6F	; 111
    1514:	0e 94 e5 05 	call	0xbca	; 0xbca <lcd_data>
		command(0x06);
    1518:	86 e0       	ldi	r24, 0x06	; 6
    151a:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
		lcd_data('r');
    151e:	82 e7       	ldi	r24, 0x72	; 114
    1520:	0e 94 e5 05 	call	0xbca	; 0xbca <lcd_data>
		command(0x06);
    1524:	86 e0       	ldi	r24, 0x06	; 6
    1526:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
		resultShowing=1;
    152a:	81 e0       	ldi	r24, 0x01	; 1
    152c:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <resultShowing>
    1530:	08 95       	ret

00001532 <receiveFromMem>:
	}
}
void receiveFromMem()
{
    1532:	cf 93       	push	r28
    1534:	df 93       	push	r29
	scanf("%s", message);
    1536:	88 e0       	ldi	r24, 0x08	; 8
    1538:	91 e0       	ldi	r25, 0x01	; 1
    153a:	9f 93       	push	r25
    153c:	8f 93       	push	r24
    153e:	89 ed       	ldi	r24, 0xD9	; 217
    1540:	90 e0       	ldi	r25, 0x00	; 0
    1542:	9f 93       	push	r25
    1544:	8f 93       	push	r24
    1546:	0e 94 53 15 	call	0x2aa6	; 0x2aa6 <scanf>
		scanf("%c",&msg_char);
		if(msg_char=='@') break;
		rans[i]=msg_char;
	}*/
	
	clrScr();
    154a:	0e 94 1b 06 	call	0xc36	; 0xc36 <clrScr>
	for(i=0; i<34; i++)
    154e:	0f 90       	pop	r0
    1550:	0f 90       	pop	r0
    1552:	0f 90       	pop	r0
    1554:	0f 90       	pop	r0
    1556:	c0 e0       	ldi	r28, 0x00	; 0
    1558:	d0 e0       	ldi	r29, 0x00	; 0
    155a:	12 c0       	rjmp	.+36     	; 0x1580 <receiveFromMem+0x4e>
	{
		if(message[i]=='#') {
    155c:	fe 01       	movw	r30, r28
    155e:	e8 5f       	subi	r30, 0xF8	; 248
    1560:	fe 4f       	sbci	r31, 0xFE	; 254
    1562:	80 81       	ld	r24, Z
    1564:	83 32       	cpi	r24, 0x23	; 35
    1566:	21 f4       	brne	.+8      	; 0x1570 <receiveFromMem+0x3e>
			command(0xC0);
    1568:	80 ec       	ldi	r24, 0xC0	; 192
    156a:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
			break;
    156e:	0b c0       	rjmp	.+22     	; 0x1586 <receiveFromMem+0x54>
		}
		else if (message[i]=='\0') break;
    1570:	88 23       	and	r24, r24
    1572:	49 f0       	breq	.+18     	; 0x1586 <receiveFromMem+0x54>
		//expStr[i]=message[i];
		lcd_data(message[i]);
    1574:	0e 94 e5 05 	call	0xbca	; 0xbca <lcd_data>
		command(0x06);
    1578:	86 e0       	ldi	r24, 0x06	; 6
    157a:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
		if(msg_char=='@') break;
		rans[i]=msg_char;
	}*/
	
	clrScr();
	for(i=0; i<34; i++)
    157e:	21 96       	adiw	r28, 0x01	; 1
    1580:	c2 32       	cpi	r28, 0x22	; 34
    1582:	d1 05       	cpc	r29, r1
    1584:	5c f3       	brlt	.-42     	; 0x155c <receiveFromMem+0x2a>
		//expStr[i]=message[i];
		lcd_data(message[i]);
		command(0x06);
	}
	//printExp();
	for(i=i+1;i<34;i++)
    1586:	21 96       	adiw	r28, 0x01	; 1
    1588:	10 c0       	rjmp	.+32     	; 0x15aa <receiveFromMem+0x78>
	{
		if(message[i]=='\0') break;
    158a:	fe 01       	movw	r30, r28
    158c:	e8 5f       	subi	r30, 0xF8	; 248
    158e:	fe 4f       	sbci	r31, 0xFE	; 254
    1590:	80 81       	ld	r24, Z
    1592:	88 23       	and	r24, r24
    1594:	69 f0       	breq	.+26     	; 0x15b0 <receiveFromMem+0x7e>
		rans[i]=message[i];
    1596:	fe 01       	movw	r30, r28
    1598:	e4 52       	subi	r30, 0x24	; 36
    159a:	ff 4f       	sbci	r31, 0xFF	; 255
    159c:	80 83       	st	Z, r24
		lcd_data(rans[i]);
    159e:	0e 94 e5 05 	call	0xbca	; 0xbca <lcd_data>
		command(0x06);
    15a2:	86 e0       	ldi	r24, 0x06	; 6
    15a4:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
		//expStr[i]=message[i];
		lcd_data(message[i]);
		command(0x06);
	}
	//printExp();
	for(i=i+1;i<34;i++)
    15a8:	21 96       	adiw	r28, 0x01	; 1
    15aa:	c2 32       	cpi	r28, 0x22	; 34
    15ac:	d1 05       	cpc	r29, r1
    15ae:	6c f3       	brlt	.-38     	; 0x158a <receiveFromMem+0x58>
		if(message[i]=='\0') break;
		rans[i]=message[i];
		lcd_data(rans[i]);
		command(0x06);
	}
	if(message[2]!='\0' && (PORTB&32)) PORTB=PORTB^32;
    15b0:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <message+0x2>
    15b4:	88 23       	and	r24, r24
    15b6:	31 f0       	breq	.+12     	; 0x15c4 <receiveFromMem+0x92>
    15b8:	c5 9b       	sbis	0x18, 5	; 24
    15ba:	04 c0       	rjmp	.+8      	; 0x15c4 <receiveFromMem+0x92>
    15bc:	98 b3       	in	r25, 0x18	; 24
    15be:	80 e2       	ldi	r24, 0x20	; 32
    15c0:	89 27       	eor	r24, r25
    15c2:	88 bb       	out	0x18, r24	; 24
		if(msg_char=='@') break;
		rans[i]=msg_char;
	}*/
	
	clrScr();
	for(i=0; i<34; i++)
    15c4:	80 e0       	ldi	r24, 0x00	; 0
    15c6:	90 e0       	ldi	r25, 0x00	; 0
    15c8:	05 c0       	rjmp	.+10     	; 0x15d4 <receiveFromMem+0xa2>
		command(0x06);
	}
	if(message[2]!='\0' && (PORTB&32)) PORTB=PORTB^32;
	for(i=0; i<36; i++)
	{
		message[i] = '\0';
    15ca:	fc 01       	movw	r30, r24
    15cc:	e8 5f       	subi	r30, 0xF8	; 248
    15ce:	fe 4f       	sbci	r31, 0xFE	; 254
    15d0:	10 82       	st	Z, r1
		rans[i]=message[i];
		lcd_data(rans[i]);
		command(0x06);
	}
	if(message[2]!='\0' && (PORTB&32)) PORTB=PORTB^32;
	for(i=0; i<36; i++)
    15d2:	01 96       	adiw	r24, 0x01	; 1
    15d4:	84 32       	cpi	r24, 0x24	; 36
    15d6:	91 05       	cpc	r25, r1
    15d8:	c4 f3       	brlt	.-16     	; 0x15ca <receiveFromMem+0x98>
	{
		message[i] = '\0';
	}
	resultShowing=1;
    15da:	81 e0       	ldi	r24, 0x01	; 1
    15dc:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <resultShowing>
}
    15e0:	df 91       	pop	r29
    15e2:	cf 91       	pop	r28
    15e4:	08 95       	ret

000015e6 <row1>:
void row1()
{
	PORTB=0X01;
    15e6:	81 e0       	ldi	r24, 0x01	; 1
    15e8:	88 bb       	out	0x18, r24	; 24
	if(PINA==0X01)
    15ea:	89 b3       	in	r24, 0x19	; 25
    15ec:	81 30       	cpi	r24, 0x01	; 1
    15ee:	19 f4       	brne	.+6      	; 0x15f6 <row1+0x10>
	{
		clrScr();	//clear display
    15f0:	0e 94 1b 06 	call	0xc36	; 0xc36 <clrScr>
    15f4:	08 95       	ret
	}
	else if(PINA==0X02)
    15f6:	89 b3       	in	r24, 0x19	; 25
    15f8:	82 30       	cpi	r24, 0x02	; 2
    15fa:	29 f4       	brne	.+10     	; 0x1606 <row1+0x20>
	{
		makeExp('7',1);
    15fc:	61 e0       	ldi	r22, 0x01	; 1
    15fe:	87 e3       	ldi	r24, 0x37	; 55
    1600:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    1604:	08 95       	ret
	}
	else if(PINA==0X04)
    1606:	89 b3       	in	r24, 0x19	; 25
    1608:	84 30       	cpi	r24, 0x04	; 4
    160a:	29 f4       	brne	.+10     	; 0x1616 <row1+0x30>
	{
		makeExp('8',1);
    160c:	61 e0       	ldi	r22, 0x01	; 1
    160e:	88 e3       	ldi	r24, 0x38	; 56
    1610:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    1614:	08 95       	ret
	}
	else if(PINA==0X08)
    1616:	89 b3       	in	r24, 0x19	; 25
    1618:	88 30       	cpi	r24, 0x08	; 8
    161a:	29 f4       	brne	.+10     	; 0x1626 <row1+0x40>
	{
		makeExp('9',1);
    161c:	61 e0       	ldi	r22, 0x01	; 1
    161e:	89 e3       	ldi	r24, 0x39	; 57
    1620:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    1624:	08 95       	ret
	}
	else if(PINA==0X10)
    1626:	89 b3       	in	r24, 0x19	; 25
    1628:	80 31       	cpi	r24, 0x10	; 16
    162a:	29 f4       	brne	.+10     	; 0x1636 <row1+0x50>
	{
		makeExp('x',1);
    162c:	61 e0       	ldi	r22, 0x01	; 1
    162e:	88 e7       	ldi	r24, 0x78	; 120
    1630:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    1634:	08 95       	ret
	}
	else if(PINA==0X20)
    1636:	89 b3       	in	r24, 0x19	; 25
    1638:	80 32       	cpi	r24, 0x20	; 32
    163a:	29 f4       	brne	.+10     	; 0x1646 <row1+0x60>
	{
		makeExp('/',1);
    163c:	61 e0       	ldi	r22, 0x01	; 1
    163e:	8f e2       	ldi	r24, 0x2F	; 47
    1640:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    1644:	08 95       	ret
	}
	else if(PINA==0X40)
    1646:	89 b3       	in	r24, 0x19	; 25
    1648:	80 34       	cpi	r24, 0x40	; 64
    164a:	19 f4       	brne	.+6      	; 0x1652 <row1+0x6c>
	{
		//have to implement clear function of LCD
		delExp();
    164c:	0e 94 86 09 	call	0x130c	; 0x130c <delExp>
    1650:	08 95       	ret
	}
	else if(PINA==0X80)
    1652:	89 b3       	in	r24, 0x19	; 25
    1654:	80 38       	cpi	r24, 0x80	; 128
    1656:	d1 f4       	brne	.+52     	; 0x168c <row1+0xa6>
	{
		makeExp('s', 0);
    1658:	60 e0       	ldi	r22, 0x00	; 0
    165a:	83 e7       	ldi	r24, 0x73	; 115
    165c:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
		makeExp('i', 0);
    1660:	60 e0       	ldi	r22, 0x00	; 0
    1662:	89 e6       	ldi	r24, 0x69	; 105
    1664:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>

		if(ishyper)
    1668:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <ishyper>
    166c:	88 23       	and	r24, r24
    166e:	49 f0       	breq	.+18     	; 0x1682 <row1+0x9c>
		{
			makeExp('n', 0);
    1670:	60 e0       	ldi	r22, 0x00	; 0
    1672:	8e e6       	ldi	r24, 0x6E	; 110
    1674:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
			makeExp('h',1);
    1678:	61 e0       	ldi	r22, 0x01	; 1
    167a:	88 e6       	ldi	r24, 0x68	; 104
    167c:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    1680:	08 95       	ret
		}
		else makeExp('n',1);
    1682:	61 e0       	ldi	r22, 0x01	; 1
    1684:	8e e6       	ldi	r24, 0x6E	; 110
    1686:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    168a:	08 95       	ret
	}
	else
	{
		unsigned char mask = 0x0C;
		unsigned char var = PINC;
    168c:	83 b3       	in	r24, 0x13	; 19

		var = var&mask;
    168e:	8c 70       	andi	r24, 0x0C	; 12
		if(var == 0x04)
    1690:	84 30       	cpi	r24, 0x04	; 4
    1692:	d1 f4       	brne	.+52     	; 0x16c8 <row1+0xe2>
		{
			makeExp('c', 0);
    1694:	60 e0       	ldi	r22, 0x00	; 0
    1696:	83 e6       	ldi	r24, 0x63	; 99
    1698:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
			makeExp('o', 0);
    169c:	60 e0       	ldi	r22, 0x00	; 0
    169e:	8f e6       	ldi	r24, 0x6F	; 111
    16a0:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>

			if(ishyper)
    16a4:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <ishyper>
    16a8:	88 23       	and	r24, r24
    16aa:	49 f0       	breq	.+18     	; 0x16be <row1+0xd8>
			{
				makeExp('s', 0);
    16ac:	60 e0       	ldi	r22, 0x00	; 0
    16ae:	83 e7       	ldi	r24, 0x73	; 115
    16b0:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
				makeExp('h',1);
    16b4:	61 e0       	ldi	r22, 0x01	; 1
    16b6:	88 e6       	ldi	r24, 0x68	; 104
    16b8:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    16bc:	08 95       	ret
			}
			else makeExp('s',1);
    16be:	61 e0       	ldi	r22, 0x01	; 1
    16c0:	83 e7       	ldi	r24, 0x73	; 115
    16c2:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    16c6:	08 95       	ret
		}
		else if(var == 0x08)
    16c8:	88 30       	cpi	r24, 0x08	; 8
    16ca:	c9 f4       	brne	.+50     	; 0x16fe <row1+0x118>
		{
			makeExp('t', 0);
    16cc:	60 e0       	ldi	r22, 0x00	; 0
    16ce:	84 e7       	ldi	r24, 0x74	; 116
    16d0:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
			makeExp('a', 0);
    16d4:	60 e0       	ldi	r22, 0x00	; 0
    16d6:	81 e6       	ldi	r24, 0x61	; 97
    16d8:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>

			if(ishyper)
    16dc:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <ishyper>
    16e0:	88 23       	and	r24, r24
    16e2:	49 f0       	breq	.+18     	; 0x16f6 <row1+0x110>
			{
				makeExp('n', 0);
    16e4:	60 e0       	ldi	r22, 0x00	; 0
    16e6:	8e e6       	ldi	r24, 0x6E	; 110
    16e8:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
				makeExp('h',1);
    16ec:	61 e0       	ldi	r22, 0x01	; 1
    16ee:	88 e6       	ldi	r24, 0x68	; 104
    16f0:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    16f4:	08 95       	ret
			}
			else makeExp('n',1);
    16f6:	61 e0       	ldi	r22, 0x01	; 1
    16f8:	8e e6       	ldi	r24, 0x6E	; 110
    16fa:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    16fe:	08 95       	ret

00001700 <row2>:
	}
}

void row2()
{
	PORTB=0X02;
    1700:	82 e0       	ldi	r24, 0x02	; 2
    1702:	88 bb       	out	0x18, r24	; 24
	if(PINA==0X01)
    1704:	89 b3       	in	r24, 0x19	; 25
    1706:	81 30       	cpi	r24, 0x01	; 1
    1708:	29 f4       	brne	.+10     	; 0x1714 <row2+0x14>
	{
		// + or - don't know, have to impelement
		makeExp('-',1);
    170a:	61 e0       	ldi	r22, 0x01	; 1
    170c:	8d e2       	ldi	r24, 0x2D	; 45
    170e:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    1712:	08 95       	ret
	}
	else if(PINA==0X02)
    1714:	89 b3       	in	r24, 0x19	; 25
    1716:	82 30       	cpi	r24, 0x02	; 2
    1718:	29 f4       	brne	.+10     	; 0x1724 <row2+0x24>
	{
		makeExp('4',1);
    171a:	61 e0       	ldi	r22, 0x01	; 1
    171c:	84 e3       	ldi	r24, 0x34	; 52
    171e:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    1722:	08 95       	ret
	}
	else if(PINA==0X04)
    1724:	89 b3       	in	r24, 0x19	; 25
    1726:	84 30       	cpi	r24, 0x04	; 4
    1728:	29 f4       	brne	.+10     	; 0x1734 <row2+0x34>
	{
		makeExp('5',1);
    172a:	61 e0       	ldi	r22, 0x01	; 1
    172c:	85 e3       	ldi	r24, 0x35	; 53
    172e:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    1732:	08 95       	ret
	}
	else if(PINA==0X08)
    1734:	89 b3       	in	r24, 0x19	; 25
    1736:	88 30       	cpi	r24, 0x08	; 8
    1738:	29 f4       	brne	.+10     	; 0x1744 <row2+0x44>
	{
		makeExp('6',1);
    173a:	61 e0       	ldi	r22, 0x01	; 1
    173c:	86 e3       	ldi	r24, 0x36	; 54
    173e:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    1742:	08 95       	ret
	}
	else if(PINA==0X10)
    1744:	89 b3       	in	r24, 0x19	; 25
    1746:	80 31       	cpi	r24, 0x10	; 16
    1748:	29 f4       	brne	.+10     	; 0x1754 <row2+0x54>
	{
		makeExp('-',1);
    174a:	61 e0       	ldi	r22, 0x01	; 1
    174c:	8d e2       	ldi	r24, 0x2D	; 45
    174e:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    1752:	08 95       	ret
	}
	/*else if(PINA==0X20)
	{
		//MRC implementation
	}*/
	else if(PINA==0X40)
    1754:	89 b3       	in	r24, 0x19	; 25
    1756:	80 34       	cpi	r24, 0x40	; 64
    1758:	69 f4       	brne	.+26     	; 0x1774 <row2+0x74>
	{
		makeExp('l', 0);
    175a:	60 e0       	ldi	r22, 0x00	; 0
    175c:	8c e6       	ldi	r24, 0x6C	; 108
    175e:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
		makeExp('o', 0);
    1762:	60 e0       	ldi	r22, 0x00	; 0
    1764:	8f e6       	ldi	r24, 0x6F	; 111
    1766:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
		makeExp('g',1);
    176a:	61 e0       	ldi	r22, 0x01	; 1
    176c:	87 e6       	ldi	r24, 0x67	; 103
    176e:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    1772:	08 95       	ret
	}
	else if(PINA==0X80)
    1774:	89 b3       	in	r24, 0x19	; 25
    1776:	80 38       	cpi	r24, 0x80	; 128
    1778:	49 f4       	brne	.+18     	; 0x178c <row2+0x8c>
	{
		makeExp('l', 0);
    177a:	60 e0       	ldi	r22, 0x00	; 0
    177c:	8c e6       	ldi	r24, 0x6C	; 108
    177e:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
		makeExp('n',1);
    1782:	61 e0       	ldi	r22, 0x01	; 1
    1784:	8e e6       	ldi	r24, 0x6E	; 110
    1786:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    178a:	08 95       	ret
	}
	else
	{
		unsigned char mask = 0x0C;
		unsigned char var = PINC;
    178c:	83 b3       	in	r24, 0x13	; 19

		var = var&mask;
    178e:	8c 70       	andi	r24, 0x0C	; 12
		if(var == 0x04)
    1790:	84 30       	cpi	r24, 0x04	; 4
    1792:	29 f4       	brne	.+10     	; 0x179e <row2+0x9e>
		{
			makeExp('e',1);
    1794:	61 e0       	ldi	r22, 0x01	; 1
    1796:	85 e6       	ldi	r24, 0x65	; 101
    1798:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    179c:	08 95       	ret
		}
		else if(var == 0x08)
    179e:	88 30       	cpi	r24, 0x08	; 8
    17a0:	39 f4       	brne	.+14     	; 0x17b0 <row2+0xb0>
		{
			ishyper = !ishyper;
    17a2:	81 e0       	ldi	r24, 0x01	; 1
    17a4:	90 91 2c 01 	lds	r25, 0x012C	; 0x80012c <ishyper>
    17a8:	91 11       	cpse	r25, r1
    17aa:	80 e0       	ldi	r24, 0x00	; 0
    17ac:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <ishyper>
    17b0:	08 95       	ret

000017b2 <row3>:
	}
}

void row3()
{
	PORTB=0x10;
    17b2:	80 e1       	ldi	r24, 0x10	; 16
    17b4:	88 bb       	out	0x18, r24	; 24
	if(PINA==0X01)
    17b6:	89 b3       	in	r24, 0x19	; 25
    17b8:	81 30       	cpi	r24, 0x01	; 1
    17ba:	89 f4       	brne	.+34     	; 0x17de <row3+0x2c>
	{
		makeExp('/', 0);
    17bc:	60 e0       	ldi	r22, 0x00	; 0
    17be:	8f e2       	ldi	r24, 0x2F	; 47
    17c0:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
		makeExp('1', 0);
    17c4:	60 e0       	ldi	r22, 0x00	; 0
    17c6:	81 e3       	ldi	r24, 0x31	; 49
    17c8:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
		makeExp('0', 0);
    17cc:	60 e0       	ldi	r22, 0x00	; 0
    17ce:	80 e3       	ldi	r24, 0x30	; 48
    17d0:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
		makeExp('0', 1);
    17d4:	61 e0       	ldi	r22, 0x01	; 1
    17d6:	80 e3       	ldi	r24, 0x30	; 48
    17d8:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    17dc:	08 95       	ret
	}
	else if(PINA==0X02)
    17de:	89 b3       	in	r24, 0x19	; 25
    17e0:	82 30       	cpi	r24, 0x02	; 2
    17e2:	29 f4       	brne	.+10     	; 0x17ee <row3+0x3c>
	{
		makeExp('1',1);
    17e4:	61 e0       	ldi	r22, 0x01	; 1
    17e6:	81 e3       	ldi	r24, 0x31	; 49
    17e8:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    17ec:	08 95       	ret
	}
	else if(PINA==0X04)
    17ee:	89 b3       	in	r24, 0x19	; 25
    17f0:	84 30       	cpi	r24, 0x04	; 4
    17f2:	29 f4       	brne	.+10     	; 0x17fe <row3+0x4c>
	{
		makeExp('2',1);
    17f4:	61 e0       	ldi	r22, 0x01	; 1
    17f6:	82 e3       	ldi	r24, 0x32	; 50
    17f8:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    17fc:	08 95       	ret
	}
	else if(PINA==0X08)
    17fe:	89 b3       	in	r24, 0x19	; 25
    1800:	88 30       	cpi	r24, 0x08	; 8
    1802:	29 f4       	brne	.+10     	; 0x180e <row3+0x5c>
	{
		makeExp('3',1);
    1804:	61 e0       	ldi	r22, 0x01	; 1
    1806:	83 e3       	ldi	r24, 0x33	; 51
    1808:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    180c:	08 95       	ret
	}
	else if(PINA==0X10)
    180e:	89 b3       	in	r24, 0x19	; 25
    1810:	80 31       	cpi	r24, 0x10	; 16
    1812:	29 f4       	brne	.+10     	; 0x181e <row3+0x6c>
	{
		//Not sure since the "+" button occupies space from both row3 and row4
		makeExp('+',1);
    1814:	61 e0       	ldi	r22, 0x01	; 1
    1816:	8b e2       	ldi	r24, 0x2B	; 43
    1818:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    181c:	08 95       	ret
	/*else if(PINA==0X20)
	{
		//M- implementation
		receiveFromMem();
	}*/
	else if(PINA==0X40)
    181e:	89 b3       	in	r24, 0x19	; 25
    1820:	80 34       	cpi	r24, 0x40	; 64
    1822:	69 f4       	brne	.+26     	; 0x183e <row3+0x8c>
	{
		// 10^x
		makeExp('1', 0);
    1824:	60 e0       	ldi	r22, 0x00	; 0
    1826:	81 e3       	ldi	r24, 0x31	; 49
    1828:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
		makeExp('0', 0);
    182c:	60 e0       	ldi	r22, 0x00	; 0
    182e:	80 e3       	ldi	r24, 0x30	; 48
    1830:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
		makeExp('^',1);
    1834:	61 e0       	ldi	r22, 0x01	; 1
    1836:	8e e5       	ldi	r24, 0x5E	; 94
    1838:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    183c:	08 95       	ret
	}
	else if(PINA==0X80)
    183e:	89 b3       	in	r24, 0x19	; 25
    1840:	80 38       	cpi	r24, 0x80	; 128
    1842:	29 f4       	brne	.+10     	; 0x184e <row3+0x9c>
	{
		makeExp('(',1);
    1844:	61 e0       	ldi	r22, 0x01	; 1
    1846:	88 e2       	ldi	r24, 0x28	; 40
    1848:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    184c:	08 95       	ret
	}
	else
	{
		unsigned char mask = 0x0C;
		unsigned char var = PINC;
    184e:	83 b3       	in	r24, 0x13	; 19

		var = var&mask;
    1850:	8c 70       	andi	r24, 0x0C	; 12
		if(var == 0x04)
    1852:	84 30       	cpi	r24, 0x04	; 4
    1854:	29 f4       	brne	.+10     	; 0x1860 <row3+0xae>
		{
			makeExp(')',1);
    1856:	61 e0       	ldi	r22, 0x01	; 1
    1858:	89 e2       	ldi	r24, 0x29	; 41
    185a:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    185e:	08 95       	ret
		}
		else if(var == 0x08)
    1860:	88 30       	cpi	r24, 0x08	; 8
    1862:	21 f4       	brne	.+8      	; 0x186c <row3+0xba>
		{
			//x^y
			makeExp('^',1);
    1864:	61 e0       	ldi	r22, 0x01	; 1
    1866:	8e e5       	ldi	r24, 0x5E	; 94
    1868:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    186c:	08 95       	ret

0000186e <row4>:
	}
}

void row4()
{
	PORTB=0X08;
    186e:	88 e0       	ldi	r24, 0x08	; 8
    1870:	88 bb       	out	0x18, r24	; 24
	if(PINA==0X01)
    1872:	89 b3       	in	r24, 0x19	; 25
    1874:	81 30       	cpi	r24, 0x01	; 1
    1876:	89 f4       	brne	.+34     	; 0x189a <row4+0x2c>
	{
		makeExp('s', 0);
    1878:	60 e0       	ldi	r22, 0x00	; 0
    187a:	83 e7       	ldi	r24, 0x73	; 115
    187c:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
		makeExp('q', 0);
    1880:	60 e0       	ldi	r22, 0x00	; 0
    1882:	81 e7       	ldi	r24, 0x71	; 113
    1884:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
		makeExp('r', 0);
    1888:	60 e0       	ldi	r22, 0x00	; 0
    188a:	82 e7       	ldi	r24, 0x72	; 114
    188c:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
		makeExp('t',1);
    1890:	61 e0       	ldi	r22, 0x01	; 1
    1892:	84 e7       	ldi	r24, 0x74	; 116
    1894:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    1898:	08 95       	ret
	}
	else if(PINA==0X02)
    189a:	89 b3       	in	r24, 0x19	; 25
    189c:	82 30       	cpi	r24, 0x02	; 2
    189e:	29 f4       	brne	.+10     	; 0x18aa <row4+0x3c>
	{
		makeExp('0',1);
    18a0:	61 e0       	ldi	r22, 0x01	; 1
    18a2:	80 e3       	ldi	r24, 0x30	; 48
    18a4:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    18a8:	08 95       	ret
	}
	else if(PINA==0X04)
    18aa:	89 b3       	in	r24, 0x19	; 25
    18ac:	84 30       	cpi	r24, 0x04	; 4
    18ae:	29 f4       	brne	.+10     	; 0x18ba <row4+0x4c>
	{
		makeExp('.',1);
    18b0:	61 e0       	ldi	r22, 0x01	; 1
    18b2:	8e e2       	ldi	r24, 0x2E	; 46
    18b4:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    18b8:	08 95       	ret
	}
	else if(PINA==0X08)
    18ba:	89 b3       	in	r24, 0x19	; 25
    18bc:	88 30       	cpi	r24, 0x08	; 8
    18be:	29 f4       	brne	.+10     	; 0x18ca <row4+0x5c>
	{
		//Have to implement equals to '='.
		printRes();
    18c0:	0e 94 52 06 	call	0xca4	; 0xca4 <printRes>
		sendToMem();
    18c4:	0e 94 bc 09 	call	0x1378	; 0x1378 <sendToMem>
    18c8:	08 95       	ret
	}
	else if(PINA==0X10)
    18ca:	89 b3       	in	r24, 0x19	; 25
    18cc:	80 31       	cpi	r24, 0x10	; 16
    18ce:	29 f4       	brne	.+10     	; 0x18da <row4+0x6c>
	{
		//Not sure since the "+" button occupies space from both row3 and row4
		makeExp('+',1);
    18d0:	61 e0       	ldi	r22, 0x01	; 1
    18d2:	8b e2       	ldi	r24, 0x2B	; 43
    18d4:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    18d8:	08 95       	ret
	{
		//M+ implementation
		receiveFromMem();
		
	}*/
	else if(PINA==0X40)
    18da:	89 b3       	in	r24, 0x19	; 25
    18dc:	80 34       	cpi	r24, 0x40	; 64
    18de:	f1 f4       	brne	.+60     	; 0x191c <row4+0xae>
	{
		makeExp('a', 0);
    18e0:	60 e0       	ldi	r22, 0x00	; 0
    18e2:	81 e6       	ldi	r24, 0x61	; 97
    18e4:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
		makeExp('s', 0);
    18e8:	60 e0       	ldi	r22, 0x00	; 0
    18ea:	83 e7       	ldi	r24, 0x73	; 115
    18ec:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
		makeExp('i', 0);
    18f0:	60 e0       	ldi	r22, 0x00	; 0
    18f2:	89 e6       	ldi	r24, 0x69	; 105
    18f4:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
		if(ishyper)
    18f8:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <ishyper>
    18fc:	88 23       	and	r24, r24
    18fe:	49 f0       	breq	.+18     	; 0x1912 <row4+0xa4>
		{
			makeExp('n', 0);
    1900:	60 e0       	ldi	r22, 0x00	; 0
    1902:	8e e6       	ldi	r24, 0x6E	; 110
    1904:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
			makeExp('h',1);
    1908:	61 e0       	ldi	r22, 0x01	; 1
    190a:	88 e6       	ldi	r24, 0x68	; 104
    190c:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    1910:	08 95       	ret
		}
		else makeExp('n',1);
    1912:	61 e0       	ldi	r22, 0x01	; 1
    1914:	8e e6       	ldi	r24, 0x6E	; 110
    1916:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    191a:	08 95       	ret

	}
	else if(PINA==0X80)
    191c:	89 b3       	in	r24, 0x19	; 25
    191e:	80 38       	cpi	r24, 0x80	; 128
    1920:	f1 f4       	brne	.+60     	; 0x195e <row4+0xf0>
	{
		makeExp('a', 0);
    1922:	60 e0       	ldi	r22, 0x00	; 0
    1924:	81 e6       	ldi	r24, 0x61	; 97
    1926:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
		makeExp('c', 0);
    192a:	60 e0       	ldi	r22, 0x00	; 0
    192c:	83 e6       	ldi	r24, 0x63	; 99
    192e:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
		makeExp('o', 0);
    1932:	60 e0       	ldi	r22, 0x00	; 0
    1934:	8f e6       	ldi	r24, 0x6F	; 111
    1936:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
		if(ishyper)
    193a:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <ishyper>
    193e:	88 23       	and	r24, r24
    1940:	49 f0       	breq	.+18     	; 0x1954 <row4+0xe6>
		{
			makeExp('s', 0);
    1942:	60 e0       	ldi	r22, 0x00	; 0
    1944:	83 e7       	ldi	r24, 0x73	; 115
    1946:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
			makeExp('h',1);
    194a:	61 e0       	ldi	r22, 0x01	; 1
    194c:	88 e6       	ldi	r24, 0x68	; 104
    194e:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    1952:	08 95       	ret
		}
		else makeExp('s',1);
    1954:	61 e0       	ldi	r22, 0x01	; 1
    1956:	83 e7       	ldi	r24, 0x73	; 115
    1958:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    195c:	08 95       	ret
	}
	else
	{
		unsigned char mask = 0x0C;
		unsigned char var = PINC;
    195e:	83 b3       	in	r24, 0x13	; 19

		var = var&mask;
    1960:	8c 70       	andi	r24, 0x0C	; 12
		if(var == 0x04)
    1962:	84 30       	cpi	r24, 0x04	; 4
    1964:	e9 f4       	brne	.+58     	; 0x19a0 <row4+0x132>
		{
			makeExp('a', 0);
    1966:	60 e0       	ldi	r22, 0x00	; 0
    1968:	81 e6       	ldi	r24, 0x61	; 97
    196a:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
			makeExp('t', 0);
    196e:	60 e0       	ldi	r22, 0x00	; 0
    1970:	84 e7       	ldi	r24, 0x74	; 116
    1972:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
			makeExp('a', 0);
    1976:	60 e0       	ldi	r22, 0x00	; 0
    1978:	81 e6       	ldi	r24, 0x61	; 97
    197a:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
			if(ishyper)
    197e:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <ishyper>
    1982:	88 23       	and	r24, r24
    1984:	49 f0       	breq	.+18     	; 0x1998 <row4+0x12a>
			{
				makeExp('n', 0);
    1986:	60 e0       	ldi	r22, 0x00	; 0
    1988:	8e e6       	ldi	r24, 0x6E	; 110
    198a:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
				makeExp('h',1);
    198e:	61 e0       	ldi	r22, 0x01	; 1
    1990:	88 e6       	ldi	r24, 0x68	; 104
    1992:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    1996:	08 95       	ret
			}
			else makeExp('n',1);
    1998:	61 e0       	ldi	r22, 0x01	; 1
    199a:	8e e6       	ldi	r24, 0x6E	; 110
    199c:	0e 94 56 09 	call	0x12ac	; 0x12ac <makeExp>
    19a0:	08 95       	ret

000019a2 <__vector_13>:
			//nCr, not sure whether to implement or not.
		}
	}
}
ISR(USART_RXC_vect)
{
    19a2:	1f 92       	push	r1
    19a4:	0f 92       	push	r0
    19a6:	0f b6       	in	r0, 0x3f	; 63
    19a8:	0f 92       	push	r0
    19aa:	11 24       	eor	r1, r1
    19ac:	8f 93       	push	r24
	if(UCSRA&28) PORTB=PORTB|32;
    19ae:	8b b1       	in	r24, 0x0b	; 11
    19b0:	8c 71       	andi	r24, 0x1C	; 28
    19b2:	19 f0       	breq	.+6      	; 0x19ba <__vector_13+0x18>
    19b4:	88 b3       	in	r24, 0x18	; 24
    19b6:	80 62       	ori	r24, 0x20	; 32
    19b8:	88 bb       	out	0x18, r24	; 24
}
    19ba:	8f 91       	pop	r24
    19bc:	0f 90       	pop	r0
    19be:	0f be       	out	0x3f, r0	; 63
    19c0:	0f 90       	pop	r0
    19c2:	1f 90       	pop	r1
    19c4:	18 95       	reti

000019c6 <__vector_3>:

ISR(INT2_vect)
{
    19c6:	1f 92       	push	r1
    19c8:	0f 92       	push	r0
    19ca:	0f b6       	in	r0, 0x3f	; 63
    19cc:	0f 92       	push	r0
    19ce:	11 24       	eor	r1, r1
    19d0:	2f 93       	push	r18
    19d2:	3f 93       	push	r19
    19d4:	4f 93       	push	r20
    19d6:	5f 93       	push	r21
    19d8:	6f 93       	push	r22
    19da:	7f 93       	push	r23
    19dc:	8f 93       	push	r24
    19de:	9f 93       	push	r25
    19e0:	af 93       	push	r26
    19e2:	bf 93       	push	r27
    19e4:	ef 93       	push	r30
    19e6:	ff 93       	push	r31
	receiveFromMem();
    19e8:	0e 94 99 0a 	call	0x1532	; 0x1532 <receiveFromMem>
}
    19ec:	ff 91       	pop	r31
    19ee:	ef 91       	pop	r30
    19f0:	bf 91       	pop	r27
    19f2:	af 91       	pop	r26
    19f4:	9f 91       	pop	r25
    19f6:	8f 91       	pop	r24
    19f8:	7f 91       	pop	r23
    19fa:	6f 91       	pop	r22
    19fc:	5f 91       	pop	r21
    19fe:	4f 91       	pop	r20
    1a00:	3f 91       	pop	r19
    1a02:	2f 91       	pop	r18
    1a04:	0f 90       	pop	r0
    1a06:	0f be       	out	0x3f, r0	; 63
    1a08:	0f 90       	pop	r0
    1a0a:	1f 90       	pop	r1
    1a0c:	18 95       	reti

00001a0e <main>:

int main(void)
{
    /* Replace with your application code */
    DDRA = 0x00;
    1a0e:	1a ba       	out	0x1a, r1	; 26
	DDRB = 0xFF;
    1a10:	8f ef       	ldi	r24, 0xFF	; 255
    1a12:	87 bb       	out	0x17, r24	; 23
	//DDRB=0b11110000;
	DDRC = 0b11110011;
    1a14:	83 ef       	ldi	r24, 0xF3	; 243
    1a16:	84 bb       	out	0x14, r24	; 20
	DDRD = 0xFE; //Previously was 0xFF
    1a18:	8e ef       	ldi	r24, 0xFE	; 254
    1a1a:	81 bb       	out	0x11, r24	; 17
	
	GICR = 1<<INT2;		//Enabling Interrupt 2
    1a1c:	80 e2       	ldi	r24, 0x20	; 32
    1a1e:	8b bf       	out	0x3b, r24	; 59
	MCUCSR |= (1 << ISC2);
    1a20:	84 b7       	in	r24, 0x34	; 52
    1a22:	80 64       	ori	r24, 0x40	; 64
    1a24:	84 bf       	out	0x34, r24	; 52
	
	uart_init();
    1a26:	0e 94 11 06 	call	0xc22	; 0xc22 <uart_init>
	stdout = fdevopen(uart_send, NULL);
    1a2a:	60 e0       	ldi	r22, 0x00	; 0
    1a2c:	70 e0       	ldi	r23, 0x00	; 0
    1a2e:	82 e1       	ldi	r24, 0x12	; 18
    1a30:	91 e0       	ldi	r25, 0x01	; 1
    1a32:	0e 94 01 15 	call	0x2a02	; 0x2a02 <fdevopen>
    1a36:	c9 ed       	ldi	r28, 0xD9	; 217
    1a38:	d1 e0       	ldi	r29, 0x01	; 1
    1a3a:	9b 83       	std	Y+3, r25	; 0x03
    1a3c:	8a 83       	std	Y+2, r24	; 0x02
	stdin = fdevopen(NULL, uart_receive);
    1a3e:	66 e1       	ldi	r22, 0x16	; 22
    1a40:	71 e0       	ldi	r23, 0x01	; 1
    1a42:	80 e0       	ldi	r24, 0x00	; 0
    1a44:	90 e0       	ldi	r25, 0x00	; 0
    1a46:	0e 94 01 15 	call	0x2a02	; 0x2a02 <fdevopen>
    1a4a:	99 83       	std	Y+1, r25	; 0x01
    1a4c:	88 83       	st	Y, r24
	command(0x38);
    1a4e:	88 e3       	ldi	r24, 0x38	; 56
    1a50:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
	command(0x0F);
    1a54:	8f e0       	ldi	r24, 0x0F	; 15
    1a56:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
	command(0x01);
    1a5a:	81 e0       	ldi	r24, 0x01	; 1
    1a5c:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
	command(0x80);
    1a60:	80 e8       	ldi	r24, 0x80	; 128
    1a62:	0e 94 b9 05 	call	0xb72	; 0xb72 <command>
	sei();
    1a66:	78 94       	sei
	while (1)
    {
		row1();
    1a68:	0e 94 f3 0a 	call	0x15e6	; 0x15e6 <row1>
		checkError();
    1a6c:	0e 94 1b 0a 	call	0x1436	; 0x1436 <checkError>
    1a70:	8b e1       	ldi	r24, 0x1B	; 27
    1a72:	95 e2       	ldi	r25, 0x25	; 37
    1a74:	01 97       	sbiw	r24, 0x01	; 1
    1a76:	f1 f7       	brne	.-4      	; 0x1a74 <main+0x66>
    1a78:	00 c0       	rjmp	.+0      	; 0x1a7a <main+0x6c>
    1a7a:	00 00       	nop
		_delay_ms(MAIN_DELAY);
		checkError();
    1a7c:	0e 94 1b 0a 	call	0x1436	; 0x1436 <checkError>
		row2();
    1a80:	0e 94 80 0b 	call	0x1700	; 0x1700 <row2>
		checkError();
    1a84:	0e 94 1b 0a 	call	0x1436	; 0x1436 <checkError>
    1a88:	8b e1       	ldi	r24, 0x1B	; 27
    1a8a:	95 e2       	ldi	r25, 0x25	; 37
    1a8c:	01 97       	sbiw	r24, 0x01	; 1
    1a8e:	f1 f7       	brne	.-4      	; 0x1a8c <main+0x7e>
    1a90:	00 c0       	rjmp	.+0      	; 0x1a92 <main+0x84>
    1a92:	00 00       	nop
		_delay_ms(MAIN_DELAY);
		checkError();
    1a94:	0e 94 1b 0a 	call	0x1436	; 0x1436 <checkError>
		row3();
    1a98:	0e 94 d9 0b 	call	0x17b2	; 0x17b2 <row3>
		checkError();
    1a9c:	0e 94 1b 0a 	call	0x1436	; 0x1436 <checkError>
    1aa0:	8b e1       	ldi	r24, 0x1B	; 27
    1aa2:	95 e2       	ldi	r25, 0x25	; 37
    1aa4:	01 97       	sbiw	r24, 0x01	; 1
    1aa6:	f1 f7       	brne	.-4      	; 0x1aa4 <main+0x96>
    1aa8:	00 c0       	rjmp	.+0      	; 0x1aaa <main+0x9c>
    1aaa:	00 00       	nop
		_delay_ms(MAIN_DELAY);
		checkError();
    1aac:	0e 94 1b 0a 	call	0x1436	; 0x1436 <checkError>
		row4();
    1ab0:	0e 94 37 0c 	call	0x186e	; 0x186e <row4>
		checkError();
    1ab4:	0e 94 1b 0a 	call	0x1436	; 0x1436 <checkError>
    1ab8:	8b e1       	ldi	r24, 0x1B	; 27
    1aba:	95 e2       	ldi	r25, 0x25	; 37
    1abc:	01 97       	sbiw	r24, 0x01	; 1
    1abe:	f1 f7       	brne	.-4      	; 0x1abc <main+0xae>
    1ac0:	00 c0       	rjmp	.+0      	; 0x1ac2 <main+0xb4>
    1ac2:	00 00       	nop
    1ac4:	d1 cf       	rjmp	.-94     	; 0x1a68 <main+0x5a>

00001ac6 <acos>:
    1ac6:	9f 93       	push	r25
    1ac8:	9f 77       	andi	r25, 0x7F	; 127
    1aca:	0e 94 cc 0f 	call	0x1f98	; 0x1f98 <__fp_arccos>
    1ace:	0f 90       	pop	r0
    1ad0:	00 20       	and	r0, r0
    1ad2:	42 f4       	brpl	.+16     	; 0x1ae4 <acos+0x1e>
    1ad4:	90 58       	subi	r25, 0x80	; 128
    1ad6:	a2 ea       	ldi	r26, 0xA2	; 162
    1ad8:	2a ed       	ldi	r18, 0xDA	; 218
    1ada:	3f e0       	ldi	r19, 0x0F	; 15
    1adc:	49 e4       	ldi	r20, 0x49	; 73
    1ade:	50 e4       	ldi	r21, 0x40	; 64
    1ae0:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__addsf3x>
    1ae4:	0c 94 c6 10 	jmp	0x218c	; 0x218c <__fp_round>

00001ae8 <__subsf3>:
    1ae8:	50 58       	subi	r21, 0x80	; 128

00001aea <__addsf3>:
    1aea:	bb 27       	eor	r27, r27
    1aec:	aa 27       	eor	r26, r26
    1aee:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__addsf3x>
    1af2:	0c 94 c6 10 	jmp	0x218c	; 0x218c <__fp_round>
    1af6:	0e 94 8d 10 	call	0x211a	; 0x211a <__fp_pscA>
    1afa:	38 f0       	brcs	.+14     	; 0x1b0a <__addsf3+0x20>
    1afc:	0e 94 94 10 	call	0x2128	; 0x2128 <__fp_pscB>
    1b00:	20 f0       	brcs	.+8      	; 0x1b0a <__addsf3+0x20>
    1b02:	39 f4       	brne	.+14     	; 0x1b12 <__addsf3+0x28>
    1b04:	9f 3f       	cpi	r25, 0xFF	; 255
    1b06:	19 f4       	brne	.+6      	; 0x1b0e <__addsf3+0x24>
    1b08:	26 f4       	brtc	.+8      	; 0x1b12 <__addsf3+0x28>
    1b0a:	0c 94 3f 10 	jmp	0x207e	; 0x207e <__fp_nan>
    1b0e:	0e f4       	brtc	.+2      	; 0x1b12 <__addsf3+0x28>
    1b10:	e0 95       	com	r30
    1b12:	e7 fb       	bst	r30, 7
    1b14:	0c 94 10 10 	jmp	0x2020	; 0x2020 <__fp_inf>

00001b18 <__addsf3x>:
    1b18:	e9 2f       	mov	r30, r25
    1b1a:	0e 94 eb 10 	call	0x21d6	; 0x21d6 <__fp_split3>
    1b1e:	58 f3       	brcs	.-42     	; 0x1af6 <__addsf3+0xc>
    1b20:	ba 17       	cp	r27, r26
    1b22:	62 07       	cpc	r22, r18
    1b24:	73 07       	cpc	r23, r19
    1b26:	84 07       	cpc	r24, r20
    1b28:	95 07       	cpc	r25, r21
    1b2a:	20 f0       	brcs	.+8      	; 0x1b34 <__addsf3x+0x1c>
    1b2c:	79 f4       	brne	.+30     	; 0x1b4c <__addsf3x+0x34>
    1b2e:	a6 f5       	brtc	.+104    	; 0x1b98 <__addsf3x+0x80>
    1b30:	0c 94 25 11 	jmp	0x224a	; 0x224a <__fp_zero>
    1b34:	0e f4       	brtc	.+2      	; 0x1b38 <__addsf3x+0x20>
    1b36:	e0 95       	com	r30
    1b38:	0b 2e       	mov	r0, r27
    1b3a:	ba 2f       	mov	r27, r26
    1b3c:	a0 2d       	mov	r26, r0
    1b3e:	0b 01       	movw	r0, r22
    1b40:	b9 01       	movw	r22, r18
    1b42:	90 01       	movw	r18, r0
    1b44:	0c 01       	movw	r0, r24
    1b46:	ca 01       	movw	r24, r20
    1b48:	a0 01       	movw	r20, r0
    1b4a:	11 24       	eor	r1, r1
    1b4c:	ff 27       	eor	r31, r31
    1b4e:	59 1b       	sub	r21, r25
    1b50:	99 f0       	breq	.+38     	; 0x1b78 <__addsf3x+0x60>
    1b52:	59 3f       	cpi	r21, 0xF9	; 249
    1b54:	50 f4       	brcc	.+20     	; 0x1b6a <__addsf3x+0x52>
    1b56:	50 3e       	cpi	r21, 0xE0	; 224
    1b58:	68 f1       	brcs	.+90     	; 0x1bb4 <__addsf3x+0x9c>
    1b5a:	1a 16       	cp	r1, r26
    1b5c:	f0 40       	sbci	r31, 0x00	; 0
    1b5e:	a2 2f       	mov	r26, r18
    1b60:	23 2f       	mov	r18, r19
    1b62:	34 2f       	mov	r19, r20
    1b64:	44 27       	eor	r20, r20
    1b66:	58 5f       	subi	r21, 0xF8	; 248
    1b68:	f3 cf       	rjmp	.-26     	; 0x1b50 <__addsf3x+0x38>
    1b6a:	46 95       	lsr	r20
    1b6c:	37 95       	ror	r19
    1b6e:	27 95       	ror	r18
    1b70:	a7 95       	ror	r26
    1b72:	f0 40       	sbci	r31, 0x00	; 0
    1b74:	53 95       	inc	r21
    1b76:	c9 f7       	brne	.-14     	; 0x1b6a <__addsf3x+0x52>
    1b78:	7e f4       	brtc	.+30     	; 0x1b98 <__addsf3x+0x80>
    1b7a:	1f 16       	cp	r1, r31
    1b7c:	ba 0b       	sbc	r27, r26
    1b7e:	62 0b       	sbc	r22, r18
    1b80:	73 0b       	sbc	r23, r19
    1b82:	84 0b       	sbc	r24, r20
    1b84:	ba f0       	brmi	.+46     	; 0x1bb4 <__addsf3x+0x9c>
    1b86:	91 50       	subi	r25, 0x01	; 1
    1b88:	a1 f0       	breq	.+40     	; 0x1bb2 <__addsf3x+0x9a>
    1b8a:	ff 0f       	add	r31, r31
    1b8c:	bb 1f       	adc	r27, r27
    1b8e:	66 1f       	adc	r22, r22
    1b90:	77 1f       	adc	r23, r23
    1b92:	88 1f       	adc	r24, r24
    1b94:	c2 f7       	brpl	.-16     	; 0x1b86 <__addsf3x+0x6e>
    1b96:	0e c0       	rjmp	.+28     	; 0x1bb4 <__addsf3x+0x9c>
    1b98:	ba 0f       	add	r27, r26
    1b9a:	62 1f       	adc	r22, r18
    1b9c:	73 1f       	adc	r23, r19
    1b9e:	84 1f       	adc	r24, r20
    1ba0:	48 f4       	brcc	.+18     	; 0x1bb4 <__addsf3x+0x9c>
    1ba2:	87 95       	ror	r24
    1ba4:	77 95       	ror	r23
    1ba6:	67 95       	ror	r22
    1ba8:	b7 95       	ror	r27
    1baa:	f7 95       	ror	r31
    1bac:	9e 3f       	cpi	r25, 0xFE	; 254
    1bae:	08 f0       	brcs	.+2      	; 0x1bb2 <__addsf3x+0x9a>
    1bb0:	b0 cf       	rjmp	.-160    	; 0x1b12 <__addsf3+0x28>
    1bb2:	93 95       	inc	r25
    1bb4:	88 0f       	add	r24, r24
    1bb6:	08 f0       	brcs	.+2      	; 0x1bba <__addsf3x+0xa2>
    1bb8:	99 27       	eor	r25, r25
    1bba:	ee 0f       	add	r30, r30
    1bbc:	97 95       	ror	r25
    1bbe:	87 95       	ror	r24
    1bc0:	08 95       	ret

00001bc2 <asin>:
    1bc2:	9f 93       	push	r25
    1bc4:	9f 77       	andi	r25, 0x7F	; 127
    1bc6:	ee e3       	ldi	r30, 0x3E	; 62
    1bc8:	89 37       	cpi	r24, 0x79	; 121
    1bca:	9e 07       	cpc	r25, r30
    1bcc:	28 f4       	brcc	.+10     	; 0x1bd8 <asin+0x16>
    1bce:	e4 e5       	ldi	r30, 0x54	; 84
    1bd0:	f0 e0       	ldi	r31, 0x00	; 0
    1bd2:	0e 94 79 10 	call	0x20f2	; 0x20f2 <__fp_powsodd>
    1bd6:	0c c0       	rjmp	.+24     	; 0x1bf0 <asin+0x2e>
    1bd8:	0e 94 cc 0f 	call	0x1f98	; 0x1f98 <__fp_arccos>
    1bdc:	90 58       	subi	r25, 0x80	; 128
    1bde:	a2 ea       	ldi	r26, 0xA2	; 162
    1be0:	2a ed       	ldi	r18, 0xDA	; 218
    1be2:	3f e0       	ldi	r19, 0x0F	; 15
    1be4:	49 ec       	ldi	r20, 0xC9	; 201
    1be6:	5f e3       	ldi	r21, 0x3F	; 63
    1be8:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__addsf3x>
    1bec:	0e 94 c6 10 	call	0x218c	; 0x218c <__fp_round>
    1bf0:	0f 90       	pop	r0
    1bf2:	07 fc       	sbrc	r0, 7
    1bf4:	90 58       	subi	r25, 0x80	; 128
    1bf6:	08 95       	ret

00001bf8 <atan>:
    1bf8:	df 93       	push	r29
    1bfa:	dd 27       	eor	r29, r29
    1bfc:	b9 2f       	mov	r27, r25
    1bfe:	bf 77       	andi	r27, 0x7F	; 127
    1c00:	40 e8       	ldi	r20, 0x80	; 128
    1c02:	5f e3       	ldi	r21, 0x3F	; 63
    1c04:	16 16       	cp	r1, r22
    1c06:	17 06       	cpc	r1, r23
    1c08:	48 07       	cpc	r20, r24
    1c0a:	5b 07       	cpc	r21, r27
    1c0c:	18 f4       	brcc	.+6      	; 0x1c14 <atan+0x1c>
    1c0e:	d9 2f       	mov	r29, r25
    1c10:	0e 94 31 11 	call	0x2262	; 0x2262 <inverse>
    1c14:	9f 93       	push	r25
    1c16:	8f 93       	push	r24
    1c18:	7f 93       	push	r23
    1c1a:	6f 93       	push	r22
    1c1c:	0e 94 54 13 	call	0x26a8	; 0x26a8 <square>
    1c20:	e8 e6       	ldi	r30, 0x68	; 104
    1c22:	f0 e0       	ldi	r31, 0x00	; 0
    1c24:	0e 94 52 10 	call	0x20a4	; 0x20a4 <__fp_powser>
    1c28:	0e 94 c6 10 	call	0x218c	; 0x218c <__fp_round>
    1c2c:	2f 91       	pop	r18
    1c2e:	3f 91       	pop	r19
    1c30:	4f 91       	pop	r20
    1c32:	5f 91       	pop	r21
    1c34:	0e 94 12 12 	call	0x2424	; 0x2424 <__mulsf3x>
    1c38:	dd 23       	and	r29, r29
    1c3a:	51 f0       	breq	.+20     	; 0x1c50 <atan+0x58>
    1c3c:	90 58       	subi	r25, 0x80	; 128
    1c3e:	a2 ea       	ldi	r26, 0xA2	; 162
    1c40:	2a ed       	ldi	r18, 0xDA	; 218
    1c42:	3f e0       	ldi	r19, 0x0F	; 15
    1c44:	49 ec       	ldi	r20, 0xC9	; 201
    1c46:	5f e3       	ldi	r21, 0x3F	; 63
    1c48:	d0 78       	andi	r29, 0x80	; 128
    1c4a:	5d 27       	eor	r21, r29
    1c4c:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__addsf3x>
    1c50:	df 91       	pop	r29
    1c52:	0c 94 c6 10 	jmp	0x218c	; 0x218c <__fp_round>

00001c56 <__cmpsf2>:
    1c56:	0e 94 ec 0f 	call	0x1fd8	; 0x1fd8 <__fp_cmp>
    1c5a:	08 f4       	brcc	.+2      	; 0x1c5e <__cmpsf2+0x8>
    1c5c:	81 e0       	ldi	r24, 0x01	; 1
    1c5e:	08 95       	ret

00001c60 <cosh>:
    1c60:	90 68       	ori	r25, 0x80	; 128
    1c62:	0e 94 c6 0e 	call	0x1d8c	; 0x1d8c <exp>
    1c66:	4f ef       	ldi	r20, 0xFF	; 255
    1c68:	5f ef       	ldi	r21, 0xFF	; 255
    1c6a:	0e 94 3d 11 	call	0x227a	; 0x227a <ldexp>
    1c6e:	9f 93       	push	r25
    1c70:	8f 93       	push	r24
    1c72:	7f 93       	push	r23
    1c74:	6f 93       	push	r22
    1c76:	42 e0       	ldi	r20, 0x02	; 2
    1c78:	50 e0       	ldi	r21, 0x00	; 0
    1c7a:	0e 94 3d 11 	call	0x227a	; 0x227a <ldexp>
    1c7e:	0e 94 31 11 	call	0x2262	; 0x2262 <inverse>
    1c82:	2f 91       	pop	r18
    1c84:	3f 91       	pop	r19
    1c86:	4f 91       	pop	r20
    1c88:	5f 91       	pop	r21
    1c8a:	0c 94 75 0d 	jmp	0x1aea	; 0x1aea <__addsf3>

00001c8e <cos>:
    1c8e:	0e 94 9d 10 	call	0x213a	; 0x213a <__fp_rempio2>
    1c92:	e3 95       	inc	r30
    1c94:	0c 94 d7 10 	jmp	0x21ae	; 0x21ae <__fp_sinus>

00001c98 <__divsf3>:
    1c98:	0e 94 60 0e 	call	0x1cc0	; 0x1cc0 <__divsf3x>
    1c9c:	0c 94 c6 10 	jmp	0x218c	; 0x218c <__fp_round>
    1ca0:	0e 94 94 10 	call	0x2128	; 0x2128 <__fp_pscB>
    1ca4:	58 f0       	brcs	.+22     	; 0x1cbc <__divsf3+0x24>
    1ca6:	0e 94 8d 10 	call	0x211a	; 0x211a <__fp_pscA>
    1caa:	40 f0       	brcs	.+16     	; 0x1cbc <__divsf3+0x24>
    1cac:	29 f4       	brne	.+10     	; 0x1cb8 <__divsf3+0x20>
    1cae:	5f 3f       	cpi	r21, 0xFF	; 255
    1cb0:	29 f0       	breq	.+10     	; 0x1cbc <__divsf3+0x24>
    1cb2:	0c 94 10 10 	jmp	0x2020	; 0x2020 <__fp_inf>
    1cb6:	51 11       	cpse	r21, r1
    1cb8:	0c 94 26 11 	jmp	0x224c	; 0x224c <__fp_szero>
    1cbc:	0c 94 3f 10 	jmp	0x207e	; 0x207e <__fp_nan>

00001cc0 <__divsf3x>:
    1cc0:	0e 94 eb 10 	call	0x21d6	; 0x21d6 <__fp_split3>
    1cc4:	68 f3       	brcs	.-38     	; 0x1ca0 <__divsf3+0x8>

00001cc6 <__divsf3_pse>:
    1cc6:	99 23       	and	r25, r25
    1cc8:	b1 f3       	breq	.-20     	; 0x1cb6 <__divsf3+0x1e>
    1cca:	55 23       	and	r21, r21
    1ccc:	91 f3       	breq	.-28     	; 0x1cb2 <__divsf3+0x1a>
    1cce:	95 1b       	sub	r25, r21
    1cd0:	55 0b       	sbc	r21, r21
    1cd2:	bb 27       	eor	r27, r27
    1cd4:	aa 27       	eor	r26, r26
    1cd6:	62 17       	cp	r22, r18
    1cd8:	73 07       	cpc	r23, r19
    1cda:	84 07       	cpc	r24, r20
    1cdc:	38 f0       	brcs	.+14     	; 0x1cec <__divsf3_pse+0x26>
    1cde:	9f 5f       	subi	r25, 0xFF	; 255
    1ce0:	5f 4f       	sbci	r21, 0xFF	; 255
    1ce2:	22 0f       	add	r18, r18
    1ce4:	33 1f       	adc	r19, r19
    1ce6:	44 1f       	adc	r20, r20
    1ce8:	aa 1f       	adc	r26, r26
    1cea:	a9 f3       	breq	.-22     	; 0x1cd6 <__divsf3_pse+0x10>
    1cec:	35 d0       	rcall	.+106    	; 0x1d58 <__divsf3_pse+0x92>
    1cee:	0e 2e       	mov	r0, r30
    1cf0:	3a f0       	brmi	.+14     	; 0x1d00 <__divsf3_pse+0x3a>
    1cf2:	e0 e8       	ldi	r30, 0x80	; 128
    1cf4:	32 d0       	rcall	.+100    	; 0x1d5a <__divsf3_pse+0x94>
    1cf6:	91 50       	subi	r25, 0x01	; 1
    1cf8:	50 40       	sbci	r21, 0x00	; 0
    1cfa:	e6 95       	lsr	r30
    1cfc:	00 1c       	adc	r0, r0
    1cfe:	ca f7       	brpl	.-14     	; 0x1cf2 <__divsf3_pse+0x2c>
    1d00:	2b d0       	rcall	.+86     	; 0x1d58 <__divsf3_pse+0x92>
    1d02:	fe 2f       	mov	r31, r30
    1d04:	29 d0       	rcall	.+82     	; 0x1d58 <__divsf3_pse+0x92>
    1d06:	66 0f       	add	r22, r22
    1d08:	77 1f       	adc	r23, r23
    1d0a:	88 1f       	adc	r24, r24
    1d0c:	bb 1f       	adc	r27, r27
    1d0e:	26 17       	cp	r18, r22
    1d10:	37 07       	cpc	r19, r23
    1d12:	48 07       	cpc	r20, r24
    1d14:	ab 07       	cpc	r26, r27
    1d16:	b0 e8       	ldi	r27, 0x80	; 128
    1d18:	09 f0       	breq	.+2      	; 0x1d1c <__divsf3_pse+0x56>
    1d1a:	bb 0b       	sbc	r27, r27
    1d1c:	80 2d       	mov	r24, r0
    1d1e:	bf 01       	movw	r22, r30
    1d20:	ff 27       	eor	r31, r31
    1d22:	93 58       	subi	r25, 0x83	; 131
    1d24:	5f 4f       	sbci	r21, 0xFF	; 255
    1d26:	3a f0       	brmi	.+14     	; 0x1d36 <__divsf3_pse+0x70>
    1d28:	9e 3f       	cpi	r25, 0xFE	; 254
    1d2a:	51 05       	cpc	r21, r1
    1d2c:	78 f0       	brcs	.+30     	; 0x1d4c <__divsf3_pse+0x86>
    1d2e:	0c 94 10 10 	jmp	0x2020	; 0x2020 <__fp_inf>
    1d32:	0c 94 26 11 	jmp	0x224c	; 0x224c <__fp_szero>
    1d36:	5f 3f       	cpi	r21, 0xFF	; 255
    1d38:	e4 f3       	brlt	.-8      	; 0x1d32 <__divsf3_pse+0x6c>
    1d3a:	98 3e       	cpi	r25, 0xE8	; 232
    1d3c:	d4 f3       	brlt	.-12     	; 0x1d32 <__divsf3_pse+0x6c>
    1d3e:	86 95       	lsr	r24
    1d40:	77 95       	ror	r23
    1d42:	67 95       	ror	r22
    1d44:	b7 95       	ror	r27
    1d46:	f7 95       	ror	r31
    1d48:	9f 5f       	subi	r25, 0xFF	; 255
    1d4a:	c9 f7       	brne	.-14     	; 0x1d3e <__divsf3_pse+0x78>
    1d4c:	88 0f       	add	r24, r24
    1d4e:	91 1d       	adc	r25, r1
    1d50:	96 95       	lsr	r25
    1d52:	87 95       	ror	r24
    1d54:	97 f9       	bld	r25, 7
    1d56:	08 95       	ret
    1d58:	e1 e0       	ldi	r30, 0x01	; 1
    1d5a:	66 0f       	add	r22, r22
    1d5c:	77 1f       	adc	r23, r23
    1d5e:	88 1f       	adc	r24, r24
    1d60:	bb 1f       	adc	r27, r27
    1d62:	62 17       	cp	r22, r18
    1d64:	73 07       	cpc	r23, r19
    1d66:	84 07       	cpc	r24, r20
    1d68:	ba 07       	cpc	r27, r26
    1d6a:	20 f0       	brcs	.+8      	; 0x1d74 <__divsf3_pse+0xae>
    1d6c:	62 1b       	sub	r22, r18
    1d6e:	73 0b       	sbc	r23, r19
    1d70:	84 0b       	sbc	r24, r20
    1d72:	ba 0b       	sbc	r27, r26
    1d74:	ee 1f       	adc	r30, r30
    1d76:	88 f7       	brcc	.-30     	; 0x1d5a <__divsf3_pse+0x94>
    1d78:	e0 95       	com	r30
    1d7a:	08 95       	ret
    1d7c:	29 f4       	brne	.+10     	; 0x1d88 <__divsf3_pse+0xc2>
    1d7e:	16 f0       	brts	.+4      	; 0x1d84 <__divsf3_pse+0xbe>
    1d80:	0c 94 10 10 	jmp	0x2020	; 0x2020 <__fp_inf>
    1d84:	0c 94 25 11 	jmp	0x224a	; 0x224a <__fp_zero>
    1d88:	0c 94 3f 10 	jmp	0x207e	; 0x207e <__fp_nan>

00001d8c <exp>:
    1d8c:	0e 94 f3 10 	call	0x21e6	; 0x21e6 <__fp_splitA>
    1d90:	a8 f3       	brcs	.-22     	; 0x1d7c <__divsf3_pse+0xb6>
    1d92:	96 38       	cpi	r25, 0x86	; 134
    1d94:	a0 f7       	brcc	.-24     	; 0x1d7e <__divsf3_pse+0xb8>
    1d96:	07 f8       	bld	r0, 7
    1d98:	0f 92       	push	r0
    1d9a:	e8 94       	clt
    1d9c:	2b e3       	ldi	r18, 0x3B	; 59
    1d9e:	3a ea       	ldi	r19, 0xAA	; 170
    1da0:	48 eb       	ldi	r20, 0xB8	; 184
    1da2:	5f e7       	ldi	r21, 0x7F	; 127
    1da4:	0e 94 15 12 	call	0x242a	; 0x242a <__mulsf3_pse>
    1da8:	0f 92       	push	r0
    1daa:	0f 92       	push	r0
    1dac:	0f 92       	push	r0
    1dae:	4d b7       	in	r20, 0x3d	; 61
    1db0:	5e b7       	in	r21, 0x3e	; 62
    1db2:	0f 92       	push	r0
    1db4:	0e 94 cb 11 	call	0x2396	; 0x2396 <modf>
    1db8:	e5 e9       	ldi	r30, 0x95	; 149
    1dba:	f0 e0       	ldi	r31, 0x00	; 0
    1dbc:	0e 94 52 10 	call	0x20a4	; 0x20a4 <__fp_powser>
    1dc0:	4f 91       	pop	r20
    1dc2:	5f 91       	pop	r21
    1dc4:	ef 91       	pop	r30
    1dc6:	ff 91       	pop	r31
    1dc8:	e5 95       	asr	r30
    1dca:	ee 1f       	adc	r30, r30
    1dcc:	ff 1f       	adc	r31, r31
    1dce:	49 f0       	breq	.+18     	; 0x1de2 <exp+0x56>
    1dd0:	fe 57       	subi	r31, 0x7E	; 126
    1dd2:	e0 68       	ori	r30, 0x80	; 128
    1dd4:	44 27       	eor	r20, r20
    1dd6:	ee 0f       	add	r30, r30
    1dd8:	44 1f       	adc	r20, r20
    1dda:	fa 95       	dec	r31
    1ddc:	e1 f7       	brne	.-8      	; 0x1dd6 <exp+0x4a>
    1dde:	41 95       	neg	r20
    1de0:	55 0b       	sbc	r21, r21
    1de2:	0e 94 3d 11 	call	0x227a	; 0x227a <ldexp>
    1de6:	0f 90       	pop	r0
    1de8:	07 fe       	sbrs	r0, 7
    1dea:	0c 94 31 11 	jmp	0x2262	; 0x2262 <inverse>
    1dee:	08 95       	ret

00001df0 <__fixsfdi>:
    1df0:	be e3       	ldi	r27, 0x3E	; 62
    1df2:	04 d0       	rcall	.+8      	; 0x1dfc <__fixunssfdi+0x2>
    1df4:	08 f4       	brcc	.+2      	; 0x1df8 <__fixsfdi+0x8>
    1df6:	90 e8       	ldi	r25, 0x80	; 128
    1df8:	08 95       	ret

00001dfa <__fixunssfdi>:
    1dfa:	bf e3       	ldi	r27, 0x3F	; 63
    1dfc:	22 27       	eor	r18, r18
    1dfe:	33 27       	eor	r19, r19
    1e00:	a9 01       	movw	r20, r18
    1e02:	0e 94 f3 10 	call	0x21e6	; 0x21e6 <__fp_splitA>
    1e06:	60 f1       	brcs	.+88     	; 0x1e60 <__fixunssfdi+0x66>
    1e08:	9f 57       	subi	r25, 0x7F	; 127
    1e0a:	48 f1       	brcs	.+82     	; 0x1e5e <__fixunssfdi+0x64>
    1e0c:	b9 17       	cp	r27, r25
    1e0e:	40 f1       	brcs	.+80     	; 0x1e60 <__fixunssfdi+0x66>
    1e10:	bf e3       	ldi	r27, 0x3F	; 63
    1e12:	b9 1b       	sub	r27, r25
    1e14:	99 27       	eor	r25, r25
    1e16:	b8 50       	subi	r27, 0x08	; 8
    1e18:	3a f4       	brpl	.+14     	; 0x1e28 <__fixunssfdi+0x2e>
    1e1a:	66 0f       	add	r22, r22
    1e1c:	77 1f       	adc	r23, r23
    1e1e:	88 1f       	adc	r24, r24
    1e20:	99 1f       	adc	r25, r25
    1e22:	b3 95       	inc	r27
    1e24:	d2 f3       	brmi	.-12     	; 0x1e1a <__fixunssfdi+0x20>
    1e26:	16 c0       	rjmp	.+44     	; 0x1e54 <__fixunssfdi+0x5a>
    1e28:	b8 50       	subi	r27, 0x08	; 8
    1e2a:	4a f0       	brmi	.+18     	; 0x1e3e <__fixunssfdi+0x44>
    1e2c:	23 2f       	mov	r18, r19
    1e2e:	34 2f       	mov	r19, r20
    1e30:	45 2f       	mov	r20, r21
    1e32:	56 2f       	mov	r21, r22
    1e34:	67 2f       	mov	r22, r23
    1e36:	78 2f       	mov	r23, r24
    1e38:	88 27       	eor	r24, r24
    1e3a:	b8 50       	subi	r27, 0x08	; 8
    1e3c:	ba f7       	brpl	.-18     	; 0x1e2c <__fixunssfdi+0x32>
    1e3e:	b8 5f       	subi	r27, 0xF8	; 248
    1e40:	49 f0       	breq	.+18     	; 0x1e54 <__fixunssfdi+0x5a>
    1e42:	86 95       	lsr	r24
    1e44:	77 95       	ror	r23
    1e46:	67 95       	ror	r22
    1e48:	57 95       	ror	r21
    1e4a:	47 95       	ror	r20
    1e4c:	37 95       	ror	r19
    1e4e:	27 95       	ror	r18
    1e50:	ba 95       	dec	r27
    1e52:	b9 f7       	brne	.-18     	; 0x1e42 <__fixunssfdi+0x48>
    1e54:	16 f4       	brtc	.+4      	; 0x1e5a <__fixunssfdi+0x60>
    1e56:	0e 94 42 10 	call	0x2084	; 0x2084 <__fp_negdi>
    1e5a:	88 94       	clc
    1e5c:	08 95       	ret
    1e5e:	88 94       	clc
    1e60:	60 e0       	ldi	r22, 0x00	; 0
    1e62:	70 e0       	ldi	r23, 0x00	; 0
    1e64:	cb 01       	movw	r24, r22
    1e66:	08 95       	ret

00001e68 <__floatdisf>:
    1e68:	97 fb       	bst	r25, 7
    1e6a:	16 f4       	brtc	.+4      	; 0x1e70 <__floatdisf+0x8>
    1e6c:	0e 94 42 10 	call	0x2084	; 0x2084 <__fp_negdi>
    1e70:	0c 94 78 0f 	jmp	0x1ef0	; 0x1ef0 <__fp_di2sf>

00001e74 <__floatunsisf>:
    1e74:	e8 94       	clt
    1e76:	09 c0       	rjmp	.+18     	; 0x1e8a <__floatsisf+0x12>

00001e78 <__floatsisf>:
    1e78:	97 fb       	bst	r25, 7
    1e7a:	3e f4       	brtc	.+14     	; 0x1e8a <__floatsisf+0x12>
    1e7c:	90 95       	com	r25
    1e7e:	80 95       	com	r24
    1e80:	70 95       	com	r23
    1e82:	61 95       	neg	r22
    1e84:	7f 4f       	sbci	r23, 0xFF	; 255
    1e86:	8f 4f       	sbci	r24, 0xFF	; 255
    1e88:	9f 4f       	sbci	r25, 0xFF	; 255
    1e8a:	99 23       	and	r25, r25
    1e8c:	a9 f0       	breq	.+42     	; 0x1eb8 <__floatsisf+0x40>
    1e8e:	f9 2f       	mov	r31, r25
    1e90:	96 e9       	ldi	r25, 0x96	; 150
    1e92:	bb 27       	eor	r27, r27
    1e94:	93 95       	inc	r25
    1e96:	f6 95       	lsr	r31
    1e98:	87 95       	ror	r24
    1e9a:	77 95       	ror	r23
    1e9c:	67 95       	ror	r22
    1e9e:	b7 95       	ror	r27
    1ea0:	f1 11       	cpse	r31, r1
    1ea2:	f8 cf       	rjmp	.-16     	; 0x1e94 <__floatsisf+0x1c>
    1ea4:	fa f4       	brpl	.+62     	; 0x1ee4 <__floatsisf+0x6c>
    1ea6:	bb 0f       	add	r27, r27
    1ea8:	11 f4       	brne	.+4      	; 0x1eae <__floatsisf+0x36>
    1eaa:	60 ff       	sbrs	r22, 0
    1eac:	1b c0       	rjmp	.+54     	; 0x1ee4 <__floatsisf+0x6c>
    1eae:	6f 5f       	subi	r22, 0xFF	; 255
    1eb0:	7f 4f       	sbci	r23, 0xFF	; 255
    1eb2:	8f 4f       	sbci	r24, 0xFF	; 255
    1eb4:	9f 4f       	sbci	r25, 0xFF	; 255
    1eb6:	16 c0       	rjmp	.+44     	; 0x1ee4 <__floatsisf+0x6c>
    1eb8:	88 23       	and	r24, r24
    1eba:	11 f0       	breq	.+4      	; 0x1ec0 <__floatsisf+0x48>
    1ebc:	96 e9       	ldi	r25, 0x96	; 150
    1ebe:	11 c0       	rjmp	.+34     	; 0x1ee2 <__floatsisf+0x6a>
    1ec0:	77 23       	and	r23, r23
    1ec2:	21 f0       	breq	.+8      	; 0x1ecc <__floatsisf+0x54>
    1ec4:	9e e8       	ldi	r25, 0x8E	; 142
    1ec6:	87 2f       	mov	r24, r23
    1ec8:	76 2f       	mov	r23, r22
    1eca:	05 c0       	rjmp	.+10     	; 0x1ed6 <__floatsisf+0x5e>
    1ecc:	66 23       	and	r22, r22
    1ece:	71 f0       	breq	.+28     	; 0x1eec <__floatsisf+0x74>
    1ed0:	96 e8       	ldi	r25, 0x86	; 134
    1ed2:	86 2f       	mov	r24, r22
    1ed4:	70 e0       	ldi	r23, 0x00	; 0
    1ed6:	60 e0       	ldi	r22, 0x00	; 0
    1ed8:	2a f0       	brmi	.+10     	; 0x1ee4 <__floatsisf+0x6c>
    1eda:	9a 95       	dec	r25
    1edc:	66 0f       	add	r22, r22
    1ede:	77 1f       	adc	r23, r23
    1ee0:	88 1f       	adc	r24, r24
    1ee2:	da f7       	brpl	.-10     	; 0x1eda <__floatsisf+0x62>
    1ee4:	88 0f       	add	r24, r24
    1ee6:	96 95       	lsr	r25
    1ee8:	87 95       	ror	r24
    1eea:	97 f9       	bld	r25, 7
    1eec:	08 95       	ret

00001eee <__floatundisf>:
    1eee:	e8 94       	clt

00001ef0 <__fp_di2sf>:
    1ef0:	f9 2f       	mov	r31, r25
    1ef2:	96 eb       	ldi	r25, 0xB6	; 182
    1ef4:	ff 23       	and	r31, r31
    1ef6:	81 f0       	breq	.+32     	; 0x1f18 <__fp_di2sf+0x28>
    1ef8:	12 16       	cp	r1, r18
    1efa:	13 06       	cpc	r1, r19
    1efc:	14 06       	cpc	r1, r20
    1efe:	44 0b       	sbc	r20, r20
    1f00:	93 95       	inc	r25
    1f02:	f6 95       	lsr	r31
    1f04:	87 95       	ror	r24
    1f06:	77 95       	ror	r23
    1f08:	67 95       	ror	r22
    1f0a:	57 95       	ror	r21
    1f0c:	40 40       	sbci	r20, 0x00	; 0
    1f0e:	ff 23       	and	r31, r31
    1f10:	b9 f7       	brne	.-18     	; 0x1f00 <__fp_di2sf+0x10>
    1f12:	1b c0       	rjmp	.+54     	; 0x1f4a <__fp_di2sf+0x5a>
    1f14:	99 27       	eor	r25, r25
    1f16:	08 95       	ret
    1f18:	88 23       	and	r24, r24
    1f1a:	51 f4       	brne	.+20     	; 0x1f30 <__fp_di2sf+0x40>
    1f1c:	98 50       	subi	r25, 0x08	; 8
    1f1e:	d2 f7       	brpl	.-12     	; 0x1f14 <__fp_di2sf+0x24>
    1f20:	87 2b       	or	r24, r23
    1f22:	76 2f       	mov	r23, r22
    1f24:	65 2f       	mov	r22, r21
    1f26:	54 2f       	mov	r21, r20
    1f28:	43 2f       	mov	r20, r19
    1f2a:	32 2f       	mov	r19, r18
    1f2c:	20 e0       	ldi	r18, 0x00	; 0
    1f2e:	b1 f3       	breq	.-20     	; 0x1f1c <__fp_di2sf+0x2c>
    1f30:	12 16       	cp	r1, r18
    1f32:	13 06       	cpc	r1, r19
    1f34:	14 06       	cpc	r1, r20
    1f36:	44 0b       	sbc	r20, r20
    1f38:	88 23       	and	r24, r24
    1f3a:	3a f0       	brmi	.+14     	; 0x1f4a <__fp_di2sf+0x5a>
    1f3c:	9a 95       	dec	r25
    1f3e:	44 0f       	add	r20, r20
    1f40:	55 1f       	adc	r21, r21
    1f42:	66 1f       	adc	r22, r22
    1f44:	77 1f       	adc	r23, r23
    1f46:	88 1f       	adc	r24, r24
    1f48:	ca f7       	brpl	.-14     	; 0x1f3c <__fp_di2sf+0x4c>
    1f4a:	55 23       	and	r21, r21
    1f4c:	4a f4       	brpl	.+18     	; 0x1f60 <__fp_di2sf+0x70>
    1f4e:	44 0f       	add	r20, r20
    1f50:	55 1f       	adc	r21, r21
    1f52:	11 f4       	brne	.+4      	; 0x1f58 <__fp_di2sf+0x68>
    1f54:	60 ff       	sbrs	r22, 0
    1f56:	04 c0       	rjmp	.+8      	; 0x1f60 <__fp_di2sf+0x70>
    1f58:	6f 5f       	subi	r22, 0xFF	; 255
    1f5a:	7f 4f       	sbci	r23, 0xFF	; 255
    1f5c:	8f 4f       	sbci	r24, 0xFF	; 255
    1f5e:	9f 4f       	sbci	r25, 0xFF	; 255
    1f60:	88 0f       	add	r24, r24
    1f62:	96 95       	lsr	r25
    1f64:	87 95       	ror	r24
    1f66:	97 f9       	bld	r25, 7
    1f68:	08 95       	ret

00001f6a <floor>:
    1f6a:	0e 94 0d 11 	call	0x221a	; 0x221a <__fp_trunc>
    1f6e:	90 f0       	brcs	.+36     	; 0x1f94 <floor+0x2a>
    1f70:	9f 37       	cpi	r25, 0x7F	; 127
    1f72:	48 f4       	brcc	.+18     	; 0x1f86 <floor+0x1c>
    1f74:	91 11       	cpse	r25, r1
    1f76:	16 f0       	brts	.+4      	; 0x1f7c <floor+0x12>
    1f78:	0c 94 26 11 	jmp	0x224c	; 0x224c <__fp_szero>
    1f7c:	60 e0       	ldi	r22, 0x00	; 0
    1f7e:	70 e0       	ldi	r23, 0x00	; 0
    1f80:	80 e8       	ldi	r24, 0x80	; 128
    1f82:	9f eb       	ldi	r25, 0xBF	; 191
    1f84:	08 95       	ret
    1f86:	26 f4       	brtc	.+8      	; 0x1f90 <floor+0x26>
    1f88:	1b 16       	cp	r1, r27
    1f8a:	61 1d       	adc	r22, r1
    1f8c:	71 1d       	adc	r23, r1
    1f8e:	81 1d       	adc	r24, r1
    1f90:	0c 94 16 10 	jmp	0x202c	; 0x202c <__fp_mintl>
    1f94:	0c 94 31 10 	jmp	0x2062	; 0x2062 <__fp_mpack>

00001f98 <__fp_arccos>:
    1f98:	df 93       	push	r29
    1f9a:	cf 93       	push	r28
    1f9c:	1f 93       	push	r17
    1f9e:	0f 93       	push	r16
    1fa0:	8b 01       	movw	r16, r22
    1fa2:	ec 01       	movw	r28, r24
    1fa4:	ed eb       	ldi	r30, 0xBD	; 189
    1fa6:	f0 e0       	ldi	r31, 0x00	; 0
    1fa8:	0e 94 52 10 	call	0x20a4	; 0x20a4 <__fp_powser>
    1fac:	0e 94 c6 10 	call	0x218c	; 0x218c <__fp_round>
    1fb0:	98 01       	movw	r18, r16
    1fb2:	ae 01       	movw	r20, r28
    1fb4:	8b 01       	movw	r16, r22
    1fb6:	ec 01       	movw	r28, r24
    1fb8:	60 e0       	ldi	r22, 0x00	; 0
    1fba:	70 e0       	ldi	r23, 0x00	; 0
    1fbc:	80 e8       	ldi	r24, 0x80	; 128
    1fbe:	9f e3       	ldi	r25, 0x3F	; 63
    1fc0:	0e 94 74 0d 	call	0x1ae8	; 0x1ae8 <__subsf3>
    1fc4:	0e 94 14 13 	call	0x2628	; 0x2628 <sqrt>
    1fc8:	98 01       	movw	r18, r16
    1fca:	ae 01       	movw	r20, r28
    1fcc:	0f 91       	pop	r16
    1fce:	1f 91       	pop	r17
    1fd0:	cf 91       	pop	r28
    1fd2:	df 91       	pop	r29
    1fd4:	0c 94 12 12 	jmp	0x2424	; 0x2424 <__mulsf3x>

00001fd8 <__fp_cmp>:
    1fd8:	99 0f       	add	r25, r25
    1fda:	00 08       	sbc	r0, r0
    1fdc:	55 0f       	add	r21, r21
    1fde:	aa 0b       	sbc	r26, r26
    1fe0:	e0 e8       	ldi	r30, 0x80	; 128
    1fe2:	fe ef       	ldi	r31, 0xFE	; 254
    1fe4:	16 16       	cp	r1, r22
    1fe6:	17 06       	cpc	r1, r23
    1fe8:	e8 07       	cpc	r30, r24
    1fea:	f9 07       	cpc	r31, r25
    1fec:	c0 f0       	brcs	.+48     	; 0x201e <__fp_cmp+0x46>
    1fee:	12 16       	cp	r1, r18
    1ff0:	13 06       	cpc	r1, r19
    1ff2:	e4 07       	cpc	r30, r20
    1ff4:	f5 07       	cpc	r31, r21
    1ff6:	98 f0       	brcs	.+38     	; 0x201e <__fp_cmp+0x46>
    1ff8:	62 1b       	sub	r22, r18
    1ffa:	73 0b       	sbc	r23, r19
    1ffc:	84 0b       	sbc	r24, r20
    1ffe:	95 0b       	sbc	r25, r21
    2000:	39 f4       	brne	.+14     	; 0x2010 <__fp_cmp+0x38>
    2002:	0a 26       	eor	r0, r26
    2004:	61 f0       	breq	.+24     	; 0x201e <__fp_cmp+0x46>
    2006:	23 2b       	or	r18, r19
    2008:	24 2b       	or	r18, r20
    200a:	25 2b       	or	r18, r21
    200c:	21 f4       	brne	.+8      	; 0x2016 <__fp_cmp+0x3e>
    200e:	08 95       	ret
    2010:	0a 26       	eor	r0, r26
    2012:	09 f4       	brne	.+2      	; 0x2016 <__fp_cmp+0x3e>
    2014:	a1 40       	sbci	r26, 0x01	; 1
    2016:	a6 95       	lsr	r26
    2018:	8f ef       	ldi	r24, 0xFF	; 255
    201a:	81 1d       	adc	r24, r1
    201c:	81 1d       	adc	r24, r1
    201e:	08 95       	ret

00002020 <__fp_inf>:
    2020:	97 f9       	bld	r25, 7
    2022:	9f 67       	ori	r25, 0x7F	; 127
    2024:	80 e8       	ldi	r24, 0x80	; 128
    2026:	70 e0       	ldi	r23, 0x00	; 0
    2028:	60 e0       	ldi	r22, 0x00	; 0
    202a:	08 95       	ret

0000202c <__fp_mintl>:
    202c:	88 23       	and	r24, r24
    202e:	71 f4       	brne	.+28     	; 0x204c <__fp_mintl+0x20>
    2030:	77 23       	and	r23, r23
    2032:	21 f0       	breq	.+8      	; 0x203c <__fp_mintl+0x10>
    2034:	98 50       	subi	r25, 0x08	; 8
    2036:	87 2b       	or	r24, r23
    2038:	76 2f       	mov	r23, r22
    203a:	07 c0       	rjmp	.+14     	; 0x204a <__fp_mintl+0x1e>
    203c:	66 23       	and	r22, r22
    203e:	11 f4       	brne	.+4      	; 0x2044 <__fp_mintl+0x18>
    2040:	99 27       	eor	r25, r25
    2042:	0d c0       	rjmp	.+26     	; 0x205e <__fp_mintl+0x32>
    2044:	90 51       	subi	r25, 0x10	; 16
    2046:	86 2b       	or	r24, r22
    2048:	70 e0       	ldi	r23, 0x00	; 0
    204a:	60 e0       	ldi	r22, 0x00	; 0
    204c:	2a f0       	brmi	.+10     	; 0x2058 <__fp_mintl+0x2c>
    204e:	9a 95       	dec	r25
    2050:	66 0f       	add	r22, r22
    2052:	77 1f       	adc	r23, r23
    2054:	88 1f       	adc	r24, r24
    2056:	da f7       	brpl	.-10     	; 0x204e <__fp_mintl+0x22>
    2058:	88 0f       	add	r24, r24
    205a:	96 95       	lsr	r25
    205c:	87 95       	ror	r24
    205e:	97 f9       	bld	r25, 7
    2060:	08 95       	ret

00002062 <__fp_mpack>:
    2062:	9f 3f       	cpi	r25, 0xFF	; 255
    2064:	31 f0       	breq	.+12     	; 0x2072 <__fp_mpack_finite+0xc>

00002066 <__fp_mpack_finite>:
    2066:	91 50       	subi	r25, 0x01	; 1
    2068:	20 f4       	brcc	.+8      	; 0x2072 <__fp_mpack_finite+0xc>
    206a:	87 95       	ror	r24
    206c:	77 95       	ror	r23
    206e:	67 95       	ror	r22
    2070:	b7 95       	ror	r27
    2072:	88 0f       	add	r24, r24
    2074:	91 1d       	adc	r25, r1
    2076:	96 95       	lsr	r25
    2078:	87 95       	ror	r24
    207a:	97 f9       	bld	r25, 7
    207c:	08 95       	ret

0000207e <__fp_nan>:
    207e:	9f ef       	ldi	r25, 0xFF	; 255
    2080:	80 ec       	ldi	r24, 0xC0	; 192
    2082:	08 95       	ret

00002084 <__fp_negdi>:
    2084:	90 95       	com	r25
    2086:	80 95       	com	r24
    2088:	70 95       	com	r23
    208a:	60 95       	com	r22
    208c:	50 95       	com	r21
    208e:	40 95       	com	r20
    2090:	30 95       	com	r19
    2092:	21 95       	neg	r18
    2094:	3f 4f       	sbci	r19, 0xFF	; 255
    2096:	4f 4f       	sbci	r20, 0xFF	; 255
    2098:	5f 4f       	sbci	r21, 0xFF	; 255
    209a:	6f 4f       	sbci	r22, 0xFF	; 255
    209c:	7f 4f       	sbci	r23, 0xFF	; 255
    209e:	8f 4f       	sbci	r24, 0xFF	; 255
    20a0:	9f 4f       	sbci	r25, 0xFF	; 255
    20a2:	08 95       	ret

000020a4 <__fp_powser>:
    20a4:	df 93       	push	r29
    20a6:	cf 93       	push	r28
    20a8:	1f 93       	push	r17
    20aa:	0f 93       	push	r16
    20ac:	ff 92       	push	r15
    20ae:	ef 92       	push	r14
    20b0:	df 92       	push	r13
    20b2:	7b 01       	movw	r14, r22
    20b4:	8c 01       	movw	r16, r24
    20b6:	68 94       	set
    20b8:	06 c0       	rjmp	.+12     	; 0x20c6 <__fp_powser+0x22>
    20ba:	da 2e       	mov	r13, r26
    20bc:	ef 01       	movw	r28, r30
    20be:	0e 94 12 12 	call	0x2424	; 0x2424 <__mulsf3x>
    20c2:	fe 01       	movw	r30, r28
    20c4:	e8 94       	clt
    20c6:	a5 91       	lpm	r26, Z+
    20c8:	25 91       	lpm	r18, Z+
    20ca:	35 91       	lpm	r19, Z+
    20cc:	45 91       	lpm	r20, Z+
    20ce:	55 91       	lpm	r21, Z+
    20d0:	a6 f3       	brts	.-24     	; 0x20ba <__fp_powser+0x16>
    20d2:	ef 01       	movw	r28, r30
    20d4:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__addsf3x>
    20d8:	fe 01       	movw	r30, r28
    20da:	97 01       	movw	r18, r14
    20dc:	a8 01       	movw	r20, r16
    20de:	da 94       	dec	r13
    20e0:	69 f7       	brne	.-38     	; 0x20bc <__fp_powser+0x18>
    20e2:	df 90       	pop	r13
    20e4:	ef 90       	pop	r14
    20e6:	ff 90       	pop	r15
    20e8:	0f 91       	pop	r16
    20ea:	1f 91       	pop	r17
    20ec:	cf 91       	pop	r28
    20ee:	df 91       	pop	r29
    20f0:	08 95       	ret

000020f2 <__fp_powsodd>:
    20f2:	9f 93       	push	r25
    20f4:	8f 93       	push	r24
    20f6:	7f 93       	push	r23
    20f8:	6f 93       	push	r22
    20fa:	ff 93       	push	r31
    20fc:	ef 93       	push	r30
    20fe:	9b 01       	movw	r18, r22
    2100:	ac 01       	movw	r20, r24
    2102:	0e 94 ff 11 	call	0x23fe	; 0x23fe <__mulsf3>
    2106:	ef 91       	pop	r30
    2108:	ff 91       	pop	r31
    210a:	0e 94 52 10 	call	0x20a4	; 0x20a4 <__fp_powser>
    210e:	2f 91       	pop	r18
    2110:	3f 91       	pop	r19
    2112:	4f 91       	pop	r20
    2114:	5f 91       	pop	r21
    2116:	0c 94 ff 11 	jmp	0x23fe	; 0x23fe <__mulsf3>

0000211a <__fp_pscA>:
    211a:	00 24       	eor	r0, r0
    211c:	0a 94       	dec	r0
    211e:	16 16       	cp	r1, r22
    2120:	17 06       	cpc	r1, r23
    2122:	18 06       	cpc	r1, r24
    2124:	09 06       	cpc	r0, r25
    2126:	08 95       	ret

00002128 <__fp_pscB>:
    2128:	00 24       	eor	r0, r0
    212a:	0a 94       	dec	r0
    212c:	12 16       	cp	r1, r18
    212e:	13 06       	cpc	r1, r19
    2130:	14 06       	cpc	r1, r20
    2132:	05 06       	cpc	r0, r21
    2134:	08 95       	ret
    2136:	0c 94 3f 10 	jmp	0x207e	; 0x207e <__fp_nan>

0000213a <__fp_rempio2>:
    213a:	0e 94 f3 10 	call	0x21e6	; 0x21e6 <__fp_splitA>
    213e:	d8 f3       	brcs	.-10     	; 0x2136 <__fp_pscB+0xe>
    2140:	e8 94       	clt
    2142:	e0 e0       	ldi	r30, 0x00	; 0
    2144:	bb 27       	eor	r27, r27
    2146:	9f 57       	subi	r25, 0x7F	; 127
    2148:	f0 f0       	brcs	.+60     	; 0x2186 <__fp_rempio2+0x4c>
    214a:	2a ed       	ldi	r18, 0xDA	; 218
    214c:	3f e0       	ldi	r19, 0x0F	; 15
    214e:	49 ec       	ldi	r20, 0xC9	; 201
    2150:	06 c0       	rjmp	.+12     	; 0x215e <__fp_rempio2+0x24>
    2152:	ee 0f       	add	r30, r30
    2154:	bb 0f       	add	r27, r27
    2156:	66 1f       	adc	r22, r22
    2158:	77 1f       	adc	r23, r23
    215a:	88 1f       	adc	r24, r24
    215c:	28 f0       	brcs	.+10     	; 0x2168 <__fp_rempio2+0x2e>
    215e:	b2 3a       	cpi	r27, 0xA2	; 162
    2160:	62 07       	cpc	r22, r18
    2162:	73 07       	cpc	r23, r19
    2164:	84 07       	cpc	r24, r20
    2166:	28 f0       	brcs	.+10     	; 0x2172 <__fp_rempio2+0x38>
    2168:	b2 5a       	subi	r27, 0xA2	; 162
    216a:	62 0b       	sbc	r22, r18
    216c:	73 0b       	sbc	r23, r19
    216e:	84 0b       	sbc	r24, r20
    2170:	e3 95       	inc	r30
    2172:	9a 95       	dec	r25
    2174:	72 f7       	brpl	.-36     	; 0x2152 <__fp_rempio2+0x18>
    2176:	80 38       	cpi	r24, 0x80	; 128
    2178:	30 f4       	brcc	.+12     	; 0x2186 <__fp_rempio2+0x4c>
    217a:	9a 95       	dec	r25
    217c:	bb 0f       	add	r27, r27
    217e:	66 1f       	adc	r22, r22
    2180:	77 1f       	adc	r23, r23
    2182:	88 1f       	adc	r24, r24
    2184:	d2 f7       	brpl	.-12     	; 0x217a <__fp_rempio2+0x40>
    2186:	90 48       	sbci	r25, 0x80	; 128
    2188:	0c 94 33 10 	jmp	0x2066	; 0x2066 <__fp_mpack_finite>

0000218c <__fp_round>:
    218c:	09 2e       	mov	r0, r25
    218e:	03 94       	inc	r0
    2190:	00 0c       	add	r0, r0
    2192:	11 f4       	brne	.+4      	; 0x2198 <__fp_round+0xc>
    2194:	88 23       	and	r24, r24
    2196:	52 f0       	brmi	.+20     	; 0x21ac <__fp_round+0x20>
    2198:	bb 0f       	add	r27, r27
    219a:	40 f4       	brcc	.+16     	; 0x21ac <__fp_round+0x20>
    219c:	bf 2b       	or	r27, r31
    219e:	11 f4       	brne	.+4      	; 0x21a4 <__fp_round+0x18>
    21a0:	60 ff       	sbrs	r22, 0
    21a2:	04 c0       	rjmp	.+8      	; 0x21ac <__fp_round+0x20>
    21a4:	6f 5f       	subi	r22, 0xFF	; 255
    21a6:	7f 4f       	sbci	r23, 0xFF	; 255
    21a8:	8f 4f       	sbci	r24, 0xFF	; 255
    21aa:	9f 4f       	sbci	r25, 0xFF	; 255
    21ac:	08 95       	ret

000021ae <__fp_sinus>:
    21ae:	ef 93       	push	r30
    21b0:	e0 ff       	sbrs	r30, 0
    21b2:	07 c0       	rjmp	.+14     	; 0x21c2 <__fp_sinus+0x14>
    21b4:	a2 ea       	ldi	r26, 0xA2	; 162
    21b6:	2a ed       	ldi	r18, 0xDA	; 218
    21b8:	3f e0       	ldi	r19, 0x0F	; 15
    21ba:	49 ec       	ldi	r20, 0xC9	; 201
    21bc:	5f eb       	ldi	r21, 0xBF	; 191
    21be:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__addsf3x>
    21c2:	0e 94 c6 10 	call	0x218c	; 0x218c <__fp_round>
    21c6:	0f 90       	pop	r0
    21c8:	03 94       	inc	r0
    21ca:	01 fc       	sbrc	r0, 1
    21cc:	90 58       	subi	r25, 0x80	; 128
    21ce:	e5 ee       	ldi	r30, 0xE5	; 229
    21d0:	f0 e0       	ldi	r31, 0x00	; 0
    21d2:	0c 94 79 10 	jmp	0x20f2	; 0x20f2 <__fp_powsodd>

000021d6 <__fp_split3>:
    21d6:	57 fd       	sbrc	r21, 7
    21d8:	90 58       	subi	r25, 0x80	; 128
    21da:	44 0f       	add	r20, r20
    21dc:	55 1f       	adc	r21, r21
    21de:	59 f0       	breq	.+22     	; 0x21f6 <__fp_splitA+0x10>
    21e0:	5f 3f       	cpi	r21, 0xFF	; 255
    21e2:	71 f0       	breq	.+28     	; 0x2200 <__fp_splitA+0x1a>
    21e4:	47 95       	ror	r20

000021e6 <__fp_splitA>:
    21e6:	88 0f       	add	r24, r24
    21e8:	97 fb       	bst	r25, 7
    21ea:	99 1f       	adc	r25, r25
    21ec:	61 f0       	breq	.+24     	; 0x2206 <__fp_splitA+0x20>
    21ee:	9f 3f       	cpi	r25, 0xFF	; 255
    21f0:	79 f0       	breq	.+30     	; 0x2210 <__fp_splitA+0x2a>
    21f2:	87 95       	ror	r24
    21f4:	08 95       	ret
    21f6:	12 16       	cp	r1, r18
    21f8:	13 06       	cpc	r1, r19
    21fa:	14 06       	cpc	r1, r20
    21fc:	55 1f       	adc	r21, r21
    21fe:	f2 cf       	rjmp	.-28     	; 0x21e4 <__fp_split3+0xe>
    2200:	46 95       	lsr	r20
    2202:	f1 df       	rcall	.-30     	; 0x21e6 <__fp_splitA>
    2204:	08 c0       	rjmp	.+16     	; 0x2216 <__fp_splitA+0x30>
    2206:	16 16       	cp	r1, r22
    2208:	17 06       	cpc	r1, r23
    220a:	18 06       	cpc	r1, r24
    220c:	99 1f       	adc	r25, r25
    220e:	f1 cf       	rjmp	.-30     	; 0x21f2 <__fp_splitA+0xc>
    2210:	86 95       	lsr	r24
    2212:	71 05       	cpc	r23, r1
    2214:	61 05       	cpc	r22, r1
    2216:	08 94       	sec
    2218:	08 95       	ret

0000221a <__fp_trunc>:
    221a:	0e 94 f3 10 	call	0x21e6	; 0x21e6 <__fp_splitA>
    221e:	a0 f0       	brcs	.+40     	; 0x2248 <__fp_trunc+0x2e>
    2220:	be e7       	ldi	r27, 0x7E	; 126
    2222:	b9 17       	cp	r27, r25
    2224:	88 f4       	brcc	.+34     	; 0x2248 <__fp_trunc+0x2e>
    2226:	bb 27       	eor	r27, r27
    2228:	9f 38       	cpi	r25, 0x8F	; 143
    222a:	60 f4       	brcc	.+24     	; 0x2244 <__fp_trunc+0x2a>
    222c:	16 16       	cp	r1, r22
    222e:	b1 1d       	adc	r27, r1
    2230:	67 2f       	mov	r22, r23
    2232:	78 2f       	mov	r23, r24
    2234:	88 27       	eor	r24, r24
    2236:	98 5f       	subi	r25, 0xF8	; 248
    2238:	f7 cf       	rjmp	.-18     	; 0x2228 <__fp_trunc+0xe>
    223a:	86 95       	lsr	r24
    223c:	77 95       	ror	r23
    223e:	67 95       	ror	r22
    2240:	b1 1d       	adc	r27, r1
    2242:	93 95       	inc	r25
    2244:	96 39       	cpi	r25, 0x96	; 150
    2246:	c8 f3       	brcs	.-14     	; 0x223a <__fp_trunc+0x20>
    2248:	08 95       	ret

0000224a <__fp_zero>:
    224a:	e8 94       	clt

0000224c <__fp_szero>:
    224c:	bb 27       	eor	r27, r27
    224e:	66 27       	eor	r22, r22
    2250:	77 27       	eor	r23, r23
    2252:	cb 01       	movw	r24, r22
    2254:	97 f9       	bld	r25, 7
    2256:	08 95       	ret

00002258 <__gesf2>:
    2258:	0e 94 ec 0f 	call	0x1fd8	; 0x1fd8 <__fp_cmp>
    225c:	08 f4       	brcc	.+2      	; 0x2260 <__gesf2+0x8>
    225e:	8f ef       	ldi	r24, 0xFF	; 255
    2260:	08 95       	ret

00002262 <inverse>:
    2262:	9b 01       	movw	r18, r22
    2264:	ac 01       	movw	r20, r24
    2266:	60 e0       	ldi	r22, 0x00	; 0
    2268:	70 e0       	ldi	r23, 0x00	; 0
    226a:	80 e8       	ldi	r24, 0x80	; 128
    226c:	9f e3       	ldi	r25, 0x3F	; 63
    226e:	0c 94 4c 0e 	jmp	0x1c98	; 0x1c98 <__divsf3>
    2272:	0c 94 10 10 	jmp	0x2020	; 0x2020 <__fp_inf>
    2276:	0c 94 31 10 	jmp	0x2062	; 0x2062 <__fp_mpack>

0000227a <ldexp>:
    227a:	0e 94 f3 10 	call	0x21e6	; 0x21e6 <__fp_splitA>
    227e:	d8 f3       	brcs	.-10     	; 0x2276 <inverse+0x14>
    2280:	99 23       	and	r25, r25
    2282:	c9 f3       	breq	.-14     	; 0x2276 <inverse+0x14>
    2284:	94 0f       	add	r25, r20
    2286:	51 1d       	adc	r21, r1
    2288:	a3 f3       	brvs	.-24     	; 0x2272 <inverse+0x10>
    228a:	91 50       	subi	r25, 0x01	; 1
    228c:	50 40       	sbci	r21, 0x00	; 0
    228e:	94 f0       	brlt	.+36     	; 0x22b4 <ldexp+0x3a>
    2290:	59 f0       	breq	.+22     	; 0x22a8 <ldexp+0x2e>
    2292:	88 23       	and	r24, r24
    2294:	32 f0       	brmi	.+12     	; 0x22a2 <ldexp+0x28>
    2296:	66 0f       	add	r22, r22
    2298:	77 1f       	adc	r23, r23
    229a:	88 1f       	adc	r24, r24
    229c:	91 50       	subi	r25, 0x01	; 1
    229e:	50 40       	sbci	r21, 0x00	; 0
    22a0:	c1 f7       	brne	.-16     	; 0x2292 <ldexp+0x18>
    22a2:	9e 3f       	cpi	r25, 0xFE	; 254
    22a4:	51 05       	cpc	r21, r1
    22a6:	2c f7       	brge	.-54     	; 0x2272 <inverse+0x10>
    22a8:	88 0f       	add	r24, r24
    22aa:	91 1d       	adc	r25, r1
    22ac:	96 95       	lsr	r25
    22ae:	87 95       	ror	r24
    22b0:	97 f9       	bld	r25, 7
    22b2:	08 95       	ret
    22b4:	5f 3f       	cpi	r21, 0xFF	; 255
    22b6:	ac f0       	brlt	.+42     	; 0x22e2 <ldexp+0x68>
    22b8:	98 3e       	cpi	r25, 0xE8	; 232
    22ba:	9c f0       	brlt	.+38     	; 0x22e2 <ldexp+0x68>
    22bc:	bb 27       	eor	r27, r27
    22be:	86 95       	lsr	r24
    22c0:	77 95       	ror	r23
    22c2:	67 95       	ror	r22
    22c4:	b7 95       	ror	r27
    22c6:	08 f4       	brcc	.+2      	; 0x22ca <ldexp+0x50>
    22c8:	b1 60       	ori	r27, 0x01	; 1
    22ca:	93 95       	inc	r25
    22cc:	c1 f7       	brne	.-16     	; 0x22be <ldexp+0x44>
    22ce:	bb 0f       	add	r27, r27
    22d0:	58 f7       	brcc	.-42     	; 0x22a8 <ldexp+0x2e>
    22d2:	11 f4       	brne	.+4      	; 0x22d8 <ldexp+0x5e>
    22d4:	60 ff       	sbrs	r22, 0
    22d6:	e8 cf       	rjmp	.-48     	; 0x22a8 <ldexp+0x2e>
    22d8:	6f 5f       	subi	r22, 0xFF	; 255
    22da:	7f 4f       	sbci	r23, 0xFF	; 255
    22dc:	8f 4f       	sbci	r24, 0xFF	; 255
    22de:	9f 4f       	sbci	r25, 0xFF	; 255
    22e0:	e3 cf       	rjmp	.-58     	; 0x22a8 <ldexp+0x2e>
    22e2:	0c 94 26 11 	jmp	0x224c	; 0x224c <__fp_szero>

000022e6 <log10>:
    22e6:	0e 94 83 11 	call	0x2306	; 0x2306 <log>
    22ea:	29 ed       	ldi	r18, 0xD9	; 217
    22ec:	3b e5       	ldi	r19, 0x5B	; 91
    22ee:	4e ed       	ldi	r20, 0xDE	; 222
    22f0:	5e e3       	ldi	r21, 0x3E	; 62
    22f2:	0c 94 ff 11 	jmp	0x23fe	; 0x23fe <__mulsf3>
    22f6:	16 f0       	brts	.+4      	; 0x22fc <log10+0x16>
    22f8:	0c 94 31 10 	jmp	0x2062	; 0x2062 <__fp_mpack>
    22fc:	0c 94 3f 10 	jmp	0x207e	; 0x207e <__fp_nan>
    2300:	68 94       	set
    2302:	0c 94 10 10 	jmp	0x2020	; 0x2020 <__fp_inf>

00002306 <log>:
    2306:	0e 94 f3 10 	call	0x21e6	; 0x21e6 <__fp_splitA>
    230a:	a8 f3       	brcs	.-22     	; 0x22f6 <log10+0x10>
    230c:	99 23       	and	r25, r25
    230e:	c1 f3       	breq	.-16     	; 0x2300 <log10+0x1a>
    2310:	ae f3       	brts	.-22     	; 0x22fc <log10+0x16>
    2312:	df 93       	push	r29
    2314:	cf 93       	push	r28
    2316:	1f 93       	push	r17
    2318:	0f 93       	push	r16
    231a:	ff 92       	push	r15
    231c:	c9 2f       	mov	r28, r25
    231e:	dd 27       	eor	r29, r29
    2320:	88 23       	and	r24, r24
    2322:	2a f0       	brmi	.+10     	; 0x232e <log+0x28>
    2324:	21 97       	sbiw	r28, 0x01	; 1
    2326:	66 0f       	add	r22, r22
    2328:	77 1f       	adc	r23, r23
    232a:	88 1f       	adc	r24, r24
    232c:	da f7       	brpl	.-10     	; 0x2324 <log+0x1e>
    232e:	20 e0       	ldi	r18, 0x00	; 0
    2330:	30 e0       	ldi	r19, 0x00	; 0
    2332:	40 e8       	ldi	r20, 0x80	; 128
    2334:	5f eb       	ldi	r21, 0xBF	; 191
    2336:	9f e3       	ldi	r25, 0x3F	; 63
    2338:	88 39       	cpi	r24, 0x98	; 152
    233a:	20 f0       	brcs	.+8      	; 0x2344 <log+0x3e>
    233c:	80 3e       	cpi	r24, 0xE0	; 224
    233e:	38 f0       	brcs	.+14     	; 0x234e <log+0x48>
    2340:	21 96       	adiw	r28, 0x01	; 1
    2342:	8f 77       	andi	r24, 0x7F	; 127
    2344:	0e 94 75 0d 	call	0x1aea	; 0x1aea <__addsf3>
    2348:	e3 e0       	ldi	r30, 0x03	; 3
    234a:	f1 e0       	ldi	r31, 0x01	; 1
    234c:	04 c0       	rjmp	.+8      	; 0x2356 <log+0x50>
    234e:	0e 94 75 0d 	call	0x1aea	; 0x1aea <__addsf3>
    2352:	e0 e3       	ldi	r30, 0x30	; 48
    2354:	f1 e0       	ldi	r31, 0x01	; 1
    2356:	0e 94 52 10 	call	0x20a4	; 0x20a4 <__fp_powser>
    235a:	8b 01       	movw	r16, r22
    235c:	be 01       	movw	r22, r28
    235e:	ec 01       	movw	r28, r24
    2360:	fb 2e       	mov	r15, r27
    2362:	6f 57       	subi	r22, 0x7F	; 127
    2364:	71 09       	sbc	r23, r1
    2366:	75 95       	asr	r23
    2368:	77 1f       	adc	r23, r23
    236a:	88 0b       	sbc	r24, r24
    236c:	99 0b       	sbc	r25, r25
    236e:	0e 94 3c 0f 	call	0x1e78	; 0x1e78 <__floatsisf>
    2372:	28 e1       	ldi	r18, 0x18	; 24
    2374:	32 e7       	ldi	r19, 0x72	; 114
    2376:	41 e3       	ldi	r20, 0x31	; 49
    2378:	5f e3       	ldi	r21, 0x3F	; 63
    237a:	0e 94 12 12 	call	0x2424	; 0x2424 <__mulsf3x>
    237e:	af 2d       	mov	r26, r15
    2380:	98 01       	movw	r18, r16
    2382:	ae 01       	movw	r20, r28
    2384:	ff 90       	pop	r15
    2386:	0f 91       	pop	r16
    2388:	1f 91       	pop	r17
    238a:	cf 91       	pop	r28
    238c:	df 91       	pop	r29
    238e:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__addsf3x>
    2392:	0c 94 c6 10 	jmp	0x218c	; 0x218c <__fp_round>

00002396 <modf>:
    2396:	fa 01       	movw	r30, r20
    2398:	dc 01       	movw	r26, r24
    239a:	aa 0f       	add	r26, r26
    239c:	bb 1f       	adc	r27, r27
    239e:	9b 01       	movw	r18, r22
    23a0:	ac 01       	movw	r20, r24
    23a2:	bf 57       	subi	r27, 0x7F	; 127
    23a4:	28 f4       	brcc	.+10     	; 0x23b0 <modf+0x1a>
    23a6:	22 27       	eor	r18, r18
    23a8:	33 27       	eor	r19, r19
    23aa:	44 27       	eor	r20, r20
    23ac:	50 78       	andi	r21, 0x80	; 128
    23ae:	20 c0       	rjmp	.+64     	; 0x23f0 <modf+0x5a>
    23b0:	b7 51       	subi	r27, 0x17	; 23
    23b2:	90 f4       	brcc	.+36     	; 0x23d8 <modf+0x42>
    23b4:	ab 2f       	mov	r26, r27
    23b6:	00 24       	eor	r0, r0
    23b8:	46 95       	lsr	r20
    23ba:	37 95       	ror	r19
    23bc:	27 95       	ror	r18
    23be:	01 1c       	adc	r0, r1
    23c0:	a3 95       	inc	r26
    23c2:	d2 f3       	brmi	.-12     	; 0x23b8 <modf+0x22>
    23c4:	00 20       	and	r0, r0
    23c6:	71 f0       	breq	.+28     	; 0x23e4 <modf+0x4e>
    23c8:	22 0f       	add	r18, r18
    23ca:	33 1f       	adc	r19, r19
    23cc:	44 1f       	adc	r20, r20
    23ce:	b3 95       	inc	r27
    23d0:	da f3       	brmi	.-10     	; 0x23c8 <modf+0x32>
    23d2:	0e d0       	rcall	.+28     	; 0x23f0 <modf+0x5a>
    23d4:	0c 94 74 0d 	jmp	0x1ae8	; 0x1ae8 <__subsf3>
    23d8:	61 30       	cpi	r22, 0x01	; 1
    23da:	71 05       	cpc	r23, r1
    23dc:	a0 e8       	ldi	r26, 0x80	; 128
    23de:	8a 07       	cpc	r24, r26
    23e0:	b9 46       	sbci	r27, 0x69	; 105
    23e2:	30 f4       	brcc	.+12     	; 0x23f0 <modf+0x5a>
    23e4:	9b 01       	movw	r18, r22
    23e6:	ac 01       	movw	r20, r24
    23e8:	66 27       	eor	r22, r22
    23ea:	77 27       	eor	r23, r23
    23ec:	88 27       	eor	r24, r24
    23ee:	90 78       	andi	r25, 0x80	; 128
    23f0:	30 96       	adiw	r30, 0x00	; 0
    23f2:	21 f0       	breq	.+8      	; 0x23fc <modf+0x66>
    23f4:	20 83       	st	Z, r18
    23f6:	31 83       	std	Z+1, r19	; 0x01
    23f8:	42 83       	std	Z+2, r20	; 0x02
    23fa:	53 83       	std	Z+3, r21	; 0x03
    23fc:	08 95       	ret

000023fe <__mulsf3>:
    23fe:	0e 94 12 12 	call	0x2424	; 0x2424 <__mulsf3x>
    2402:	0c 94 c6 10 	jmp	0x218c	; 0x218c <__fp_round>
    2406:	0e 94 8d 10 	call	0x211a	; 0x211a <__fp_pscA>
    240a:	38 f0       	brcs	.+14     	; 0x241a <__mulsf3+0x1c>
    240c:	0e 94 94 10 	call	0x2128	; 0x2128 <__fp_pscB>
    2410:	20 f0       	brcs	.+8      	; 0x241a <__mulsf3+0x1c>
    2412:	95 23       	and	r25, r21
    2414:	11 f0       	breq	.+4      	; 0x241a <__mulsf3+0x1c>
    2416:	0c 94 10 10 	jmp	0x2020	; 0x2020 <__fp_inf>
    241a:	0c 94 3f 10 	jmp	0x207e	; 0x207e <__fp_nan>
    241e:	11 24       	eor	r1, r1
    2420:	0c 94 26 11 	jmp	0x224c	; 0x224c <__fp_szero>

00002424 <__mulsf3x>:
    2424:	0e 94 eb 10 	call	0x21d6	; 0x21d6 <__fp_split3>
    2428:	70 f3       	brcs	.-36     	; 0x2406 <__mulsf3+0x8>

0000242a <__mulsf3_pse>:
    242a:	95 9f       	mul	r25, r21
    242c:	c1 f3       	breq	.-16     	; 0x241e <__mulsf3+0x20>
    242e:	95 0f       	add	r25, r21
    2430:	50 e0       	ldi	r21, 0x00	; 0
    2432:	55 1f       	adc	r21, r21
    2434:	62 9f       	mul	r22, r18
    2436:	f0 01       	movw	r30, r0
    2438:	72 9f       	mul	r23, r18
    243a:	bb 27       	eor	r27, r27
    243c:	f0 0d       	add	r31, r0
    243e:	b1 1d       	adc	r27, r1
    2440:	63 9f       	mul	r22, r19
    2442:	aa 27       	eor	r26, r26
    2444:	f0 0d       	add	r31, r0
    2446:	b1 1d       	adc	r27, r1
    2448:	aa 1f       	adc	r26, r26
    244a:	64 9f       	mul	r22, r20
    244c:	66 27       	eor	r22, r22
    244e:	b0 0d       	add	r27, r0
    2450:	a1 1d       	adc	r26, r1
    2452:	66 1f       	adc	r22, r22
    2454:	82 9f       	mul	r24, r18
    2456:	22 27       	eor	r18, r18
    2458:	b0 0d       	add	r27, r0
    245a:	a1 1d       	adc	r26, r1
    245c:	62 1f       	adc	r22, r18
    245e:	73 9f       	mul	r23, r19
    2460:	b0 0d       	add	r27, r0
    2462:	a1 1d       	adc	r26, r1
    2464:	62 1f       	adc	r22, r18
    2466:	83 9f       	mul	r24, r19
    2468:	a0 0d       	add	r26, r0
    246a:	61 1d       	adc	r22, r1
    246c:	22 1f       	adc	r18, r18
    246e:	74 9f       	mul	r23, r20
    2470:	33 27       	eor	r19, r19
    2472:	a0 0d       	add	r26, r0
    2474:	61 1d       	adc	r22, r1
    2476:	23 1f       	adc	r18, r19
    2478:	84 9f       	mul	r24, r20
    247a:	60 0d       	add	r22, r0
    247c:	21 1d       	adc	r18, r1
    247e:	82 2f       	mov	r24, r18
    2480:	76 2f       	mov	r23, r22
    2482:	6a 2f       	mov	r22, r26
    2484:	11 24       	eor	r1, r1
    2486:	9f 57       	subi	r25, 0x7F	; 127
    2488:	50 40       	sbci	r21, 0x00	; 0
    248a:	9a f0       	brmi	.+38     	; 0x24b2 <__mulsf3_pse+0x88>
    248c:	f1 f0       	breq	.+60     	; 0x24ca <__mulsf3_pse+0xa0>
    248e:	88 23       	and	r24, r24
    2490:	4a f0       	brmi	.+18     	; 0x24a4 <__mulsf3_pse+0x7a>
    2492:	ee 0f       	add	r30, r30
    2494:	ff 1f       	adc	r31, r31
    2496:	bb 1f       	adc	r27, r27
    2498:	66 1f       	adc	r22, r22
    249a:	77 1f       	adc	r23, r23
    249c:	88 1f       	adc	r24, r24
    249e:	91 50       	subi	r25, 0x01	; 1
    24a0:	50 40       	sbci	r21, 0x00	; 0
    24a2:	a9 f7       	brne	.-22     	; 0x248e <__mulsf3_pse+0x64>
    24a4:	9e 3f       	cpi	r25, 0xFE	; 254
    24a6:	51 05       	cpc	r21, r1
    24a8:	80 f0       	brcs	.+32     	; 0x24ca <__mulsf3_pse+0xa0>
    24aa:	0c 94 10 10 	jmp	0x2020	; 0x2020 <__fp_inf>
    24ae:	0c 94 26 11 	jmp	0x224c	; 0x224c <__fp_szero>
    24b2:	5f 3f       	cpi	r21, 0xFF	; 255
    24b4:	e4 f3       	brlt	.-8      	; 0x24ae <__mulsf3_pse+0x84>
    24b6:	98 3e       	cpi	r25, 0xE8	; 232
    24b8:	d4 f3       	brlt	.-12     	; 0x24ae <__mulsf3_pse+0x84>
    24ba:	86 95       	lsr	r24
    24bc:	77 95       	ror	r23
    24be:	67 95       	ror	r22
    24c0:	b7 95       	ror	r27
    24c2:	f7 95       	ror	r31
    24c4:	e7 95       	ror	r30
    24c6:	9f 5f       	subi	r25, 0xFF	; 255
    24c8:	c1 f7       	brne	.-16     	; 0x24ba <__mulsf3_pse+0x90>
    24ca:	fe 2b       	or	r31, r30
    24cc:	88 0f       	add	r24, r24
    24ce:	91 1d       	adc	r25, r1
    24d0:	96 95       	lsr	r25
    24d2:	87 95       	ror	r24
    24d4:	97 f9       	bld	r25, 7
    24d6:	08 95       	ret

000024d8 <pow>:
    24d8:	fa 01       	movw	r30, r20
    24da:	ee 0f       	add	r30, r30
    24dc:	ff 1f       	adc	r31, r31
    24de:	30 96       	adiw	r30, 0x00	; 0
    24e0:	21 05       	cpc	r18, r1
    24e2:	31 05       	cpc	r19, r1
    24e4:	a1 f1       	breq	.+104    	; 0x254e <pow+0x76>
    24e6:	61 15       	cp	r22, r1
    24e8:	71 05       	cpc	r23, r1
    24ea:	61 f4       	brne	.+24     	; 0x2504 <pow+0x2c>
    24ec:	80 38       	cpi	r24, 0x80	; 128
    24ee:	bf e3       	ldi	r27, 0x3F	; 63
    24f0:	9b 07       	cpc	r25, r27
    24f2:	49 f1       	breq	.+82     	; 0x2546 <pow+0x6e>
    24f4:	68 94       	set
    24f6:	90 38       	cpi	r25, 0x80	; 128
    24f8:	81 05       	cpc	r24, r1
    24fa:	61 f0       	breq	.+24     	; 0x2514 <pow+0x3c>
    24fc:	80 38       	cpi	r24, 0x80	; 128
    24fe:	bf ef       	ldi	r27, 0xFF	; 255
    2500:	9b 07       	cpc	r25, r27
    2502:	41 f0       	breq	.+16     	; 0x2514 <pow+0x3c>
    2504:	99 23       	and	r25, r25
    2506:	4a f5       	brpl	.+82     	; 0x255a <pow+0x82>
    2508:	ff 3f       	cpi	r31, 0xFF	; 255
    250a:	e1 05       	cpc	r30, r1
    250c:	31 05       	cpc	r19, r1
    250e:	21 05       	cpc	r18, r1
    2510:	19 f1       	breq	.+70     	; 0x2558 <pow+0x80>
    2512:	e8 94       	clt
    2514:	08 94       	sec
    2516:	e7 95       	ror	r30
    2518:	d9 01       	movw	r26, r18
    251a:	aa 23       	and	r26, r26
    251c:	29 f4       	brne	.+10     	; 0x2528 <pow+0x50>
    251e:	ab 2f       	mov	r26, r27
    2520:	be 2f       	mov	r27, r30
    2522:	f8 5f       	subi	r31, 0xF8	; 248
    2524:	d0 f3       	brcs	.-12     	; 0x251a <pow+0x42>
    2526:	10 c0       	rjmp	.+32     	; 0x2548 <pow+0x70>
    2528:	ff 5f       	subi	r31, 0xFF	; 255
    252a:	70 f4       	brcc	.+28     	; 0x2548 <pow+0x70>
    252c:	a6 95       	lsr	r26
    252e:	e0 f7       	brcc	.-8      	; 0x2528 <pow+0x50>
    2530:	f7 39       	cpi	r31, 0x97	; 151
    2532:	50 f0       	brcs	.+20     	; 0x2548 <pow+0x70>
    2534:	19 f0       	breq	.+6      	; 0x253c <pow+0x64>
    2536:	ff 3a       	cpi	r31, 0xAF	; 175
    2538:	38 f4       	brcc	.+14     	; 0x2548 <pow+0x70>
    253a:	9f 77       	andi	r25, 0x7F	; 127
    253c:	9f 93       	push	r25
    253e:	0d d0       	rcall	.+26     	; 0x255a <pow+0x82>
    2540:	0f 90       	pop	r0
    2542:	07 fc       	sbrc	r0, 7
    2544:	90 58       	subi	r25, 0x80	; 128
    2546:	08 95       	ret
    2548:	46 f0       	brts	.+16     	; 0x255a <pow+0x82>
    254a:	0c 94 3f 10 	jmp	0x207e	; 0x207e <__fp_nan>
    254e:	60 e0       	ldi	r22, 0x00	; 0
    2550:	70 e0       	ldi	r23, 0x00	; 0
    2552:	80 e8       	ldi	r24, 0x80	; 128
    2554:	9f e3       	ldi	r25, 0x3F	; 63
    2556:	08 95       	ret
    2558:	4f e7       	ldi	r20, 0x7F	; 127
    255a:	9f 77       	andi	r25, 0x7F	; 127
    255c:	5f 93       	push	r21
    255e:	4f 93       	push	r20
    2560:	3f 93       	push	r19
    2562:	2f 93       	push	r18
    2564:	0e 94 83 11 	call	0x2306	; 0x2306 <log>
    2568:	2f 91       	pop	r18
    256a:	3f 91       	pop	r19
    256c:	4f 91       	pop	r20
    256e:	5f 91       	pop	r21
    2570:	0e 94 ff 11 	call	0x23fe	; 0x23fe <__mulsf3>
    2574:	0c 94 c6 0e 	jmp	0x1d8c	; 0x1d8c <exp>

00002578 <round>:
    2578:	0e 94 f3 10 	call	0x21e6	; 0x21e6 <__fp_splitA>
    257c:	e8 f0       	brcs	.+58     	; 0x25b8 <round+0x40>
    257e:	9e 37       	cpi	r25, 0x7E	; 126
    2580:	e8 f0       	brcs	.+58     	; 0x25bc <round+0x44>
    2582:	96 39       	cpi	r25, 0x96	; 150
    2584:	b8 f4       	brcc	.+46     	; 0x25b4 <round+0x3c>
    2586:	9e 38       	cpi	r25, 0x8E	; 142
    2588:	48 f4       	brcc	.+18     	; 0x259c <round+0x24>
    258a:	67 2f       	mov	r22, r23
    258c:	78 2f       	mov	r23, r24
    258e:	88 27       	eor	r24, r24
    2590:	98 5f       	subi	r25, 0xF8	; 248
    2592:	f9 cf       	rjmp	.-14     	; 0x2586 <round+0xe>
    2594:	86 95       	lsr	r24
    2596:	77 95       	ror	r23
    2598:	67 95       	ror	r22
    259a:	93 95       	inc	r25
    259c:	95 39       	cpi	r25, 0x95	; 149
    259e:	d0 f3       	brcs	.-12     	; 0x2594 <round+0x1c>
    25a0:	b6 2f       	mov	r27, r22
    25a2:	b1 70       	andi	r27, 0x01	; 1
    25a4:	6b 0f       	add	r22, r27
    25a6:	71 1d       	adc	r23, r1
    25a8:	81 1d       	adc	r24, r1
    25aa:	20 f4       	brcc	.+8      	; 0x25b4 <round+0x3c>
    25ac:	87 95       	ror	r24
    25ae:	77 95       	ror	r23
    25b0:	67 95       	ror	r22
    25b2:	93 95       	inc	r25
    25b4:	0c 94 16 10 	jmp	0x202c	; 0x202c <__fp_mintl>
    25b8:	0c 94 31 10 	jmp	0x2062	; 0x2062 <__fp_mpack>
    25bc:	0c 94 26 11 	jmp	0x224c	; 0x224c <__fp_szero>

000025c0 <sinh>:
    25c0:	9f 93       	push	r25
    25c2:	9f 77       	andi	r25, 0x7F	; 127
    25c4:	fe e3       	ldi	r31, 0x3E	; 62
    25c6:	80 3a       	cpi	r24, 0xA0	; 160
    25c8:	9f 07       	cpc	r25, r31
    25ca:	28 f4       	brcc	.+10     	; 0x25d6 <sinh+0x16>
    25cc:	ed e5       	ldi	r30, 0x5D	; 93
    25ce:	f1 e0       	ldi	r31, 0x01	; 1
    25d0:	0e 94 79 10 	call	0x20f2	; 0x20f2 <__fp_powsodd>
    25d4:	17 c0       	rjmp	.+46     	; 0x2604 <sinh+0x44>
    25d6:	90 68       	ori	r25, 0x80	; 128
    25d8:	0e 94 c6 0e 	call	0x1d8c	; 0x1d8c <exp>
    25dc:	4f ef       	ldi	r20, 0xFF	; 255
    25de:	5f ef       	ldi	r21, 0xFF	; 255
    25e0:	0e 94 3d 11 	call	0x227a	; 0x227a <ldexp>
    25e4:	9f 93       	push	r25
    25e6:	8f 93       	push	r24
    25e8:	7f 93       	push	r23
    25ea:	6f 93       	push	r22
    25ec:	42 e0       	ldi	r20, 0x02	; 2
    25ee:	50 e0       	ldi	r21, 0x00	; 0
    25f0:	0e 94 3d 11 	call	0x227a	; 0x227a <ldexp>
    25f4:	0e 94 31 11 	call	0x2262	; 0x2262 <inverse>
    25f8:	2f 91       	pop	r18
    25fa:	3f 91       	pop	r19
    25fc:	4f 91       	pop	r20
    25fe:	5f 91       	pop	r21
    2600:	0e 94 74 0d 	call	0x1ae8	; 0x1ae8 <__subsf3>
    2604:	0f 90       	pop	r0
    2606:	07 fc       	sbrc	r0, 7
    2608:	90 68       	ori	r25, 0x80	; 128
    260a:	08 95       	ret

0000260c <sin>:
    260c:	9f 93       	push	r25
    260e:	0e 94 9d 10 	call	0x213a	; 0x213a <__fp_rempio2>
    2612:	0f 90       	pop	r0
    2614:	07 fc       	sbrc	r0, 7
    2616:	ee 5f       	subi	r30, 0xFE	; 254
    2618:	0c 94 d7 10 	jmp	0x21ae	; 0x21ae <__fp_sinus>
    261c:	19 f4       	brne	.+6      	; 0x2624 <sin+0x18>
    261e:	16 f4       	brtc	.+4      	; 0x2624 <sin+0x18>
    2620:	0c 94 3f 10 	jmp	0x207e	; 0x207e <__fp_nan>
    2624:	0c 94 31 10 	jmp	0x2062	; 0x2062 <__fp_mpack>

00002628 <sqrt>:
    2628:	0e 94 f3 10 	call	0x21e6	; 0x21e6 <__fp_splitA>
    262c:	b8 f3       	brcs	.-18     	; 0x261c <sin+0x10>
    262e:	99 23       	and	r25, r25
    2630:	c9 f3       	breq	.-14     	; 0x2624 <sin+0x18>
    2632:	b6 f3       	brts	.-20     	; 0x2620 <sin+0x14>
    2634:	9f 57       	subi	r25, 0x7F	; 127
    2636:	55 0b       	sbc	r21, r21
    2638:	87 ff       	sbrs	r24, 7
    263a:	0e 94 b1 13 	call	0x2762	; 0x2762 <__fp_norm2>
    263e:	00 24       	eor	r0, r0
    2640:	a0 e6       	ldi	r26, 0x60	; 96
    2642:	40 ea       	ldi	r20, 0xA0	; 160
    2644:	90 01       	movw	r18, r0
    2646:	80 58       	subi	r24, 0x80	; 128
    2648:	56 95       	lsr	r21
    264a:	97 95       	ror	r25
    264c:	28 f4       	brcc	.+10     	; 0x2658 <sqrt+0x30>
    264e:	80 5c       	subi	r24, 0xC0	; 192
    2650:	66 0f       	add	r22, r22
    2652:	77 1f       	adc	r23, r23
    2654:	88 1f       	adc	r24, r24
    2656:	20 f0       	brcs	.+8      	; 0x2660 <sqrt+0x38>
    2658:	26 17       	cp	r18, r22
    265a:	37 07       	cpc	r19, r23
    265c:	48 07       	cpc	r20, r24
    265e:	30 f4       	brcc	.+12     	; 0x266c <sqrt+0x44>
    2660:	62 1b       	sub	r22, r18
    2662:	73 0b       	sbc	r23, r19
    2664:	84 0b       	sbc	r24, r20
    2666:	20 29       	or	r18, r0
    2668:	31 29       	or	r19, r1
    266a:	4a 2b       	or	r20, r26
    266c:	a6 95       	lsr	r26
    266e:	17 94       	ror	r1
    2670:	07 94       	ror	r0
    2672:	20 25       	eor	r18, r0
    2674:	31 25       	eor	r19, r1
    2676:	4a 27       	eor	r20, r26
    2678:	58 f7       	brcc	.-42     	; 0x2650 <sqrt+0x28>
    267a:	66 0f       	add	r22, r22
    267c:	77 1f       	adc	r23, r23
    267e:	88 1f       	adc	r24, r24
    2680:	20 f0       	brcs	.+8      	; 0x268a <sqrt+0x62>
    2682:	26 17       	cp	r18, r22
    2684:	37 07       	cpc	r19, r23
    2686:	48 07       	cpc	r20, r24
    2688:	30 f4       	brcc	.+12     	; 0x2696 <sqrt+0x6e>
    268a:	62 0b       	sbc	r22, r18
    268c:	73 0b       	sbc	r23, r19
    268e:	84 0b       	sbc	r24, r20
    2690:	20 0d       	add	r18, r0
    2692:	31 1d       	adc	r19, r1
    2694:	41 1d       	adc	r20, r1
    2696:	a0 95       	com	r26
    2698:	81 f7       	brne	.-32     	; 0x267a <sqrt+0x52>
    269a:	b9 01       	movw	r22, r18
    269c:	84 2f       	mov	r24, r20
    269e:	91 58       	subi	r25, 0x81	; 129
    26a0:	88 0f       	add	r24, r24
    26a2:	96 95       	lsr	r25
    26a4:	87 95       	ror	r24
    26a6:	08 95       	ret

000026a8 <square>:
    26a8:	9b 01       	movw	r18, r22
    26aa:	ac 01       	movw	r20, r24
    26ac:	0c 94 ff 11 	jmp	0x23fe	; 0x23fe <__mulsf3>

000026b0 <tanh>:
    26b0:	9f 93       	push	r25
    26b2:	9f 77       	andi	r25, 0x7F	; 127
    26b4:	fe e3       	ldi	r31, 0x3E	; 62
    26b6:	80 31       	cpi	r24, 0x10	; 16
    26b8:	9f 07       	cpc	r25, r31
    26ba:	28 f4       	brcc	.+10     	; 0x26c6 <tanh+0x16>
    26bc:	ec e6       	ldi	r30, 0x6C	; 108
    26be:	f1 e0       	ldi	r31, 0x01	; 1
    26c0:	0e 94 79 10 	call	0x20f2	; 0x20f2 <__fp_powsodd>
    26c4:	25 c0       	rjmp	.+74     	; 0x2710 <tanh+0x60>
    26c6:	90 68       	ori	r25, 0x80	; 128
    26c8:	41 e0       	ldi	r20, 0x01	; 1
    26ca:	50 e0       	ldi	r21, 0x00	; 0
    26cc:	0e 94 3d 11 	call	0x227a	; 0x227a <ldexp>
    26d0:	0e 94 c6 0e 	call	0x1d8c	; 0x1d8c <exp>
    26d4:	9f 93       	push	r25
    26d6:	8f 93       	push	r24
    26d8:	7f 93       	push	r23
    26da:	6f 93       	push	r22
    26dc:	20 e0       	ldi	r18, 0x00	; 0
    26de:	30 e0       	ldi	r19, 0x00	; 0
    26e0:	40 e8       	ldi	r20, 0x80	; 128
    26e2:	5f e3       	ldi	r21, 0x3F	; 63
    26e4:	0e 94 75 0d 	call	0x1aea	; 0x1aea <__addsf3>
    26e8:	2f 91       	pop	r18
    26ea:	3f 91       	pop	r19
    26ec:	4f 91       	pop	r20
    26ee:	5f 91       	pop	r21
    26f0:	9f 93       	push	r25
    26f2:	8f 93       	push	r24
    26f4:	7f 93       	push	r23
    26f6:	6f 93       	push	r22
    26f8:	60 e0       	ldi	r22, 0x00	; 0
    26fa:	70 e0       	ldi	r23, 0x00	; 0
    26fc:	80 e8       	ldi	r24, 0x80	; 128
    26fe:	9f e3       	ldi	r25, 0x3F	; 63
    2700:	0e 94 74 0d 	call	0x1ae8	; 0x1ae8 <__subsf3>
    2704:	2f 91       	pop	r18
    2706:	3f 91       	pop	r19
    2708:	4f 91       	pop	r20
    270a:	5f 91       	pop	r21
    270c:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <__divsf3>
    2710:	0f 90       	pop	r0
    2712:	07 fc       	sbrc	r0, 7
    2714:	90 58       	subi	r25, 0x80	; 128
    2716:	08 95       	ret

00002718 <tan>:
    2718:	df 93       	push	r29
    271a:	d9 2f       	mov	r29, r25
    271c:	0e 94 9d 10 	call	0x213a	; 0x213a <__fp_rempio2>
    2720:	e6 95       	lsr	r30
    2722:	d7 95       	ror	r29
    2724:	2a ed       	ldi	r18, 0xDA	; 218
    2726:	3f e0       	ldi	r19, 0x0F	; 15
    2728:	49 e4       	ldi	r20, 0x49	; 73
    272a:	5f e3       	ldi	r21, 0x3F	; 63
    272c:	b3 3a       	cpi	r27, 0xA3	; 163
    272e:	62 07       	cpc	r22, r18
    2730:	73 07       	cpc	r23, r19
    2732:	84 07       	cpc	r24, r20
    2734:	95 07       	cpc	r25, r21
    2736:	d7 95       	ror	r29
    2738:	3a f0       	brmi	.+14     	; 0x2748 <tan+0x30>
    273a:	a2 ea       	ldi	r26, 0xA2	; 162
    273c:	49 ec       	ldi	r20, 0xC9	; 201
    273e:	90 68       	ori	r25, 0x80	; 128
    2740:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__addsf3x>
    2744:	0e 94 c6 10 	call	0x218c	; 0x218c <__fp_round>
    2748:	eb e7       	ldi	r30, 0x7B	; 123
    274a:	f1 e0       	ldi	r31, 0x01	; 1
    274c:	0e 94 79 10 	call	0x20f2	; 0x20f2 <__fp_powsodd>
    2750:	dd 0f       	add	r29, r29
    2752:	13 f0       	brvs	.+4      	; 0x2758 <tan+0x40>
    2754:	0e 94 31 11 	call	0x2262	; 0x2262 <inverse>
    2758:	dd 0f       	add	r29, r29
    275a:	0b f4       	brvc	.+2      	; 0x275e <tan+0x46>
    275c:	90 58       	subi	r25, 0x80	; 128
    275e:	df 91       	pop	r29
    2760:	08 95       	ret

00002762 <__fp_norm2>:
    2762:	91 50       	subi	r25, 0x01	; 1
    2764:	50 40       	sbci	r21, 0x00	; 0
    2766:	66 0f       	add	r22, r22
    2768:	77 1f       	adc	r23, r23
    276a:	88 1f       	adc	r24, r24
    276c:	d2 f7       	brpl	.-12     	; 0x2762 <__fp_norm2>
    276e:	08 95       	ret

00002770 <__moddi3>:
    2770:	68 94       	set
    2772:	01 c0       	rjmp	.+2      	; 0x2776 <__divdi3_moddi3>

00002774 <__divdi3>:
    2774:	e8 94       	clt

00002776 <__divdi3_moddi3>:
    2776:	f9 2f       	mov	r31, r25
    2778:	f1 2b       	or	r31, r17
    277a:	12 f0       	brmi	.+4      	; 0x2780 <__divdi3_moddi3+0xa>
    277c:	0c 94 ec 13 	jmp	0x27d8	; 0x27d8 <__udivdi3_umoddi3>
    2780:	a0 e0       	ldi	r26, 0x00	; 0
    2782:	b0 e0       	ldi	r27, 0x00	; 0
    2784:	e6 ec       	ldi	r30, 0xC6	; 198
    2786:	f3 e1       	ldi	r31, 0x13	; 19
    2788:	0c 94 5e 14 	jmp	0x28bc	; 0x28bc <__prologue_saves__+0xc>
    278c:	09 2e       	mov	r0, r25
    278e:	05 94       	asr	r0
    2790:	22 f4       	brpl	.+8      	; 0x279a <__divdi3_moddi3+0x24>
    2792:	0e 94 48 14 	call	0x2890	; 0x2890 <__negdi2>
    2796:	11 23       	and	r17, r17
    2798:	92 f4       	brpl	.+36     	; 0x27be <__divdi3_moddi3+0x48>
    279a:	f0 e8       	ldi	r31, 0x80	; 128
    279c:	0f 26       	eor	r0, r31
    279e:	ff ef       	ldi	r31, 0xFF	; 255
    27a0:	e0 94       	com	r14
    27a2:	f0 94       	com	r15
    27a4:	00 95       	com	r16
    27a6:	10 95       	com	r17
    27a8:	b0 94       	com	r11
    27aa:	c0 94       	com	r12
    27ac:	d0 94       	com	r13
    27ae:	a1 94       	neg	r10
    27b0:	bf 0a       	sbc	r11, r31
    27b2:	cf 0a       	sbc	r12, r31
    27b4:	df 0a       	sbc	r13, r31
    27b6:	ef 0a       	sbc	r14, r31
    27b8:	ff 0a       	sbc	r15, r31
    27ba:	0f 0b       	sbc	r16, r31
    27bc:	1f 0b       	sbc	r17, r31
    27be:	0e 94 f7 13 	call	0x27ee	; 0x27ee <__udivmod64>
    27c2:	07 fc       	sbrc	r0, 7
    27c4:	0e 94 48 14 	call	0x2890	; 0x2890 <__negdi2>
    27c8:	cd b7       	in	r28, 0x3d	; 61
    27ca:	de b7       	in	r29, 0x3e	; 62
    27cc:	ec e0       	ldi	r30, 0x0C	; 12
    27ce:	0c 94 7a 14 	jmp	0x28f4	; 0x28f4 <__epilogue_restores__+0xc>

000027d2 <__umoddi3>:
    27d2:	68 94       	set
    27d4:	01 c0       	rjmp	.+2      	; 0x27d8 <__udivdi3_umoddi3>

000027d6 <__udivdi3>:
    27d6:	e8 94       	clt

000027d8 <__udivdi3_umoddi3>:
    27d8:	8f 92       	push	r8
    27da:	9f 92       	push	r9
    27dc:	cf 93       	push	r28
    27de:	df 93       	push	r29
    27e0:	0e 94 f7 13 	call	0x27ee	; 0x27ee <__udivmod64>
    27e4:	df 91       	pop	r29
    27e6:	cf 91       	pop	r28
    27e8:	9f 90       	pop	r9
    27ea:	8f 90       	pop	r8
    27ec:	08 95       	ret

000027ee <__udivmod64>:
    27ee:	88 24       	eor	r8, r8
    27f0:	99 24       	eor	r9, r9
    27f2:	f4 01       	movw	r30, r8
    27f4:	e4 01       	movw	r28, r8
    27f6:	b0 e4       	ldi	r27, 0x40	; 64
    27f8:	9f 93       	push	r25
    27fa:	aa 27       	eor	r26, r26
    27fc:	9a 15       	cp	r25, r10
    27fe:	8b 04       	cpc	r8, r11
    2800:	9c 04       	cpc	r9, r12
    2802:	ed 05       	cpc	r30, r13
    2804:	fe 05       	cpc	r31, r14
    2806:	cf 05       	cpc	r28, r15
    2808:	d0 07       	cpc	r29, r16
    280a:	a1 07       	cpc	r26, r17
    280c:	98 f4       	brcc	.+38     	; 0x2834 <__udivmod64+0x46>
    280e:	ad 2f       	mov	r26, r29
    2810:	dc 2f       	mov	r29, r28
    2812:	cf 2f       	mov	r28, r31
    2814:	fe 2f       	mov	r31, r30
    2816:	e9 2d       	mov	r30, r9
    2818:	98 2c       	mov	r9, r8
    281a:	89 2e       	mov	r8, r25
    281c:	98 2f       	mov	r25, r24
    281e:	87 2f       	mov	r24, r23
    2820:	76 2f       	mov	r23, r22
    2822:	65 2f       	mov	r22, r21
    2824:	54 2f       	mov	r21, r20
    2826:	43 2f       	mov	r20, r19
    2828:	32 2f       	mov	r19, r18
    282a:	22 27       	eor	r18, r18
    282c:	b8 50       	subi	r27, 0x08	; 8
    282e:	31 f7       	brne	.-52     	; 0x27fc <__udivmod64+0xe>
    2830:	bf 91       	pop	r27
    2832:	27 c0       	rjmp	.+78     	; 0x2882 <__udivmod64+0x94>
    2834:	1b 2e       	mov	r1, r27
    2836:	bf 91       	pop	r27
    2838:	bb 27       	eor	r27, r27
    283a:	22 0f       	add	r18, r18
    283c:	33 1f       	adc	r19, r19
    283e:	44 1f       	adc	r20, r20
    2840:	55 1f       	adc	r21, r21
    2842:	66 1f       	adc	r22, r22
    2844:	77 1f       	adc	r23, r23
    2846:	88 1f       	adc	r24, r24
    2848:	99 1f       	adc	r25, r25
    284a:	88 1c       	adc	r8, r8
    284c:	99 1c       	adc	r9, r9
    284e:	ee 1f       	adc	r30, r30
    2850:	ff 1f       	adc	r31, r31
    2852:	cc 1f       	adc	r28, r28
    2854:	dd 1f       	adc	r29, r29
    2856:	aa 1f       	adc	r26, r26
    2858:	bb 1f       	adc	r27, r27
    285a:	8a 14       	cp	r8, r10
    285c:	9b 04       	cpc	r9, r11
    285e:	ec 05       	cpc	r30, r12
    2860:	fd 05       	cpc	r31, r13
    2862:	ce 05       	cpc	r28, r14
    2864:	df 05       	cpc	r29, r15
    2866:	a0 07       	cpc	r26, r16
    2868:	b1 07       	cpc	r27, r17
    286a:	48 f0       	brcs	.+18     	; 0x287e <__udivmod64+0x90>
    286c:	8a 18       	sub	r8, r10
    286e:	9b 08       	sbc	r9, r11
    2870:	ec 09       	sbc	r30, r12
    2872:	fd 09       	sbc	r31, r13
    2874:	ce 09       	sbc	r28, r14
    2876:	df 09       	sbc	r29, r15
    2878:	a0 0b       	sbc	r26, r16
    287a:	b1 0b       	sbc	r27, r17
    287c:	21 60       	ori	r18, 0x01	; 1
    287e:	1a 94       	dec	r1
    2880:	e1 f6       	brne	.-72     	; 0x283a <__udivmod64+0x4c>
    2882:	2e f4       	brtc	.+10     	; 0x288e <__udivmod64+0xa0>
    2884:	94 01       	movw	r18, r8
    2886:	af 01       	movw	r20, r30
    2888:	be 01       	movw	r22, r28
    288a:	cd 01       	movw	r24, r26
    288c:	00 0c       	add	r0, r0
    288e:	08 95       	ret

00002890 <__negdi2>:
    2890:	60 95       	com	r22
    2892:	70 95       	com	r23
    2894:	80 95       	com	r24
    2896:	90 95       	com	r25
    2898:	30 95       	com	r19
    289a:	40 95       	com	r20
    289c:	50 95       	com	r21
    289e:	21 95       	neg	r18
    28a0:	3f 4f       	sbci	r19, 0xFF	; 255
    28a2:	4f 4f       	sbci	r20, 0xFF	; 255
    28a4:	5f 4f       	sbci	r21, 0xFF	; 255
    28a6:	6f 4f       	sbci	r22, 0xFF	; 255
    28a8:	7f 4f       	sbci	r23, 0xFF	; 255
    28aa:	8f 4f       	sbci	r24, 0xFF	; 255
    28ac:	9f 4f       	sbci	r25, 0xFF	; 255
    28ae:	08 95       	ret

000028b0 <__prologue_saves__>:
    28b0:	2f 92       	push	r2
    28b2:	3f 92       	push	r3
    28b4:	4f 92       	push	r4
    28b6:	5f 92       	push	r5
    28b8:	6f 92       	push	r6
    28ba:	7f 92       	push	r7
    28bc:	8f 92       	push	r8
    28be:	9f 92       	push	r9
    28c0:	af 92       	push	r10
    28c2:	bf 92       	push	r11
    28c4:	cf 92       	push	r12
    28c6:	df 92       	push	r13
    28c8:	ef 92       	push	r14
    28ca:	ff 92       	push	r15
    28cc:	0f 93       	push	r16
    28ce:	1f 93       	push	r17
    28d0:	cf 93       	push	r28
    28d2:	df 93       	push	r29
    28d4:	cd b7       	in	r28, 0x3d	; 61
    28d6:	de b7       	in	r29, 0x3e	; 62
    28d8:	ca 1b       	sub	r28, r26
    28da:	db 0b       	sbc	r29, r27
    28dc:	0f b6       	in	r0, 0x3f	; 63
    28de:	f8 94       	cli
    28e0:	de bf       	out	0x3e, r29	; 62
    28e2:	0f be       	out	0x3f, r0	; 63
    28e4:	cd bf       	out	0x3d, r28	; 61
    28e6:	09 94       	ijmp

000028e8 <__epilogue_restores__>:
    28e8:	2a 88       	ldd	r2, Y+18	; 0x12
    28ea:	39 88       	ldd	r3, Y+17	; 0x11
    28ec:	48 88       	ldd	r4, Y+16	; 0x10
    28ee:	5f 84       	ldd	r5, Y+15	; 0x0f
    28f0:	6e 84       	ldd	r6, Y+14	; 0x0e
    28f2:	7d 84       	ldd	r7, Y+13	; 0x0d
    28f4:	8c 84       	ldd	r8, Y+12	; 0x0c
    28f6:	9b 84       	ldd	r9, Y+11	; 0x0b
    28f8:	aa 84       	ldd	r10, Y+10	; 0x0a
    28fa:	b9 84       	ldd	r11, Y+9	; 0x09
    28fc:	c8 84       	ldd	r12, Y+8	; 0x08
    28fe:	df 80       	ldd	r13, Y+7	; 0x07
    2900:	ee 80       	ldd	r14, Y+6	; 0x06
    2902:	fd 80       	ldd	r15, Y+5	; 0x05
    2904:	0c 81       	ldd	r16, Y+4	; 0x04
    2906:	1b 81       	ldd	r17, Y+3	; 0x03
    2908:	aa 81       	ldd	r26, Y+2	; 0x02
    290a:	b9 81       	ldd	r27, Y+1	; 0x01
    290c:	ce 0f       	add	r28, r30
    290e:	d1 1d       	adc	r29, r1
    2910:	0f b6       	in	r0, 0x3f	; 63
    2912:	f8 94       	cli
    2914:	de bf       	out	0x3e, r29	; 62
    2916:	0f be       	out	0x3f, r0	; 63
    2918:	cd bf       	out	0x3d, r28	; 61
    291a:	ed 01       	movw	r28, r26
    291c:	08 95       	ret

0000291e <__ashldi3>:
    291e:	0f 93       	push	r16
    2920:	08 30       	cpi	r16, 0x08	; 8
    2922:	90 f0       	brcs	.+36     	; 0x2948 <__ashldi3+0x2a>
    2924:	98 2f       	mov	r25, r24
    2926:	87 2f       	mov	r24, r23
    2928:	76 2f       	mov	r23, r22
    292a:	65 2f       	mov	r22, r21
    292c:	54 2f       	mov	r21, r20
    292e:	43 2f       	mov	r20, r19
    2930:	32 2f       	mov	r19, r18
    2932:	22 27       	eor	r18, r18
    2934:	08 50       	subi	r16, 0x08	; 8
    2936:	f4 cf       	rjmp	.-24     	; 0x2920 <__ashldi3+0x2>
    2938:	22 0f       	add	r18, r18
    293a:	33 1f       	adc	r19, r19
    293c:	44 1f       	adc	r20, r20
    293e:	55 1f       	adc	r21, r21
    2940:	66 1f       	adc	r22, r22
    2942:	77 1f       	adc	r23, r23
    2944:	88 1f       	adc	r24, r24
    2946:	99 1f       	adc	r25, r25
    2948:	0a 95       	dec	r16
    294a:	b2 f7       	brpl	.-20     	; 0x2938 <__ashldi3+0x1a>
    294c:	0f 91       	pop	r16
    294e:	08 95       	ret

00002950 <__adddi3>:
    2950:	2a 0d       	add	r18, r10
    2952:	3b 1d       	adc	r19, r11
    2954:	4c 1d       	adc	r20, r12
    2956:	5d 1d       	adc	r21, r13
    2958:	6e 1d       	adc	r22, r14
    295a:	7f 1d       	adc	r23, r15
    295c:	80 1f       	adc	r24, r16
    295e:	91 1f       	adc	r25, r17
    2960:	08 95       	ret

00002962 <__cmpdi2>:
    2962:	2a 15       	cp	r18, r10
    2964:	3b 05       	cpc	r19, r11
    2966:	4c 05       	cpc	r20, r12
    2968:	5d 05       	cpc	r21, r13
    296a:	6e 05       	cpc	r22, r14
    296c:	7f 05       	cpc	r23, r15
    296e:	80 07       	cpc	r24, r16
    2970:	91 07       	cpc	r25, r17
    2972:	08 95       	ret

00002974 <__cmpdi2_s8>:
    2974:	00 24       	eor	r0, r0
    2976:	a7 fd       	sbrc	r26, 7
    2978:	00 94       	com	r0
    297a:	2a 17       	cp	r18, r26
    297c:	30 05       	cpc	r19, r0
    297e:	40 05       	cpc	r20, r0
    2980:	50 05       	cpc	r21, r0
    2982:	60 05       	cpc	r22, r0
    2984:	70 05       	cpc	r23, r0
    2986:	80 05       	cpc	r24, r0
    2988:	90 05       	cpc	r25, r0
    298a:	08 95       	ret

0000298c <atof>:
    298c:	66 27       	eor	r22, r22
    298e:	77 27       	eor	r23, r23
    2990:	0c 94 53 19 	jmp	0x32a6	; 0x32a6 <strtod>

00002994 <isupper>:
    2994:	85 fd       	sbrc	r24, 5
    2996:	0c 94 a1 1a 	jmp	0x3542	; 0x3542 <__ctype_isfalse>

0000299a <isalpha>:
    299a:	80 62       	ori	r24, 0x20	; 32

0000299c <islower>:
    299c:	91 11       	cpse	r25, r1
    299e:	0c 94 a1 1a 	jmp	0x3542	; 0x3542 <__ctype_isfalse>
    29a2:	81 56       	subi	r24, 0x61	; 97
    29a4:	8a 51       	subi	r24, 0x1A	; 26
    29a6:	d8 f7       	brcc	.-10     	; 0x299e <islower+0x2>
    29a8:	08 95       	ret

000029aa <isspace>:
    29aa:	91 11       	cpse	r25, r1
    29ac:	0c 94 a1 1a 	jmp	0x3542	; 0x3542 <__ctype_isfalse>
    29b0:	80 32       	cpi	r24, 0x20	; 32
    29b2:	19 f0       	breq	.+6      	; 0x29ba <isspace+0x10>
    29b4:	89 50       	subi	r24, 0x09	; 9
    29b6:	85 50       	subi	r24, 0x05	; 5
    29b8:	c8 f7       	brcc	.-14     	; 0x29ac <isspace+0x2>
    29ba:	08 95       	ret

000029bc <toupper>:
    29bc:	91 11       	cpse	r25, r1
    29be:	08 95       	ret
    29c0:	81 56       	subi	r24, 0x61	; 97
    29c2:	8a 51       	subi	r24, 0x1A	; 26
    29c4:	08 f4       	brcc	.+2      	; 0x29c8 <toupper+0xc>
    29c6:	80 52       	subi	r24, 0x20	; 32
    29c8:	85 58       	subi	r24, 0x85	; 133
    29ca:	08 95       	ret

000029cc <strchr>:
    29cc:	fc 01       	movw	r30, r24
    29ce:	81 91       	ld	r24, Z+
    29d0:	86 17       	cp	r24, r22
    29d2:	21 f0       	breq	.+8      	; 0x29dc <strchr+0x10>
    29d4:	88 23       	and	r24, r24
    29d6:	d9 f7       	brne	.-10     	; 0x29ce <strchr+0x2>
    29d8:	99 27       	eor	r25, r25
    29da:	08 95       	ret
    29dc:	31 97       	sbiw	r30, 0x01	; 1
    29de:	cf 01       	movw	r24, r30
    29e0:	08 95       	ret

000029e2 <strcmp>:
    29e2:	fb 01       	movw	r30, r22
    29e4:	dc 01       	movw	r26, r24
    29e6:	8d 91       	ld	r24, X+
    29e8:	01 90       	ld	r0, Z+
    29ea:	80 19       	sub	r24, r0
    29ec:	01 10       	cpse	r0, r1
    29ee:	d9 f3       	breq	.-10     	; 0x29e6 <strcmp+0x4>
    29f0:	99 0b       	sbc	r25, r25
    29f2:	08 95       	ret

000029f4 <strcpy>:
    29f4:	fb 01       	movw	r30, r22
    29f6:	dc 01       	movw	r26, r24
    29f8:	01 90       	ld	r0, Z+
    29fa:	0d 92       	st	X+, r0
    29fc:	00 20       	and	r0, r0
    29fe:	e1 f7       	brne	.-8      	; 0x29f8 <strcpy+0x4>
    2a00:	08 95       	ret

00002a02 <fdevopen>:
    2a02:	0f 93       	push	r16
    2a04:	1f 93       	push	r17
    2a06:	cf 93       	push	r28
    2a08:	df 93       	push	r29
    2a0a:	00 97       	sbiw	r24, 0x00	; 0
    2a0c:	31 f4       	brne	.+12     	; 0x2a1a <fdevopen+0x18>
    2a0e:	61 15       	cp	r22, r1
    2a10:	71 05       	cpc	r23, r1
    2a12:	19 f4       	brne	.+6      	; 0x2a1a <fdevopen+0x18>
    2a14:	80 e0       	ldi	r24, 0x00	; 0
    2a16:	90 e0       	ldi	r25, 0x00	; 0
    2a18:	3a c0       	rjmp	.+116    	; 0x2a8e <fdevopen+0x8c>
    2a1a:	8b 01       	movw	r16, r22
    2a1c:	ec 01       	movw	r28, r24
    2a1e:	6e e0       	ldi	r22, 0x0E	; 14
    2a20:	70 e0       	ldi	r23, 0x00	; 0
    2a22:	81 e0       	ldi	r24, 0x01	; 1
    2a24:	90 e0       	ldi	r25, 0x00	; 0
    2a26:	0e 94 16 18 	call	0x302c	; 0x302c <calloc>
    2a2a:	fc 01       	movw	r30, r24
    2a2c:	89 2b       	or	r24, r25
    2a2e:	91 f3       	breq	.-28     	; 0x2a14 <fdevopen+0x12>
    2a30:	80 e8       	ldi	r24, 0x80	; 128
    2a32:	83 83       	std	Z+3, r24	; 0x03
    2a34:	01 15       	cp	r16, r1
    2a36:	11 05       	cpc	r17, r1
    2a38:	71 f0       	breq	.+28     	; 0x2a56 <fdevopen+0x54>
    2a3a:	13 87       	std	Z+11, r17	; 0x0b
    2a3c:	02 87       	std	Z+10, r16	; 0x0a
    2a3e:	81 e8       	ldi	r24, 0x81	; 129
    2a40:	83 83       	std	Z+3, r24	; 0x03
    2a42:	80 91 d9 01 	lds	r24, 0x01D9	; 0x8001d9 <__iob>
    2a46:	90 91 da 01 	lds	r25, 0x01DA	; 0x8001da <__iob+0x1>
    2a4a:	89 2b       	or	r24, r25
    2a4c:	21 f4       	brne	.+8      	; 0x2a56 <fdevopen+0x54>
    2a4e:	f0 93 da 01 	sts	0x01DA, r31	; 0x8001da <__iob+0x1>
    2a52:	e0 93 d9 01 	sts	0x01D9, r30	; 0x8001d9 <__iob>
    2a56:	20 97       	sbiw	r28, 0x00	; 0
    2a58:	c9 f0       	breq	.+50     	; 0x2a8c <fdevopen+0x8a>
    2a5a:	d1 87       	std	Z+9, r29	; 0x09
    2a5c:	c0 87       	std	Z+8, r28	; 0x08
    2a5e:	83 81       	ldd	r24, Z+3	; 0x03
    2a60:	82 60       	ori	r24, 0x02	; 2
    2a62:	83 83       	std	Z+3, r24	; 0x03
    2a64:	80 91 db 01 	lds	r24, 0x01DB	; 0x8001db <__iob+0x2>
    2a68:	90 91 dc 01 	lds	r25, 0x01DC	; 0x8001dc <__iob+0x3>
    2a6c:	89 2b       	or	r24, r25
    2a6e:	71 f4       	brne	.+28     	; 0x2a8c <fdevopen+0x8a>
    2a70:	f0 93 dc 01 	sts	0x01DC, r31	; 0x8001dc <__iob+0x3>
    2a74:	e0 93 db 01 	sts	0x01DB, r30	; 0x8001db <__iob+0x2>
    2a78:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <__iob+0x4>
    2a7c:	90 91 de 01 	lds	r25, 0x01DE	; 0x8001de <__iob+0x5>
    2a80:	89 2b       	or	r24, r25
    2a82:	21 f4       	brne	.+8      	; 0x2a8c <fdevopen+0x8a>
    2a84:	f0 93 de 01 	sts	0x01DE, r31	; 0x8001de <__iob+0x5>
    2a88:	e0 93 dd 01 	sts	0x01DD, r30	; 0x8001dd <__iob+0x4>
    2a8c:	cf 01       	movw	r24, r30
    2a8e:	df 91       	pop	r29
    2a90:	cf 91       	pop	r28
    2a92:	1f 91       	pop	r17
    2a94:	0f 91       	pop	r16
    2a96:	08 95       	ret

00002a98 <putchar>:
    2a98:	60 91 db 01 	lds	r22, 0x01DB	; 0x8001db <__iob+0x2>
    2a9c:	70 91 dc 01 	lds	r23, 0x01DC	; 0x8001dc <__iob+0x3>
    2aa0:	0e 94 0c 1b 	call	0x3618	; 0x3618 <fputc>
    2aa4:	08 95       	ret

00002aa6 <scanf>:
    2aa6:	a0 e0       	ldi	r26, 0x00	; 0
    2aa8:	b0 e0       	ldi	r27, 0x00	; 0
    2aaa:	e9 e5       	ldi	r30, 0x59	; 89
    2aac:	f5 e1       	ldi	r31, 0x15	; 21
    2aae:	0c 94 68 14 	jmp	0x28d0	; 0x28d0 <__prologue_saves__+0x20>
    2ab2:	ae 01       	movw	r20, r28
    2ab4:	4b 5f       	subi	r20, 0xFB	; 251
    2ab6:	5f 4f       	sbci	r21, 0xFF	; 255
    2ab8:	fa 01       	movw	r30, r20
    2aba:	61 91       	ld	r22, Z+
    2abc:	71 91       	ld	r23, Z+
    2abe:	af 01       	movw	r20, r30
    2ac0:	80 91 d9 01 	lds	r24, 0x01D9	; 0x8001d9 <__iob>
    2ac4:	90 91 da 01 	lds	r25, 0x01DA	; 0x8001da <__iob+0x1>
    2ac8:	0e 94 05 17 	call	0x2e0a	; 0x2e0a <vfscanf>
    2acc:	e2 e0       	ldi	r30, 0x02	; 2
    2ace:	0c 94 84 14 	jmp	0x2908	; 0x2908 <__epilogue_restores__+0x20>

00002ad2 <putval>:
    2ad2:	20 fd       	sbrc	r18, 0
    2ad4:	09 c0       	rjmp	.+18     	; 0x2ae8 <putval+0x16>
    2ad6:	fc 01       	movw	r30, r24
    2ad8:	23 fd       	sbrc	r18, 3
    2ada:	05 c0       	rjmp	.+10     	; 0x2ae6 <putval+0x14>
    2adc:	22 ff       	sbrs	r18, 2
    2ade:	02 c0       	rjmp	.+4      	; 0x2ae4 <putval+0x12>
    2ae0:	73 83       	std	Z+3, r23	; 0x03
    2ae2:	62 83       	std	Z+2, r22	; 0x02
    2ae4:	51 83       	std	Z+1, r21	; 0x01
    2ae6:	40 83       	st	Z, r20
    2ae8:	08 95       	ret

00002aea <mulacc>:
    2aea:	44 fd       	sbrc	r20, 4
    2aec:	17 c0       	rjmp	.+46     	; 0x2b1c <mulacc+0x32>
    2aee:	46 fd       	sbrc	r20, 6
    2af0:	17 c0       	rjmp	.+46     	; 0x2b20 <mulacc+0x36>
    2af2:	ab 01       	movw	r20, r22
    2af4:	bc 01       	movw	r22, r24
    2af6:	da 01       	movw	r26, r20
    2af8:	fb 01       	movw	r30, r22
    2afa:	aa 0f       	add	r26, r26
    2afc:	bb 1f       	adc	r27, r27
    2afe:	ee 1f       	adc	r30, r30
    2b00:	ff 1f       	adc	r31, r31
    2b02:	10 94       	com	r1
    2b04:	d1 f7       	brne	.-12     	; 0x2afa <mulacc+0x10>
    2b06:	4a 0f       	add	r20, r26
    2b08:	5b 1f       	adc	r21, r27
    2b0a:	6e 1f       	adc	r22, r30
    2b0c:	7f 1f       	adc	r23, r31
    2b0e:	cb 01       	movw	r24, r22
    2b10:	ba 01       	movw	r22, r20
    2b12:	66 0f       	add	r22, r22
    2b14:	77 1f       	adc	r23, r23
    2b16:	88 1f       	adc	r24, r24
    2b18:	99 1f       	adc	r25, r25
    2b1a:	09 c0       	rjmp	.+18     	; 0x2b2e <mulacc+0x44>
    2b1c:	33 e0       	ldi	r19, 0x03	; 3
    2b1e:	01 c0       	rjmp	.+2      	; 0x2b22 <mulacc+0x38>
    2b20:	34 e0       	ldi	r19, 0x04	; 4
    2b22:	66 0f       	add	r22, r22
    2b24:	77 1f       	adc	r23, r23
    2b26:	88 1f       	adc	r24, r24
    2b28:	99 1f       	adc	r25, r25
    2b2a:	31 50       	subi	r19, 0x01	; 1
    2b2c:	d1 f7       	brne	.-12     	; 0x2b22 <mulacc+0x38>
    2b2e:	62 0f       	add	r22, r18
    2b30:	71 1d       	adc	r23, r1
    2b32:	81 1d       	adc	r24, r1
    2b34:	91 1d       	adc	r25, r1
    2b36:	08 95       	ret

00002b38 <skip_spaces>:
    2b38:	0f 93       	push	r16
    2b3a:	1f 93       	push	r17
    2b3c:	cf 93       	push	r28
    2b3e:	df 93       	push	r29
    2b40:	8c 01       	movw	r16, r24
    2b42:	c8 01       	movw	r24, r16
    2b44:	0e 94 ce 1a 	call	0x359c	; 0x359c <fgetc>
    2b48:	ec 01       	movw	r28, r24
    2b4a:	97 fd       	sbrc	r25, 7
    2b4c:	08 c0       	rjmp	.+16     	; 0x2b5e <skip_spaces+0x26>
    2b4e:	0e 94 d5 14 	call	0x29aa	; 0x29aa <isspace>
    2b52:	89 2b       	or	r24, r25
    2b54:	b1 f7       	brne	.-20     	; 0x2b42 <skip_spaces+0xa>
    2b56:	b8 01       	movw	r22, r16
    2b58:	ce 01       	movw	r24, r28
    2b5a:	0e 94 48 1b 	call	0x3690	; 0x3690 <ungetc>
    2b5e:	ce 01       	movw	r24, r28
    2b60:	df 91       	pop	r29
    2b62:	cf 91       	pop	r28
    2b64:	1f 91       	pop	r17
    2b66:	0f 91       	pop	r16
    2b68:	08 95       	ret

00002b6a <conv_int>:
    2b6a:	8f 92       	push	r8
    2b6c:	9f 92       	push	r9
    2b6e:	af 92       	push	r10
    2b70:	bf 92       	push	r11
    2b72:	ef 92       	push	r14
    2b74:	ff 92       	push	r15
    2b76:	0f 93       	push	r16
    2b78:	1f 93       	push	r17
    2b7a:	cf 93       	push	r28
    2b7c:	df 93       	push	r29
    2b7e:	8c 01       	movw	r16, r24
    2b80:	d6 2f       	mov	r29, r22
    2b82:	7a 01       	movw	r14, r20
    2b84:	b2 2e       	mov	r11, r18
    2b86:	0e 94 ce 1a 	call	0x359c	; 0x359c <fgetc>
    2b8a:	9c 01       	movw	r18, r24
    2b8c:	33 27       	eor	r19, r19
    2b8e:	2b 32       	cpi	r18, 0x2B	; 43
    2b90:	31 05       	cpc	r19, r1
    2b92:	31 f0       	breq	.+12     	; 0x2ba0 <conv_int+0x36>
    2b94:	2d 32       	cpi	r18, 0x2D	; 45
    2b96:	31 05       	cpc	r19, r1
    2b98:	61 f4       	brne	.+24     	; 0x2bb2 <conv_int+0x48>
    2b9a:	8b 2d       	mov	r24, r11
    2b9c:	80 68       	ori	r24, 0x80	; 128
    2b9e:	b8 2e       	mov	r11, r24
    2ba0:	d1 50       	subi	r29, 0x01	; 1
    2ba2:	11 f4       	brne	.+4      	; 0x2ba8 <conv_int+0x3e>
    2ba4:	80 e0       	ldi	r24, 0x00	; 0
    2ba6:	68 c0       	rjmp	.+208    	; 0x2c78 <conv_int+0x10e>
    2ba8:	c8 01       	movw	r24, r16
    2baa:	0e 94 ce 1a 	call	0x359c	; 0x359c <fgetc>
    2bae:	97 fd       	sbrc	r25, 7
    2bb0:	f9 cf       	rjmp	.-14     	; 0x2ba4 <conv_int+0x3a>
    2bb2:	cb 2d       	mov	r28, r11
    2bb4:	cd 7f       	andi	r28, 0xFD	; 253
    2bb6:	2b 2d       	mov	r18, r11
    2bb8:	20 73       	andi	r18, 0x30	; 48
    2bba:	09 f5       	brne	.+66     	; 0x2bfe <conv_int+0x94>
    2bbc:	80 33       	cpi	r24, 0x30	; 48
    2bbe:	f9 f4       	brne	.+62     	; 0x2bfe <conv_int+0x94>
    2bc0:	aa 24       	eor	r10, r10
    2bc2:	aa 94       	dec	r10
    2bc4:	ad 0e       	add	r10, r29
    2bc6:	09 f4       	brne	.+2      	; 0x2bca <conv_int+0x60>
    2bc8:	43 c0       	rjmp	.+134    	; 0x2c50 <conv_int+0xe6>
    2bca:	c8 01       	movw	r24, r16
    2bcc:	0e 94 ce 1a 	call	0x359c	; 0x359c <fgetc>
    2bd0:	97 fd       	sbrc	r25, 7
    2bd2:	3e c0       	rjmp	.+124    	; 0x2c50 <conv_int+0xe6>
    2bd4:	9c 01       	movw	r18, r24
    2bd6:	2f 7d       	andi	r18, 0xDF	; 223
    2bd8:	33 27       	eor	r19, r19
    2bda:	28 35       	cpi	r18, 0x58	; 88
    2bdc:	31 05       	cpc	r19, r1
    2bde:	49 f4       	brne	.+18     	; 0x2bf2 <conv_int+0x88>
    2be0:	c2 64       	ori	r28, 0x42	; 66
    2be2:	d2 50       	subi	r29, 0x02	; 2
    2be4:	a9 f1       	breq	.+106    	; 0x2c50 <conv_int+0xe6>
    2be6:	c8 01       	movw	r24, r16
    2be8:	0e 94 ce 1a 	call	0x359c	; 0x359c <fgetc>
    2bec:	97 ff       	sbrs	r25, 7
    2bee:	07 c0       	rjmp	.+14     	; 0x2bfe <conv_int+0x94>
    2bf0:	2f c0       	rjmp	.+94     	; 0x2c50 <conv_int+0xe6>
    2bf2:	b6 fe       	sbrs	r11, 6
    2bf4:	02 c0       	rjmp	.+4      	; 0x2bfa <conv_int+0x90>
    2bf6:	c2 60       	ori	r28, 0x02	; 2
    2bf8:	01 c0       	rjmp	.+2      	; 0x2bfc <conv_int+0x92>
    2bfa:	c2 61       	ori	r28, 0x12	; 18
    2bfc:	da 2d       	mov	r29, r10
    2bfe:	81 2c       	mov	r8, r1
    2c00:	91 2c       	mov	r9, r1
    2c02:	54 01       	movw	r10, r8
    2c04:	20 ed       	ldi	r18, 0xD0	; 208
    2c06:	28 0f       	add	r18, r24
    2c08:	28 30       	cpi	r18, 0x08	; 8
    2c0a:	80 f0       	brcs	.+32     	; 0x2c2c <conv_int+0xc2>
    2c0c:	c4 ff       	sbrs	r28, 4
    2c0e:	04 c0       	rjmp	.+8      	; 0x2c18 <conv_int+0xae>
    2c10:	b8 01       	movw	r22, r16
    2c12:	0e 94 48 1b 	call	0x3690	; 0x3690 <ungetc>
    2c16:	19 c0       	rjmp	.+50     	; 0x2c4a <conv_int+0xe0>
    2c18:	2a 30       	cpi	r18, 0x0A	; 10
    2c1a:	40 f0       	brcs	.+16     	; 0x2c2c <conv_int+0xc2>
    2c1c:	c6 ff       	sbrs	r28, 6
    2c1e:	f8 cf       	rjmp	.-16     	; 0x2c10 <conv_int+0xa6>
    2c20:	2f 7d       	andi	r18, 0xDF	; 223
    2c22:	3f ee       	ldi	r19, 0xEF	; 239
    2c24:	32 0f       	add	r19, r18
    2c26:	36 30       	cpi	r19, 0x06	; 6
    2c28:	98 f7       	brcc	.-26     	; 0x2c10 <conv_int+0xa6>
    2c2a:	27 50       	subi	r18, 0x07	; 7
    2c2c:	4c 2f       	mov	r20, r28
    2c2e:	c5 01       	movw	r24, r10
    2c30:	b4 01       	movw	r22, r8
    2c32:	0e 94 75 15 	call	0x2aea	; 0x2aea <mulacc>
    2c36:	4b 01       	movw	r8, r22
    2c38:	5c 01       	movw	r10, r24
    2c3a:	c2 60       	ori	r28, 0x02	; 2
    2c3c:	d1 50       	subi	r29, 0x01	; 1
    2c3e:	59 f0       	breq	.+22     	; 0x2c56 <conv_int+0xec>
    2c40:	c8 01       	movw	r24, r16
    2c42:	0e 94 ce 1a 	call	0x359c	; 0x359c <fgetc>
    2c46:	97 ff       	sbrs	r25, 7
    2c48:	dd cf       	rjmp	.-70     	; 0x2c04 <conv_int+0x9a>
    2c4a:	c1 fd       	sbrc	r28, 1
    2c4c:	04 c0       	rjmp	.+8      	; 0x2c56 <conv_int+0xec>
    2c4e:	aa cf       	rjmp	.-172    	; 0x2ba4 <conv_int+0x3a>
    2c50:	81 2c       	mov	r8, r1
    2c52:	91 2c       	mov	r9, r1
    2c54:	54 01       	movw	r10, r8
    2c56:	c7 ff       	sbrs	r28, 7
    2c58:	08 c0       	rjmp	.+16     	; 0x2c6a <conv_int+0x100>
    2c5a:	b0 94       	com	r11
    2c5c:	a0 94       	com	r10
    2c5e:	90 94       	com	r9
    2c60:	80 94       	com	r8
    2c62:	81 1c       	adc	r8, r1
    2c64:	91 1c       	adc	r9, r1
    2c66:	a1 1c       	adc	r10, r1
    2c68:	b1 1c       	adc	r11, r1
    2c6a:	2c 2f       	mov	r18, r28
    2c6c:	b5 01       	movw	r22, r10
    2c6e:	a4 01       	movw	r20, r8
    2c70:	c7 01       	movw	r24, r14
    2c72:	0e 94 69 15 	call	0x2ad2	; 0x2ad2 <putval>
    2c76:	81 e0       	ldi	r24, 0x01	; 1
    2c78:	df 91       	pop	r29
    2c7a:	cf 91       	pop	r28
    2c7c:	1f 91       	pop	r17
    2c7e:	0f 91       	pop	r16
    2c80:	ff 90       	pop	r15
    2c82:	ef 90       	pop	r14
    2c84:	bf 90       	pop	r11
    2c86:	af 90       	pop	r10
    2c88:	9f 90       	pop	r9
    2c8a:	8f 90       	pop	r8
    2c8c:	08 95       	ret

00002c8e <conv_brk>:
    2c8e:	a0 e2       	ldi	r26, 0x20	; 32
    2c90:	b0 e0       	ldi	r27, 0x00	; 0
    2c92:	ed e4       	ldi	r30, 0x4D	; 77
    2c94:	f6 e1       	ldi	r31, 0x16	; 22
    2c96:	0c 94 5b 14 	jmp	0x28b6	; 0x28b6 <__prologue_saves__+0x6>
    2c9a:	5c 01       	movw	r10, r24
    2c9c:	96 2e       	mov	r9, r22
    2c9e:	7a 01       	movw	r14, r20
    2ca0:	f9 01       	movw	r30, r18
    2ca2:	8e 01       	movw	r16, r28
    2ca4:	0f 5f       	subi	r16, 0xFF	; 255
    2ca6:	1f 4f       	sbci	r17, 0xFF	; 255
    2ca8:	68 01       	movw	r12, r16
    2caa:	80 e2       	ldi	r24, 0x20	; 32
    2cac:	d8 01       	movw	r26, r16
    2cae:	1d 92       	st	X+, r1
    2cb0:	8a 95       	dec	r24
    2cb2:	e9 f7       	brne	.-6      	; 0x2cae <conv_brk+0x20>
    2cb4:	d5 01       	movw	r26, r10
    2cb6:	13 96       	adiw	r26, 0x03	; 3
    2cb8:	8c 90       	ld	r8, X
    2cba:	80 e0       	ldi	r24, 0x00	; 0
    2cbc:	90 e0       	ldi	r25, 0x00	; 0
    2cbe:	61 2c       	mov	r6, r1
    2cc0:	71 2c       	mov	r7, r1
    2cc2:	30 e0       	ldi	r19, 0x00	; 0
    2cc4:	61 e0       	ldi	r22, 0x01	; 1
    2cc6:	70 e0       	ldi	r23, 0x00	; 0
    2cc8:	83 fc       	sbrc	r8, 3
    2cca:	25 91       	lpm	r18, Z+
    2ccc:	83 fe       	sbrs	r8, 3
    2cce:	21 91       	ld	r18, Z+
    2cd0:	8f 01       	movw	r16, r30
    2cd2:	52 2e       	mov	r5, r18
    2cd4:	21 11       	cpse	r18, r1
    2cd6:	03 c0       	rjmp	.+6      	; 0x2cde <conv_brk+0x50>
    2cd8:	80 e0       	ldi	r24, 0x00	; 0
    2cda:	90 e0       	ldi	r25, 0x00	; 0
    2cdc:	92 c0       	rjmp	.+292    	; 0x2e02 <conv_brk+0x174>
    2cde:	2e 35       	cpi	r18, 0x5E	; 94
    2ce0:	11 f4       	brne	.+4      	; 0x2ce6 <conv_brk+0x58>
    2ce2:	00 97       	sbiw	r24, 0x00	; 0
    2ce4:	51 f1       	breq	.+84     	; 0x2d3a <conv_brk+0xac>
    2ce6:	43 2f       	mov	r20, r19
    2ce8:	50 e0       	ldi	r21, 0x00	; 0
    2cea:	48 17       	cp	r20, r24
    2cec:	59 07       	cpc	r21, r25
    2cee:	3c f4       	brge	.+14     	; 0x2cfe <conv_brk+0x70>
    2cf0:	2d 35       	cpi	r18, 0x5D	; 93
    2cf2:	59 f1       	breq	.+86     	; 0x2d4a <conv_brk+0xbc>
    2cf4:	2d 32       	cpi	r18, 0x2D	; 45
    2cf6:	19 f4       	brne	.+6      	; 0x2cfe <conv_brk+0x70>
    2cf8:	77 20       	and	r7, r7
    2cfa:	09 f1       	breq	.+66     	; 0x2d3e <conv_brk+0xb0>
    2cfc:	03 c0       	rjmp	.+6      	; 0x2d04 <conv_brk+0x76>
    2cfe:	77 20       	and	r7, r7
    2d00:	09 f4       	brne	.+2      	; 0x2d04 <conv_brk+0x76>
    2d02:	6a c0       	rjmp	.+212    	; 0x2dd8 <conv_brk+0x14a>
    2d04:	45 2d       	mov	r20, r5
    2d06:	46 95       	lsr	r20
    2d08:	46 95       	lsr	r20
    2d0a:	46 95       	lsr	r20
    2d0c:	d6 01       	movw	r26, r12
    2d0e:	a4 0f       	add	r26, r20
    2d10:	b1 1d       	adc	r27, r1
    2d12:	45 2d       	mov	r20, r5
    2d14:	47 70       	andi	r20, 0x07	; 7
    2d16:	8b 01       	movw	r16, r22
    2d18:	02 c0       	rjmp	.+4      	; 0x2d1e <conv_brk+0x90>
    2d1a:	00 0f       	add	r16, r16
    2d1c:	11 1f       	adc	r17, r17
    2d1e:	4a 95       	dec	r20
    2d20:	e2 f7       	brpl	.-8      	; 0x2d1a <conv_brk+0x8c>
    2d22:	a8 01       	movw	r20, r16
    2d24:	5c 91       	ld	r21, X
    2d26:	45 2b       	or	r20, r21
    2d28:	4c 93       	st	X, r20
    2d2a:	65 14       	cp	r6, r5
    2d2c:	59 f0       	breq	.+22     	; 0x2d44 <conv_brk+0xb6>
    2d2e:	56 14       	cp	r5, r6
    2d30:	10 f4       	brcc	.+4      	; 0x2d36 <conv_brk+0xa8>
    2d32:	53 94       	inc	r5
    2d34:	e7 cf       	rjmp	.-50     	; 0x2d04 <conv_brk+0x76>
    2d36:	5a 94       	dec	r5
    2d38:	e5 cf       	rjmp	.-54     	; 0x2d04 <conv_brk+0x76>
    2d3a:	31 e0       	ldi	r19, 0x01	; 1
    2d3c:	04 c0       	rjmp	.+8      	; 0x2d46 <conv_brk+0xb8>
    2d3e:	77 24       	eor	r7, r7
    2d40:	73 94       	inc	r7
    2d42:	01 c0       	rjmp	.+2      	; 0x2d46 <conv_brk+0xb8>
    2d44:	71 2c       	mov	r7, r1
    2d46:	01 96       	adiw	r24, 0x01	; 1
    2d48:	bf cf       	rjmp	.-130    	; 0x2cc8 <conv_brk+0x3a>
    2d4a:	77 20       	and	r7, r7
    2d4c:	19 f0       	breq	.+6      	; 0x2d54 <conv_brk+0xc6>
    2d4e:	8e 81       	ldd	r24, Y+6	; 0x06
    2d50:	80 62       	ori	r24, 0x20	; 32
    2d52:	8e 83       	std	Y+6, r24	; 0x06
    2d54:	31 11       	cpse	r19, r1
    2d56:	03 c0       	rjmp	.+6      	; 0x2d5e <conv_brk+0xd0>
    2d58:	88 24       	eor	r8, r8
    2d5a:	83 94       	inc	r8
    2d5c:	17 c0       	rjmp	.+46     	; 0x2d8c <conv_brk+0xfe>
    2d5e:	f6 01       	movw	r30, r12
    2d60:	9e 01       	movw	r18, r28
    2d62:	2f 5d       	subi	r18, 0xDF	; 223
    2d64:	3f 4f       	sbci	r19, 0xFF	; 255
    2d66:	80 81       	ld	r24, Z
    2d68:	80 95       	com	r24
    2d6a:	81 93       	st	Z+, r24
    2d6c:	2e 17       	cp	r18, r30
    2d6e:	3f 07       	cpc	r19, r31
    2d70:	d1 f7       	brne	.-12     	; 0x2d66 <conv_brk+0xd8>
    2d72:	f2 cf       	rjmp	.-28     	; 0x2d58 <conv_brk+0xca>
    2d74:	e1 14       	cp	r14, r1
    2d76:	f1 04       	cpc	r15, r1
    2d78:	29 f0       	breq	.+10     	; 0x2d84 <conv_brk+0xf6>
    2d7a:	d7 01       	movw	r26, r14
    2d7c:	8c 93       	st	X, r24
    2d7e:	f7 01       	movw	r30, r14
    2d80:	31 96       	adiw	r30, 0x01	; 1
    2d82:	7f 01       	movw	r14, r30
    2d84:	9a 94       	dec	r9
    2d86:	81 2c       	mov	r8, r1
    2d88:	99 20       	and	r9, r9
    2d8a:	f9 f0       	breq	.+62     	; 0x2dca <conv_brk+0x13c>
    2d8c:	c5 01       	movw	r24, r10
    2d8e:	0e 94 ce 1a 	call	0x359c	; 0x359c <fgetc>
    2d92:	97 fd       	sbrc	r25, 7
    2d94:	18 c0       	rjmp	.+48     	; 0x2dc6 <conv_brk+0x138>
    2d96:	fc 01       	movw	r30, r24
    2d98:	ff 27       	eor	r31, r31
    2d9a:	23 e0       	ldi	r18, 0x03	; 3
    2d9c:	f5 95       	asr	r31
    2d9e:	e7 95       	ror	r30
    2da0:	2a 95       	dec	r18
    2da2:	e1 f7       	brne	.-8      	; 0x2d9c <conv_brk+0x10e>
    2da4:	ec 0d       	add	r30, r12
    2da6:	fd 1d       	adc	r31, r13
    2da8:	20 81       	ld	r18, Z
    2daa:	30 e0       	ldi	r19, 0x00	; 0
    2dac:	ac 01       	movw	r20, r24
    2dae:	47 70       	andi	r20, 0x07	; 7
    2db0:	55 27       	eor	r21, r21
    2db2:	02 c0       	rjmp	.+4      	; 0x2db8 <conv_brk+0x12a>
    2db4:	35 95       	asr	r19
    2db6:	27 95       	ror	r18
    2db8:	4a 95       	dec	r20
    2dba:	e2 f7       	brpl	.-8      	; 0x2db4 <conv_brk+0x126>
    2dbc:	20 fd       	sbrc	r18, 0
    2dbe:	da cf       	rjmp	.-76     	; 0x2d74 <conv_brk+0xe6>
    2dc0:	b5 01       	movw	r22, r10
    2dc2:	0e 94 48 1b 	call	0x3690	; 0x3690 <ungetc>
    2dc6:	81 10       	cpse	r8, r1
    2dc8:	87 cf       	rjmp	.-242    	; 0x2cd8 <conv_brk+0x4a>
    2dca:	e1 14       	cp	r14, r1
    2dcc:	f1 04       	cpc	r15, r1
    2dce:	11 f0       	breq	.+4      	; 0x2dd4 <conv_brk+0x146>
    2dd0:	d7 01       	movw	r26, r14
    2dd2:	1c 92       	st	X, r1
    2dd4:	c8 01       	movw	r24, r16
    2dd6:	15 c0       	rjmp	.+42     	; 0x2e02 <conv_brk+0x174>
    2dd8:	42 2f       	mov	r20, r18
    2dda:	46 95       	lsr	r20
    2ddc:	46 95       	lsr	r20
    2dde:	46 95       	lsr	r20
    2de0:	d6 01       	movw	r26, r12
    2de2:	a4 0f       	add	r26, r20
    2de4:	b1 1d       	adc	r27, r1
    2de6:	42 2f       	mov	r20, r18
    2de8:	47 70       	andi	r20, 0x07	; 7
    2dea:	8b 01       	movw	r16, r22
    2dec:	02 c0       	rjmp	.+4      	; 0x2df2 <conv_brk+0x164>
    2dee:	00 0f       	add	r16, r16
    2df0:	11 1f       	adc	r17, r17
    2df2:	4a 95       	dec	r20
    2df4:	e2 f7       	brpl	.-8      	; 0x2dee <conv_brk+0x160>
    2df6:	a8 01       	movw	r20, r16
    2df8:	5c 91       	ld	r21, X
    2dfa:	45 2b       	or	r20, r21
    2dfc:	4c 93       	st	X, r20
    2dfe:	62 2e       	mov	r6, r18
    2e00:	a2 cf       	rjmp	.-188    	; 0x2d46 <conv_brk+0xb8>
    2e02:	a0 96       	adiw	r28, 0x20	; 32
    2e04:	ef e0       	ldi	r30, 0x0F	; 15
    2e06:	0c 94 77 14 	jmp	0x28ee	; 0x28ee <__epilogue_restores__+0x6>

00002e0a <vfscanf>:
    2e0a:	a0 e0       	ldi	r26, 0x00	; 0
    2e0c:	b0 e0       	ldi	r27, 0x00	; 0
    2e0e:	eb e0       	ldi	r30, 0x0B	; 11
    2e10:	f7 e1       	ldi	r31, 0x17	; 23
    2e12:	0c 94 5b 14 	jmp	0x28b6	; 0x28b6 <__prologue_saves__+0x6>
    2e16:	6c 01       	movw	r12, r24
    2e18:	eb 01       	movw	r28, r22
    2e1a:	5a 01       	movw	r10, r20
    2e1c:	fc 01       	movw	r30, r24
    2e1e:	17 82       	std	Z+7, r1	; 0x07
    2e20:	16 82       	std	Z+6, r1	; 0x06
    2e22:	51 2c       	mov	r5, r1
    2e24:	f6 01       	movw	r30, r12
    2e26:	e3 80       	ldd	r14, Z+3	; 0x03
    2e28:	fe 01       	movw	r30, r28
    2e2a:	e3 fc       	sbrc	r14, 3
    2e2c:	85 91       	lpm	r24, Z+
    2e2e:	e3 fe       	sbrs	r14, 3
    2e30:	81 91       	ld	r24, Z+
    2e32:	18 2f       	mov	r17, r24
    2e34:	ef 01       	movw	r28, r30
    2e36:	88 23       	and	r24, r24
    2e38:	09 f4       	brne	.+2      	; 0x2e3c <vfscanf+0x32>
    2e3a:	ee c0       	rjmp	.+476    	; 0x3018 <vfscanf+0x20e>
    2e3c:	90 e0       	ldi	r25, 0x00	; 0
    2e3e:	0e 94 d5 14 	call	0x29aa	; 0x29aa <isspace>
    2e42:	89 2b       	or	r24, r25
    2e44:	21 f0       	breq	.+8      	; 0x2e4e <vfscanf+0x44>
    2e46:	c6 01       	movw	r24, r12
    2e48:	0e 94 9c 15 	call	0x2b38	; 0x2b38 <skip_spaces>
    2e4c:	eb cf       	rjmp	.-42     	; 0x2e24 <vfscanf+0x1a>
    2e4e:	15 32       	cpi	r17, 0x25	; 37
    2e50:	41 f4       	brne	.+16     	; 0x2e62 <vfscanf+0x58>
    2e52:	fe 01       	movw	r30, r28
    2e54:	e3 fc       	sbrc	r14, 3
    2e56:	15 91       	lpm	r17, Z+
    2e58:	e3 fe       	sbrs	r14, 3
    2e5a:	11 91       	ld	r17, Z+
    2e5c:	ef 01       	movw	r28, r30
    2e5e:	15 32       	cpi	r17, 0x25	; 37
    2e60:	81 f4       	brne	.+32     	; 0x2e82 <vfscanf+0x78>
    2e62:	c6 01       	movw	r24, r12
    2e64:	0e 94 ce 1a 	call	0x359c	; 0x359c <fgetc>
    2e68:	97 fd       	sbrc	r25, 7
    2e6a:	d4 c0       	rjmp	.+424    	; 0x3014 <vfscanf+0x20a>
    2e6c:	41 2f       	mov	r20, r17
    2e6e:	50 e0       	ldi	r21, 0x00	; 0
    2e70:	9c 01       	movw	r18, r24
    2e72:	33 27       	eor	r19, r19
    2e74:	24 17       	cp	r18, r20
    2e76:	35 07       	cpc	r19, r21
    2e78:	a9 f2       	breq	.-86     	; 0x2e24 <vfscanf+0x1a>
    2e7a:	b6 01       	movw	r22, r12
    2e7c:	0e 94 48 1b 	call	0x3690	; 0x3690 <ungetc>
    2e80:	cb c0       	rjmp	.+406    	; 0x3018 <vfscanf+0x20e>
    2e82:	1a 32       	cpi	r17, 0x2A	; 42
    2e84:	39 f4       	brne	.+14     	; 0x2e94 <vfscanf+0x8a>
    2e86:	e3 fc       	sbrc	r14, 3
    2e88:	15 91       	lpm	r17, Z+
    2e8a:	e3 fe       	sbrs	r14, 3
    2e8c:	11 91       	ld	r17, Z+
    2e8e:	ef 01       	movw	r28, r30
    2e90:	01 e0       	ldi	r16, 0x01	; 1
    2e92:	01 c0       	rjmp	.+2      	; 0x2e96 <vfscanf+0x8c>
    2e94:	00 e0       	ldi	r16, 0x00	; 0
    2e96:	f1 2c       	mov	r15, r1
    2e98:	20 ed       	ldi	r18, 0xD0	; 208
    2e9a:	21 0f       	add	r18, r17
    2e9c:	2a 30       	cpi	r18, 0x0A	; 10
    2e9e:	80 f4       	brcc	.+32     	; 0x2ec0 <vfscanf+0xb6>
    2ea0:	02 60       	ori	r16, 0x02	; 2
    2ea2:	6f 2d       	mov	r22, r15
    2ea4:	70 e0       	ldi	r23, 0x00	; 0
    2ea6:	80 e0       	ldi	r24, 0x00	; 0
    2ea8:	90 e0       	ldi	r25, 0x00	; 0
    2eaa:	40 e2       	ldi	r20, 0x20	; 32
    2eac:	0e 94 75 15 	call	0x2aea	; 0x2aea <mulacc>
    2eb0:	f6 2e       	mov	r15, r22
    2eb2:	fe 01       	movw	r30, r28
    2eb4:	e3 fc       	sbrc	r14, 3
    2eb6:	15 91       	lpm	r17, Z+
    2eb8:	e3 fe       	sbrs	r14, 3
    2eba:	11 91       	ld	r17, Z+
    2ebc:	ef 01       	movw	r28, r30
    2ebe:	ec cf       	rjmp	.-40     	; 0x2e98 <vfscanf+0x8e>
    2ec0:	01 ff       	sbrs	r16, 1
    2ec2:	03 c0       	rjmp	.+6      	; 0x2eca <vfscanf+0xc0>
    2ec4:	f1 10       	cpse	r15, r1
    2ec6:	03 c0       	rjmp	.+6      	; 0x2ece <vfscanf+0xc4>
    2ec8:	a7 c0       	rjmp	.+334    	; 0x3018 <vfscanf+0x20e>
    2eca:	ff 24       	eor	r15, r15
    2ecc:	fa 94       	dec	r15
    2ece:	18 36       	cpi	r17, 0x68	; 104
    2ed0:	19 f0       	breq	.+6      	; 0x2ed8 <vfscanf+0xce>
    2ed2:	1c 36       	cpi	r17, 0x6C	; 108
    2ed4:	51 f0       	breq	.+20     	; 0x2eea <vfscanf+0xe0>
    2ed6:	10 c0       	rjmp	.+32     	; 0x2ef8 <vfscanf+0xee>
    2ed8:	fe 01       	movw	r30, r28
    2eda:	e3 fc       	sbrc	r14, 3
    2edc:	15 91       	lpm	r17, Z+
    2ede:	e3 fe       	sbrs	r14, 3
    2ee0:	11 91       	ld	r17, Z+
    2ee2:	ef 01       	movw	r28, r30
    2ee4:	18 36       	cpi	r17, 0x68	; 104
    2ee6:	41 f4       	brne	.+16     	; 0x2ef8 <vfscanf+0xee>
    2ee8:	08 60       	ori	r16, 0x08	; 8
    2eea:	04 60       	ori	r16, 0x04	; 4
    2eec:	fe 01       	movw	r30, r28
    2eee:	e3 fc       	sbrc	r14, 3
    2ef0:	15 91       	lpm	r17, Z+
    2ef2:	e3 fe       	sbrs	r14, 3
    2ef4:	11 91       	ld	r17, Z+
    2ef6:	ef 01       	movw	r28, r30
    2ef8:	11 23       	and	r17, r17
    2efa:	09 f4       	brne	.+2      	; 0x2efe <vfscanf+0xf4>
    2efc:	8d c0       	rjmp	.+282    	; 0x3018 <vfscanf+0x20e>
    2efe:	61 2f       	mov	r22, r17
    2f00:	70 e0       	ldi	r23, 0x00	; 0
    2f02:	8e e9       	ldi	r24, 0x9E	; 158
    2f04:	91 e0       	ldi	r25, 0x01	; 1
    2f06:	0e 94 a4 1a 	call	0x3548	; 0x3548 <strchr_P>
    2f0a:	89 2b       	or	r24, r25
    2f0c:	09 f4       	brne	.+2      	; 0x2f10 <vfscanf+0x106>
    2f0e:	84 c0       	rjmp	.+264    	; 0x3018 <vfscanf+0x20e>
    2f10:	00 fd       	sbrc	r16, 0
    2f12:	07 c0       	rjmp	.+14     	; 0x2f22 <vfscanf+0x118>
    2f14:	f5 01       	movw	r30, r10
    2f16:	80 80       	ld	r8, Z
    2f18:	91 80       	ldd	r9, Z+1	; 0x01
    2f1a:	c5 01       	movw	r24, r10
    2f1c:	02 96       	adiw	r24, 0x02	; 2
    2f1e:	5c 01       	movw	r10, r24
    2f20:	02 c0       	rjmp	.+4      	; 0x2f26 <vfscanf+0x11c>
    2f22:	81 2c       	mov	r8, r1
    2f24:	91 2c       	mov	r9, r1
    2f26:	1e 36       	cpi	r17, 0x6E	; 110
    2f28:	51 f4       	brne	.+20     	; 0x2f3e <vfscanf+0x134>
    2f2a:	f6 01       	movw	r30, r12
    2f2c:	46 81       	ldd	r20, Z+6	; 0x06
    2f2e:	57 81       	ldd	r21, Z+7	; 0x07
    2f30:	60 e0       	ldi	r22, 0x00	; 0
    2f32:	70 e0       	ldi	r23, 0x00	; 0
    2f34:	20 2f       	mov	r18, r16
    2f36:	c4 01       	movw	r24, r8
    2f38:	0e 94 69 15 	call	0x2ad2	; 0x2ad2 <putval>
    2f3c:	73 cf       	rjmp	.-282    	; 0x2e24 <vfscanf+0x1a>
    2f3e:	13 36       	cpi	r17, 0x63	; 99
    2f40:	a9 f4       	brne	.+42     	; 0x2f6c <vfscanf+0x162>
    2f42:	01 fd       	sbrc	r16, 1
    2f44:	02 c0       	rjmp	.+4      	; 0x2f4a <vfscanf+0x140>
    2f46:	ff 24       	eor	r15, r15
    2f48:	f3 94       	inc	r15
    2f4a:	c6 01       	movw	r24, r12
    2f4c:	0e 94 ce 1a 	call	0x359c	; 0x359c <fgetc>
    2f50:	97 fd       	sbrc	r25, 7
    2f52:	60 c0       	rjmp	.+192    	; 0x3014 <vfscanf+0x20a>
    2f54:	81 14       	cp	r8, r1
    2f56:	91 04       	cpc	r9, r1
    2f58:	29 f0       	breq	.+10     	; 0x2f64 <vfscanf+0x15a>
    2f5a:	f4 01       	movw	r30, r8
    2f5c:	80 83       	st	Z, r24
    2f5e:	c4 01       	movw	r24, r8
    2f60:	01 96       	adiw	r24, 0x01	; 1
    2f62:	4c 01       	movw	r8, r24
    2f64:	fa 94       	dec	r15
    2f66:	f1 10       	cpse	r15, r1
    2f68:	f0 cf       	rjmp	.-32     	; 0x2f4a <vfscanf+0x140>
    2f6a:	50 c0       	rjmp	.+160    	; 0x300c <vfscanf+0x202>
    2f6c:	1b 35       	cpi	r17, 0x5B	; 91
    2f6e:	59 f4       	brne	.+22     	; 0x2f86 <vfscanf+0x17c>
    2f70:	9e 01       	movw	r18, r28
    2f72:	a4 01       	movw	r20, r8
    2f74:	6f 2d       	mov	r22, r15
    2f76:	c6 01       	movw	r24, r12
    2f78:	0e 94 47 16 	call	0x2c8e	; 0x2c8e <conv_brk>
    2f7c:	ec 01       	movw	r28, r24
    2f7e:	89 2b       	or	r24, r25
    2f80:	09 f0       	breq	.+2      	; 0x2f84 <vfscanf+0x17a>
    2f82:	44 c0       	rjmp	.+136    	; 0x300c <vfscanf+0x202>
    2f84:	3e c0       	rjmp	.+124    	; 0x3002 <vfscanf+0x1f8>
    2f86:	c6 01       	movw	r24, r12
    2f88:	0e 94 9c 15 	call	0x2b38	; 0x2b38 <skip_spaces>
    2f8c:	97 fd       	sbrc	r25, 7
    2f8e:	42 c0       	rjmp	.+132    	; 0x3014 <vfscanf+0x20a>
    2f90:	1f 36       	cpi	r17, 0x6F	; 111
    2f92:	61 f1       	breq	.+88     	; 0x2fec <vfscanf+0x1e2>
    2f94:	28 f4       	brcc	.+10     	; 0x2fa0 <vfscanf+0x196>
    2f96:	14 36       	cpi	r17, 0x64	; 100
    2f98:	39 f1       	breq	.+78     	; 0x2fe8 <vfscanf+0x1de>
    2f9a:	19 36       	cpi	r17, 0x69	; 105
    2f9c:	51 f1       	breq	.+84     	; 0x2ff2 <vfscanf+0x1e8>
    2f9e:	28 c0       	rjmp	.+80     	; 0x2ff0 <vfscanf+0x1e6>
    2fa0:	13 37       	cpi	r17, 0x73	; 115
    2fa2:	71 f0       	breq	.+28     	; 0x2fc0 <vfscanf+0x1b6>
    2fa4:	15 37       	cpi	r17, 0x75	; 117
    2fa6:	01 f1       	breq	.+64     	; 0x2fe8 <vfscanf+0x1de>
    2fa8:	23 c0       	rjmp	.+70     	; 0x2ff0 <vfscanf+0x1e6>
    2faa:	81 14       	cp	r8, r1
    2fac:	91 04       	cpc	r9, r1
    2fae:	29 f0       	breq	.+10     	; 0x2fba <vfscanf+0x1b0>
    2fb0:	f4 01       	movw	r30, r8
    2fb2:	60 82       	st	Z, r6
    2fb4:	c4 01       	movw	r24, r8
    2fb6:	01 96       	adiw	r24, 0x01	; 1
    2fb8:	4c 01       	movw	r8, r24
    2fba:	fa 94       	dec	r15
    2fbc:	ff 20       	and	r15, r15
    2fbe:	71 f0       	breq	.+28     	; 0x2fdc <vfscanf+0x1d2>
    2fc0:	c6 01       	movw	r24, r12
    2fc2:	0e 94 ce 1a 	call	0x359c	; 0x359c <fgetc>
    2fc6:	3c 01       	movw	r6, r24
    2fc8:	97 fd       	sbrc	r25, 7
    2fca:	08 c0       	rjmp	.+16     	; 0x2fdc <vfscanf+0x1d2>
    2fcc:	0e 94 d5 14 	call	0x29aa	; 0x29aa <isspace>
    2fd0:	89 2b       	or	r24, r25
    2fd2:	59 f3       	breq	.-42     	; 0x2faa <vfscanf+0x1a0>
    2fd4:	b6 01       	movw	r22, r12
    2fd6:	c3 01       	movw	r24, r6
    2fd8:	0e 94 48 1b 	call	0x3690	; 0x3690 <ungetc>
    2fdc:	81 14       	cp	r8, r1
    2fde:	91 04       	cpc	r9, r1
    2fe0:	a9 f0       	breq	.+42     	; 0x300c <vfscanf+0x202>
    2fe2:	f4 01       	movw	r30, r8
    2fe4:	10 82       	st	Z, r1
    2fe6:	12 c0       	rjmp	.+36     	; 0x300c <vfscanf+0x202>
    2fe8:	00 62       	ori	r16, 0x20	; 32
    2fea:	03 c0       	rjmp	.+6      	; 0x2ff2 <vfscanf+0x1e8>
    2fec:	00 61       	ori	r16, 0x10	; 16
    2fee:	01 c0       	rjmp	.+2      	; 0x2ff2 <vfscanf+0x1e8>
    2ff0:	00 64       	ori	r16, 0x40	; 64
    2ff2:	20 2f       	mov	r18, r16
    2ff4:	a4 01       	movw	r20, r8
    2ff6:	6f 2d       	mov	r22, r15
    2ff8:	c6 01       	movw	r24, r12
    2ffa:	0e 94 b5 15 	call	0x2b6a	; 0x2b6a <conv_int>
    2ffe:	81 11       	cpse	r24, r1
    3000:	05 c0       	rjmp	.+10     	; 0x300c <vfscanf+0x202>
    3002:	f6 01       	movw	r30, r12
    3004:	83 81       	ldd	r24, Z+3	; 0x03
    3006:	80 73       	andi	r24, 0x30	; 48
    3008:	29 f4       	brne	.+10     	; 0x3014 <vfscanf+0x20a>
    300a:	06 c0       	rjmp	.+12     	; 0x3018 <vfscanf+0x20e>
    300c:	00 fd       	sbrc	r16, 0
    300e:	0a cf       	rjmp	.-492    	; 0x2e24 <vfscanf+0x1a>
    3010:	53 94       	inc	r5
    3012:	08 cf       	rjmp	.-496    	; 0x2e24 <vfscanf+0x1a>
    3014:	55 20       	and	r5, r5
    3016:	19 f0       	breq	.+6      	; 0x301e <vfscanf+0x214>
    3018:	85 2d       	mov	r24, r5
    301a:	90 e0       	ldi	r25, 0x00	; 0
    301c:	02 c0       	rjmp	.+4      	; 0x3022 <vfscanf+0x218>
    301e:	8f ef       	ldi	r24, 0xFF	; 255
    3020:	9f ef       	ldi	r25, 0xFF	; 255
    3022:	cd b7       	in	r28, 0x3d	; 61
    3024:	de b7       	in	r29, 0x3e	; 62
    3026:	ef e0       	ldi	r30, 0x0F	; 15
    3028:	0c 94 77 14 	jmp	0x28ee	; 0x28ee <__epilogue_restores__+0x6>

0000302c <calloc>:
    302c:	0f 93       	push	r16
    302e:	1f 93       	push	r17
    3030:	cf 93       	push	r28
    3032:	df 93       	push	r29
    3034:	86 9f       	mul	r24, r22
    3036:	80 01       	movw	r16, r0
    3038:	87 9f       	mul	r24, r23
    303a:	10 0d       	add	r17, r0
    303c:	96 9f       	mul	r25, r22
    303e:	10 0d       	add	r17, r0
    3040:	11 24       	eor	r1, r1
    3042:	c8 01       	movw	r24, r16
    3044:	0e 94 32 18 	call	0x3064	; 0x3064 <malloc>
    3048:	ec 01       	movw	r28, r24
    304a:	00 97       	sbiw	r24, 0x00	; 0
    304c:	29 f0       	breq	.+10     	; 0x3058 <calloc+0x2c>
    304e:	a8 01       	movw	r20, r16
    3050:	60 e0       	ldi	r22, 0x00	; 0
    3052:	70 e0       	ldi	r23, 0x00	; 0
    3054:	0e 94 c7 1a 	call	0x358e	; 0x358e <memset>
    3058:	ce 01       	movw	r24, r28
    305a:	df 91       	pop	r29
    305c:	cf 91       	pop	r28
    305e:	1f 91       	pop	r17
    3060:	0f 91       	pop	r16
    3062:	08 95       	ret

00003064 <malloc>:
    3064:	0f 93       	push	r16
    3066:	1f 93       	push	r17
    3068:	cf 93       	push	r28
    306a:	df 93       	push	r29
    306c:	82 30       	cpi	r24, 0x02	; 2
    306e:	91 05       	cpc	r25, r1
    3070:	10 f4       	brcc	.+4      	; 0x3076 <malloc+0x12>
    3072:	82 e0       	ldi	r24, 0x02	; 2
    3074:	90 e0       	ldi	r25, 0x00	; 0
    3076:	e0 91 e1 01 	lds	r30, 0x01E1	; 0x8001e1 <__flp>
    307a:	f0 91 e2 01 	lds	r31, 0x01E2	; 0x8001e2 <__flp+0x1>
    307e:	20 e0       	ldi	r18, 0x00	; 0
    3080:	30 e0       	ldi	r19, 0x00	; 0
    3082:	a0 e0       	ldi	r26, 0x00	; 0
    3084:	b0 e0       	ldi	r27, 0x00	; 0
    3086:	30 97       	sbiw	r30, 0x00	; 0
    3088:	19 f1       	breq	.+70     	; 0x30d0 <malloc+0x6c>
    308a:	40 81       	ld	r20, Z
    308c:	51 81       	ldd	r21, Z+1	; 0x01
    308e:	02 81       	ldd	r16, Z+2	; 0x02
    3090:	13 81       	ldd	r17, Z+3	; 0x03
    3092:	48 17       	cp	r20, r24
    3094:	59 07       	cpc	r21, r25
    3096:	c8 f0       	brcs	.+50     	; 0x30ca <malloc+0x66>
    3098:	84 17       	cp	r24, r20
    309a:	95 07       	cpc	r25, r21
    309c:	69 f4       	brne	.+26     	; 0x30b8 <malloc+0x54>
    309e:	10 97       	sbiw	r26, 0x00	; 0
    30a0:	31 f0       	breq	.+12     	; 0x30ae <malloc+0x4a>
    30a2:	12 96       	adiw	r26, 0x02	; 2
    30a4:	0c 93       	st	X, r16
    30a6:	12 97       	sbiw	r26, 0x02	; 2
    30a8:	13 96       	adiw	r26, 0x03	; 3
    30aa:	1c 93       	st	X, r17
    30ac:	27 c0       	rjmp	.+78     	; 0x30fc <malloc+0x98>
    30ae:	00 93 e1 01 	sts	0x01E1, r16	; 0x8001e1 <__flp>
    30b2:	10 93 e2 01 	sts	0x01E2, r17	; 0x8001e2 <__flp+0x1>
    30b6:	22 c0       	rjmp	.+68     	; 0x30fc <malloc+0x98>
    30b8:	21 15       	cp	r18, r1
    30ba:	31 05       	cpc	r19, r1
    30bc:	19 f0       	breq	.+6      	; 0x30c4 <malloc+0x60>
    30be:	42 17       	cp	r20, r18
    30c0:	53 07       	cpc	r21, r19
    30c2:	18 f4       	brcc	.+6      	; 0x30ca <malloc+0x66>
    30c4:	9a 01       	movw	r18, r20
    30c6:	bd 01       	movw	r22, r26
    30c8:	ef 01       	movw	r28, r30
    30ca:	df 01       	movw	r26, r30
    30cc:	f8 01       	movw	r30, r16
    30ce:	db cf       	rjmp	.-74     	; 0x3086 <malloc+0x22>
    30d0:	21 15       	cp	r18, r1
    30d2:	31 05       	cpc	r19, r1
    30d4:	f9 f0       	breq	.+62     	; 0x3114 <malloc+0xb0>
    30d6:	28 1b       	sub	r18, r24
    30d8:	39 0b       	sbc	r19, r25
    30da:	24 30       	cpi	r18, 0x04	; 4
    30dc:	31 05       	cpc	r19, r1
    30de:	80 f4       	brcc	.+32     	; 0x3100 <malloc+0x9c>
    30e0:	8a 81       	ldd	r24, Y+2	; 0x02
    30e2:	9b 81       	ldd	r25, Y+3	; 0x03
    30e4:	61 15       	cp	r22, r1
    30e6:	71 05       	cpc	r23, r1
    30e8:	21 f0       	breq	.+8      	; 0x30f2 <malloc+0x8e>
    30ea:	fb 01       	movw	r30, r22
    30ec:	93 83       	std	Z+3, r25	; 0x03
    30ee:	82 83       	std	Z+2, r24	; 0x02
    30f0:	04 c0       	rjmp	.+8      	; 0x30fa <malloc+0x96>
    30f2:	90 93 e2 01 	sts	0x01E2, r25	; 0x8001e2 <__flp+0x1>
    30f6:	80 93 e1 01 	sts	0x01E1, r24	; 0x8001e1 <__flp>
    30fa:	fe 01       	movw	r30, r28
    30fc:	32 96       	adiw	r30, 0x02	; 2
    30fe:	44 c0       	rjmp	.+136    	; 0x3188 <malloc+0x124>
    3100:	fe 01       	movw	r30, r28
    3102:	e2 0f       	add	r30, r18
    3104:	f3 1f       	adc	r31, r19
    3106:	81 93       	st	Z+, r24
    3108:	91 93       	st	Z+, r25
    310a:	22 50       	subi	r18, 0x02	; 2
    310c:	31 09       	sbc	r19, r1
    310e:	39 83       	std	Y+1, r19	; 0x01
    3110:	28 83       	st	Y, r18
    3112:	3a c0       	rjmp	.+116    	; 0x3188 <malloc+0x124>
    3114:	20 91 df 01 	lds	r18, 0x01DF	; 0x8001df <__brkval>
    3118:	30 91 e0 01 	lds	r19, 0x01E0	; 0x8001e0 <__brkval+0x1>
    311c:	23 2b       	or	r18, r19
    311e:	41 f4       	brne	.+16     	; 0x3130 <malloc+0xcc>
    3120:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__malloc_heap_start>
    3124:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <__malloc_heap_start+0x1>
    3128:	30 93 e0 01 	sts	0x01E0, r19	; 0x8001e0 <__brkval+0x1>
    312c:	20 93 df 01 	sts	0x01DF, r18	; 0x8001df <__brkval>
    3130:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
    3134:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    3138:	21 15       	cp	r18, r1
    313a:	31 05       	cpc	r19, r1
    313c:	41 f4       	brne	.+16     	; 0x314e <malloc+0xea>
    313e:	2d b7       	in	r18, 0x3d	; 61
    3140:	3e b7       	in	r19, 0x3e	; 62
    3142:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__malloc_margin>
    3146:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__malloc_margin+0x1>
    314a:	24 1b       	sub	r18, r20
    314c:	35 0b       	sbc	r19, r21
    314e:	e0 91 df 01 	lds	r30, 0x01DF	; 0x8001df <__brkval>
    3152:	f0 91 e0 01 	lds	r31, 0x01E0	; 0x8001e0 <__brkval+0x1>
    3156:	e2 17       	cp	r30, r18
    3158:	f3 07       	cpc	r31, r19
    315a:	a0 f4       	brcc	.+40     	; 0x3184 <malloc+0x120>
    315c:	2e 1b       	sub	r18, r30
    315e:	3f 0b       	sbc	r19, r31
    3160:	28 17       	cp	r18, r24
    3162:	39 07       	cpc	r19, r25
    3164:	78 f0       	brcs	.+30     	; 0x3184 <malloc+0x120>
    3166:	ac 01       	movw	r20, r24
    3168:	4e 5f       	subi	r20, 0xFE	; 254
    316a:	5f 4f       	sbci	r21, 0xFF	; 255
    316c:	24 17       	cp	r18, r20
    316e:	35 07       	cpc	r19, r21
    3170:	48 f0       	brcs	.+18     	; 0x3184 <malloc+0x120>
    3172:	4e 0f       	add	r20, r30
    3174:	5f 1f       	adc	r21, r31
    3176:	50 93 e0 01 	sts	0x01E0, r21	; 0x8001e0 <__brkval+0x1>
    317a:	40 93 df 01 	sts	0x01DF, r20	; 0x8001df <__brkval>
    317e:	81 93       	st	Z+, r24
    3180:	91 93       	st	Z+, r25
    3182:	02 c0       	rjmp	.+4      	; 0x3188 <malloc+0x124>
    3184:	e0 e0       	ldi	r30, 0x00	; 0
    3186:	f0 e0       	ldi	r31, 0x00	; 0
    3188:	cf 01       	movw	r24, r30
    318a:	df 91       	pop	r29
    318c:	cf 91       	pop	r28
    318e:	1f 91       	pop	r17
    3190:	0f 91       	pop	r16
    3192:	08 95       	ret

00003194 <free>:
    3194:	cf 93       	push	r28
    3196:	df 93       	push	r29
    3198:	00 97       	sbiw	r24, 0x00	; 0
    319a:	09 f4       	brne	.+2      	; 0x319e <free+0xa>
    319c:	81 c0       	rjmp	.+258    	; 0x32a0 <free+0x10c>
    319e:	fc 01       	movw	r30, r24
    31a0:	32 97       	sbiw	r30, 0x02	; 2
    31a2:	13 82       	std	Z+3, r1	; 0x03
    31a4:	12 82       	std	Z+2, r1	; 0x02
    31a6:	a0 91 e1 01 	lds	r26, 0x01E1	; 0x8001e1 <__flp>
    31aa:	b0 91 e2 01 	lds	r27, 0x01E2	; 0x8001e2 <__flp+0x1>
    31ae:	10 97       	sbiw	r26, 0x00	; 0
    31b0:	81 f4       	brne	.+32     	; 0x31d2 <free+0x3e>
    31b2:	20 81       	ld	r18, Z
    31b4:	31 81       	ldd	r19, Z+1	; 0x01
    31b6:	82 0f       	add	r24, r18
    31b8:	93 1f       	adc	r25, r19
    31ba:	20 91 df 01 	lds	r18, 0x01DF	; 0x8001df <__brkval>
    31be:	30 91 e0 01 	lds	r19, 0x01E0	; 0x8001e0 <__brkval+0x1>
    31c2:	28 17       	cp	r18, r24
    31c4:	39 07       	cpc	r19, r25
    31c6:	51 f5       	brne	.+84     	; 0x321c <free+0x88>
    31c8:	f0 93 e0 01 	sts	0x01E0, r31	; 0x8001e0 <__brkval+0x1>
    31cc:	e0 93 df 01 	sts	0x01DF, r30	; 0x8001df <__brkval>
    31d0:	67 c0       	rjmp	.+206    	; 0x32a0 <free+0x10c>
    31d2:	ed 01       	movw	r28, r26
    31d4:	20 e0       	ldi	r18, 0x00	; 0
    31d6:	30 e0       	ldi	r19, 0x00	; 0
    31d8:	ce 17       	cp	r28, r30
    31da:	df 07       	cpc	r29, r31
    31dc:	40 f4       	brcc	.+16     	; 0x31ee <free+0x5a>
    31de:	4a 81       	ldd	r20, Y+2	; 0x02
    31e0:	5b 81       	ldd	r21, Y+3	; 0x03
    31e2:	9e 01       	movw	r18, r28
    31e4:	41 15       	cp	r20, r1
    31e6:	51 05       	cpc	r21, r1
    31e8:	f1 f0       	breq	.+60     	; 0x3226 <free+0x92>
    31ea:	ea 01       	movw	r28, r20
    31ec:	f5 cf       	rjmp	.-22     	; 0x31d8 <free+0x44>
    31ee:	d3 83       	std	Z+3, r29	; 0x03
    31f0:	c2 83       	std	Z+2, r28	; 0x02
    31f2:	40 81       	ld	r20, Z
    31f4:	51 81       	ldd	r21, Z+1	; 0x01
    31f6:	84 0f       	add	r24, r20
    31f8:	95 1f       	adc	r25, r21
    31fa:	c8 17       	cp	r28, r24
    31fc:	d9 07       	cpc	r29, r25
    31fe:	59 f4       	brne	.+22     	; 0x3216 <free+0x82>
    3200:	88 81       	ld	r24, Y
    3202:	99 81       	ldd	r25, Y+1	; 0x01
    3204:	84 0f       	add	r24, r20
    3206:	95 1f       	adc	r25, r21
    3208:	02 96       	adiw	r24, 0x02	; 2
    320a:	91 83       	std	Z+1, r25	; 0x01
    320c:	80 83       	st	Z, r24
    320e:	8a 81       	ldd	r24, Y+2	; 0x02
    3210:	9b 81       	ldd	r25, Y+3	; 0x03
    3212:	93 83       	std	Z+3, r25	; 0x03
    3214:	82 83       	std	Z+2, r24	; 0x02
    3216:	21 15       	cp	r18, r1
    3218:	31 05       	cpc	r19, r1
    321a:	29 f4       	brne	.+10     	; 0x3226 <free+0x92>
    321c:	f0 93 e2 01 	sts	0x01E2, r31	; 0x8001e2 <__flp+0x1>
    3220:	e0 93 e1 01 	sts	0x01E1, r30	; 0x8001e1 <__flp>
    3224:	3d c0       	rjmp	.+122    	; 0x32a0 <free+0x10c>
    3226:	e9 01       	movw	r28, r18
    3228:	fb 83       	std	Y+3, r31	; 0x03
    322a:	ea 83       	std	Y+2, r30	; 0x02
    322c:	49 91       	ld	r20, Y+
    322e:	59 91       	ld	r21, Y+
    3230:	c4 0f       	add	r28, r20
    3232:	d5 1f       	adc	r29, r21
    3234:	ec 17       	cp	r30, r28
    3236:	fd 07       	cpc	r31, r29
    3238:	61 f4       	brne	.+24     	; 0x3252 <free+0xbe>
    323a:	80 81       	ld	r24, Z
    323c:	91 81       	ldd	r25, Z+1	; 0x01
    323e:	84 0f       	add	r24, r20
    3240:	95 1f       	adc	r25, r21
    3242:	02 96       	adiw	r24, 0x02	; 2
    3244:	e9 01       	movw	r28, r18
    3246:	99 83       	std	Y+1, r25	; 0x01
    3248:	88 83       	st	Y, r24
    324a:	82 81       	ldd	r24, Z+2	; 0x02
    324c:	93 81       	ldd	r25, Z+3	; 0x03
    324e:	9b 83       	std	Y+3, r25	; 0x03
    3250:	8a 83       	std	Y+2, r24	; 0x02
    3252:	e0 e0       	ldi	r30, 0x00	; 0
    3254:	f0 e0       	ldi	r31, 0x00	; 0
    3256:	12 96       	adiw	r26, 0x02	; 2
    3258:	8d 91       	ld	r24, X+
    325a:	9c 91       	ld	r25, X
    325c:	13 97       	sbiw	r26, 0x03	; 3
    325e:	00 97       	sbiw	r24, 0x00	; 0
    3260:	19 f0       	breq	.+6      	; 0x3268 <free+0xd4>
    3262:	fd 01       	movw	r30, r26
    3264:	dc 01       	movw	r26, r24
    3266:	f7 cf       	rjmp	.-18     	; 0x3256 <free+0xc2>
    3268:	8d 91       	ld	r24, X+
    326a:	9c 91       	ld	r25, X
    326c:	11 97       	sbiw	r26, 0x01	; 1
    326e:	9d 01       	movw	r18, r26
    3270:	2e 5f       	subi	r18, 0xFE	; 254
    3272:	3f 4f       	sbci	r19, 0xFF	; 255
    3274:	82 0f       	add	r24, r18
    3276:	93 1f       	adc	r25, r19
    3278:	20 91 df 01 	lds	r18, 0x01DF	; 0x8001df <__brkval>
    327c:	30 91 e0 01 	lds	r19, 0x01E0	; 0x8001e0 <__brkval+0x1>
    3280:	28 17       	cp	r18, r24
    3282:	39 07       	cpc	r19, r25
    3284:	69 f4       	brne	.+26     	; 0x32a0 <free+0x10c>
    3286:	30 97       	sbiw	r30, 0x00	; 0
    3288:	29 f4       	brne	.+10     	; 0x3294 <free+0x100>
    328a:	10 92 e2 01 	sts	0x01E2, r1	; 0x8001e2 <__flp+0x1>
    328e:	10 92 e1 01 	sts	0x01E1, r1	; 0x8001e1 <__flp>
    3292:	02 c0       	rjmp	.+4      	; 0x3298 <free+0x104>
    3294:	13 82       	std	Z+3, r1	; 0x03
    3296:	12 82       	std	Z+2, r1	; 0x02
    3298:	b0 93 e0 01 	sts	0x01E0, r27	; 0x8001e0 <__brkval+0x1>
    329c:	a0 93 df 01 	sts	0x01DF, r26	; 0x8001df <__brkval>
    32a0:	df 91       	pop	r29
    32a2:	cf 91       	pop	r28
    32a4:	08 95       	ret

000032a6 <strtod>:
    32a6:	a0 e0       	ldi	r26, 0x00	; 0
    32a8:	b0 e0       	ldi	r27, 0x00	; 0
    32aa:	e9 e5       	ldi	r30, 0x59	; 89
    32ac:	f9 e1       	ldi	r31, 0x19	; 25
    32ae:	0c 94 5e 14 	jmp	0x28bc	; 0x28bc <__prologue_saves__+0xc>
    32b2:	ec 01       	movw	r28, r24
    32b4:	6b 01       	movw	r12, r22
    32b6:	61 15       	cp	r22, r1
    32b8:	71 05       	cpc	r23, r1
    32ba:	19 f0       	breq	.+6      	; 0x32c2 <strtod+0x1c>
    32bc:	fb 01       	movw	r30, r22
    32be:	91 83       	std	Z+1, r25	; 0x01
    32c0:	80 83       	st	Z, r24
    32c2:	7e 01       	movw	r14, r28
    32c4:	ff ef       	ldi	r31, 0xFF	; 255
    32c6:	ef 1a       	sub	r14, r31
    32c8:	ff 0a       	sbc	r15, r31
    32ca:	08 81       	ld	r16, Y
    32cc:	80 2f       	mov	r24, r16
    32ce:	90 e0       	ldi	r25, 0x00	; 0
    32d0:	0e 94 d5 14 	call	0x29aa	; 0x29aa <isspace>
    32d4:	89 2b       	or	r24, r25
    32d6:	11 f0       	breq	.+4      	; 0x32dc <strtod+0x36>
    32d8:	e7 01       	movw	r28, r14
    32da:	f3 cf       	rjmp	.-26     	; 0x32c2 <strtod+0x1c>
    32dc:	0d 32       	cpi	r16, 0x2D	; 45
    32de:	39 f4       	brne	.+14     	; 0x32ee <strtod+0x48>
    32e0:	7e 01       	movw	r14, r28
    32e2:	82 e0       	ldi	r24, 0x02	; 2
    32e4:	e8 0e       	add	r14, r24
    32e6:	f1 1c       	adc	r15, r1
    32e8:	09 81       	ldd	r16, Y+1	; 0x01
    32ea:	11 e0       	ldi	r17, 0x01	; 1
    32ec:	08 c0       	rjmp	.+16     	; 0x32fe <strtod+0x58>
    32ee:	0b 32       	cpi	r16, 0x2B	; 43
    32f0:	29 f4       	brne	.+10     	; 0x32fc <strtod+0x56>
    32f2:	7e 01       	movw	r14, r28
    32f4:	92 e0       	ldi	r25, 0x02	; 2
    32f6:	e9 0e       	add	r14, r25
    32f8:	f1 1c       	adc	r15, r1
    32fa:	09 81       	ldd	r16, Y+1	; 0x01
    32fc:	10 e0       	ldi	r17, 0x00	; 0
    32fe:	e7 01       	movw	r28, r14
    3300:	21 97       	sbiw	r28, 0x01	; 1
    3302:	43 e0       	ldi	r20, 0x03	; 3
    3304:	50 e0       	ldi	r21, 0x00	; 0
    3306:	62 eb       	ldi	r22, 0xB2	; 178
    3308:	71 e0       	ldi	r23, 0x01	; 1
    330a:	ce 01       	movw	r24, r28
    330c:	0e 94 af 1a 	call	0x355e	; 0x355e <strncasecmp_P>
    3310:	89 2b       	or	r24, r25
    3312:	c1 f4       	brne	.+48     	; 0x3344 <strtod+0x9e>
    3314:	23 96       	adiw	r28, 0x03	; 3
    3316:	45 e0       	ldi	r20, 0x05	; 5
    3318:	50 e0       	ldi	r21, 0x00	; 0
    331a:	6d ea       	ldi	r22, 0xAD	; 173
    331c:	71 e0       	ldi	r23, 0x01	; 1
    331e:	ce 01       	movw	r24, r28
    3320:	0e 94 af 1a 	call	0x355e	; 0x355e <strncasecmp_P>
    3324:	89 2b       	or	r24, r25
    3326:	09 f4       	brne	.+2      	; 0x332a <strtod+0x84>
    3328:	25 96       	adiw	r28, 0x05	; 5
    332a:	c1 14       	cp	r12, r1
    332c:	d1 04       	cpc	r13, r1
    332e:	19 f0       	breq	.+6      	; 0x3336 <strtod+0x90>
    3330:	f6 01       	movw	r30, r12
    3332:	d1 83       	std	Z+1, r29	; 0x01
    3334:	c0 83       	st	Z, r28
    3336:	11 11       	cpse	r17, r1
    3338:	f6 c0       	rjmp	.+492    	; 0x3526 <strtod+0x280>
    333a:	60 e0       	ldi	r22, 0x00	; 0
    333c:	70 e0       	ldi	r23, 0x00	; 0
    333e:	80 e8       	ldi	r24, 0x80	; 128
    3340:	9f e7       	ldi	r25, 0x7F	; 127
    3342:	fa c0       	rjmp	.+500    	; 0x3538 <strtod+0x292>
    3344:	43 e0       	ldi	r20, 0x03	; 3
    3346:	50 e0       	ldi	r21, 0x00	; 0
    3348:	6a ea       	ldi	r22, 0xAA	; 170
    334a:	71 e0       	ldi	r23, 0x01	; 1
    334c:	ce 01       	movw	r24, r28
    334e:	0e 94 af 1a 	call	0x355e	; 0x355e <strncasecmp_P>
    3352:	89 2b       	or	r24, r25
    3354:	59 f4       	brne	.+22     	; 0x336c <strtod+0xc6>
    3356:	c1 14       	cp	r12, r1
    3358:	d1 04       	cpc	r13, r1
    335a:	09 f4       	brne	.+2      	; 0x335e <strtod+0xb8>
    335c:	e9 c0       	rjmp	.+466    	; 0x3530 <strtod+0x28a>
    335e:	f2 e0       	ldi	r31, 0x02	; 2
    3360:	ef 0e       	add	r14, r31
    3362:	f1 1c       	adc	r15, r1
    3364:	f6 01       	movw	r30, r12
    3366:	f1 82       	std	Z+1, r15	; 0x01
    3368:	e0 82       	st	Z, r14
    336a:	e2 c0       	rjmp	.+452    	; 0x3530 <strtod+0x28a>
    336c:	20 e0       	ldi	r18, 0x00	; 0
    336e:	30 e0       	ldi	r19, 0x00	; 0
    3370:	a9 01       	movw	r20, r18
    3372:	c0 e0       	ldi	r28, 0x00	; 0
    3374:	d0 e0       	ldi	r29, 0x00	; 0
    3376:	f7 01       	movw	r30, r14
    3378:	80 ed       	ldi	r24, 0xD0	; 208
    337a:	a8 2e       	mov	r10, r24
    337c:	a0 0e       	add	r10, r16
    337e:	89 e0       	ldi	r24, 0x09	; 9
    3380:	8a 15       	cp	r24, r10
    3382:	30 f1       	brcs	.+76     	; 0x33d0 <strtod+0x12a>
    3384:	91 2f       	mov	r25, r17
    3386:	92 60       	ori	r25, 0x02	; 2
    3388:	b9 2e       	mov	r11, r25
    338a:	81 2f       	mov	r24, r17
    338c:	88 70       	andi	r24, 0x08	; 8
    338e:	12 ff       	sbrs	r17, 2
    3390:	04 c0       	rjmp	.+8      	; 0x339a <strtod+0xf4>
    3392:	81 11       	cpse	r24, r1
    3394:	24 c0       	rjmp	.+72     	; 0x33de <strtod+0x138>
    3396:	21 96       	adiw	r28, 0x01	; 1
    3398:	22 c0       	rjmp	.+68     	; 0x33de <strtod+0x138>
    339a:	81 11       	cpse	r24, r1
    339c:	21 97       	sbiw	r28, 0x01	; 1
    339e:	a5 e0       	ldi	r26, 0x05	; 5
    33a0:	b0 e0       	ldi	r27, 0x00	; 0
    33a2:	0e 94 61 1b 	call	0x36c2	; 0x36c2 <__muluhisi3>
    33a6:	dc 01       	movw	r26, r24
    33a8:	cb 01       	movw	r24, r22
    33aa:	88 0f       	add	r24, r24
    33ac:	99 1f       	adc	r25, r25
    33ae:	aa 1f       	adc	r26, r26
    33b0:	bb 1f       	adc	r27, r27
    33b2:	9c 01       	movw	r18, r24
    33b4:	ad 01       	movw	r20, r26
    33b6:	2a 0d       	add	r18, r10
    33b8:	31 1d       	adc	r19, r1
    33ba:	41 1d       	adc	r20, r1
    33bc:	51 1d       	adc	r21, r1
    33be:	28 39       	cpi	r18, 0x98	; 152
    33c0:	89 e9       	ldi	r24, 0x99	; 153
    33c2:	38 07       	cpc	r19, r24
    33c4:	48 07       	cpc	r20, r24
    33c6:	89 e1       	ldi	r24, 0x19	; 25
    33c8:	58 07       	cpc	r21, r24
    33ca:	48 f0       	brcs	.+18     	; 0x33de <strtod+0x138>
    33cc:	16 60       	ori	r17, 0x06	; 6
    33ce:	06 c0       	rjmp	.+12     	; 0x33dc <strtod+0x136>
    33d0:	9e ef       	ldi	r25, 0xFE	; 254
    33d2:	a9 12       	cpse	r10, r25
    33d4:	0a c0       	rjmp	.+20     	; 0x33ea <strtod+0x144>
    33d6:	13 fd       	sbrc	r17, 3
    33d8:	40 c0       	rjmp	.+128    	; 0x345a <strtod+0x1b4>
    33da:	18 60       	ori	r17, 0x08	; 8
    33dc:	b1 2e       	mov	r11, r17
    33de:	8f ef       	ldi	r24, 0xFF	; 255
    33e0:	e8 1a       	sub	r14, r24
    33e2:	f8 0a       	sbc	r15, r24
    33e4:	00 81       	ld	r16, Z
    33e6:	1b 2d       	mov	r17, r11
    33e8:	c6 cf       	rjmp	.-116    	; 0x3376 <strtod+0xd0>
    33ea:	80 2f       	mov	r24, r16
    33ec:	8f 7d       	andi	r24, 0xDF	; 223
    33ee:	85 34       	cpi	r24, 0x45	; 69
    33f0:	a1 f5       	brne	.+104    	; 0x345a <strtod+0x1b4>
    33f2:	80 81       	ld	r24, Z
    33f4:	8d 32       	cpi	r24, 0x2D	; 45
    33f6:	11 f4       	brne	.+4      	; 0x33fc <strtod+0x156>
    33f8:	10 61       	ori	r17, 0x10	; 16
    33fa:	06 c0       	rjmp	.+12     	; 0x3408 <strtod+0x162>
    33fc:	8b 32       	cpi	r24, 0x2B	; 43
    33fe:	21 f0       	breq	.+8      	; 0x3408 <strtod+0x162>
    3400:	31 96       	adiw	r30, 0x01	; 1
    3402:	61 e0       	ldi	r22, 0x01	; 1
    3404:	70 e0       	ldi	r23, 0x00	; 0
    3406:	04 c0       	rjmp	.+8      	; 0x3410 <strtod+0x16a>
    3408:	81 81       	ldd	r24, Z+1	; 0x01
    340a:	32 96       	adiw	r30, 0x02	; 2
    340c:	62 e0       	ldi	r22, 0x02	; 2
    340e:	70 e0       	ldi	r23, 0x00	; 0
    3410:	80 53       	subi	r24, 0x30	; 48
    3412:	8a 30       	cpi	r24, 0x0A	; 10
    3414:	18 f0       	brcs	.+6      	; 0x341c <strtod+0x176>
    3416:	e6 1b       	sub	r30, r22
    3418:	f7 0b       	sbc	r31, r23
    341a:	1f c0       	rjmp	.+62     	; 0x345a <strtod+0x1b4>
    341c:	60 e0       	ldi	r22, 0x00	; 0
    341e:	70 e0       	ldi	r23, 0x00	; 0
    3420:	60 38       	cpi	r22, 0x80	; 128
    3422:	9c e0       	ldi	r25, 0x0C	; 12
    3424:	79 07       	cpc	r23, r25
    3426:	5c f4       	brge	.+22     	; 0x343e <strtod+0x198>
    3428:	db 01       	movw	r26, r22
    342a:	aa 0f       	add	r26, r26
    342c:	bb 1f       	adc	r27, r27
    342e:	aa 0f       	add	r26, r26
    3430:	bb 1f       	adc	r27, r27
    3432:	6a 0f       	add	r22, r26
    3434:	7b 1f       	adc	r23, r27
    3436:	66 0f       	add	r22, r22
    3438:	77 1f       	adc	r23, r23
    343a:	68 0f       	add	r22, r24
    343c:	71 1d       	adc	r23, r1
    343e:	31 96       	adiw	r30, 0x01	; 1
    3440:	df 01       	movw	r26, r30
    3442:	11 97       	sbiw	r26, 0x01	; 1
    3444:	8c 91       	ld	r24, X
    3446:	80 53       	subi	r24, 0x30	; 48
    3448:	8a 30       	cpi	r24, 0x0A	; 10
    344a:	50 f3       	brcs	.-44     	; 0x3420 <strtod+0x17a>
    344c:	14 ff       	sbrs	r17, 4
    344e:	03 c0       	rjmp	.+6      	; 0x3456 <strtod+0x1b0>
    3450:	71 95       	neg	r23
    3452:	61 95       	neg	r22
    3454:	71 09       	sbc	r23, r1
    3456:	c6 0f       	add	r28, r22
    3458:	d7 1f       	adc	r29, r23
    345a:	11 ff       	sbrs	r17, 1
    345c:	08 c0       	rjmp	.+16     	; 0x346e <strtod+0x1c8>
    345e:	c1 14       	cp	r12, r1
    3460:	d1 04       	cpc	r13, r1
    3462:	29 f0       	breq	.+10     	; 0x346e <strtod+0x1c8>
    3464:	cf 01       	movw	r24, r30
    3466:	01 97       	sbiw	r24, 0x01	; 1
    3468:	f6 01       	movw	r30, r12
    346a:	91 83       	std	Z+1, r25	; 0x01
    346c:	80 83       	st	Z, r24
    346e:	ca 01       	movw	r24, r20
    3470:	b9 01       	movw	r22, r18
    3472:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <__floatunsisf>
    3476:	21 2f       	mov	r18, r17
    3478:	23 70       	andi	r18, 0x03	; 3
    347a:	23 30       	cpi	r18, 0x03	; 3
    347c:	19 f0       	breq	.+6      	; 0x3484 <strtod+0x1de>
    347e:	4b 01       	movw	r8, r22
    3480:	5c 01       	movw	r10, r24
    3482:	06 c0       	rjmp	.+12     	; 0x3490 <strtod+0x1ea>
    3484:	4b 01       	movw	r8, r22
    3486:	5c 01       	movw	r10, r24
    3488:	b7 fa       	bst	r11, 7
    348a:	b0 94       	com	r11
    348c:	b7 f8       	bld	r11, 7
    348e:	b0 94       	com	r11
    3490:	20 e0       	ldi	r18, 0x00	; 0
    3492:	30 e0       	ldi	r19, 0x00	; 0
    3494:	a9 01       	movw	r20, r18
    3496:	c5 01       	movw	r24, r10
    3498:	b4 01       	movw	r22, r8
    349a:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__cmpsf2>
    349e:	88 23       	and	r24, r24
    34a0:	09 f4       	brne	.+2      	; 0x34a4 <strtod+0x1fe>
    34a2:	3e c0       	rjmp	.+124    	; 0x3520 <strtod+0x27a>
    34a4:	d7 ff       	sbrs	r29, 7
    34a6:	06 c0       	rjmp	.+12     	; 0x34b4 <strtod+0x20e>
    34a8:	d1 95       	neg	r29
    34aa:	c1 95       	neg	r28
    34ac:	d1 09       	sbc	r29, r1
    34ae:	09 ec       	ldi	r16, 0xC9	; 201
    34b0:	11 e0       	ldi	r17, 0x01	; 1
    34b2:	02 c0       	rjmp	.+4      	; 0x34b8 <strtod+0x212>
    34b4:	01 ee       	ldi	r16, 0xE1	; 225
    34b6:	11 e0       	ldi	r17, 0x01	; 1
    34b8:	68 01       	movw	r12, r16
    34ba:	f8 e1       	ldi	r31, 0x18	; 24
    34bc:	cf 1a       	sub	r12, r31
    34be:	d1 08       	sbc	r13, r1
    34c0:	90 e2       	ldi	r25, 0x20	; 32
    34c2:	e9 2e       	mov	r14, r25
    34c4:	f1 2c       	mov	r15, r1
    34c6:	ce 15       	cp	r28, r14
    34c8:	df 05       	cpc	r29, r15
    34ca:	74 f0       	brlt	.+28     	; 0x34e8 <strtod+0x242>
    34cc:	f8 01       	movw	r30, r16
    34ce:	25 91       	lpm	r18, Z+
    34d0:	35 91       	lpm	r19, Z+
    34d2:	45 91       	lpm	r20, Z+
    34d4:	54 91       	lpm	r21, Z
    34d6:	c5 01       	movw	r24, r10
    34d8:	b4 01       	movw	r22, r8
    34da:	0e 94 ff 11 	call	0x23fe	; 0x23fe <__mulsf3>
    34de:	4b 01       	movw	r8, r22
    34e0:	5c 01       	movw	r10, r24
    34e2:	ce 19       	sub	r28, r14
    34e4:	df 09       	sbc	r29, r15
    34e6:	ef cf       	rjmp	.-34     	; 0x34c6 <strtod+0x220>
    34e8:	04 50       	subi	r16, 0x04	; 4
    34ea:	11 09       	sbc	r17, r1
    34ec:	f5 94       	asr	r15
    34ee:	e7 94       	ror	r14
    34f0:	0c 15       	cp	r16, r12
    34f2:	1d 05       	cpc	r17, r13
    34f4:	41 f7       	brne	.-48     	; 0x34c6 <strtod+0x220>
    34f6:	8a 2d       	mov	r24, r10
    34f8:	88 0f       	add	r24, r24
    34fa:	8b 2d       	mov	r24, r11
    34fc:	88 1f       	adc	r24, r24
    34fe:	8f 3f       	cpi	r24, 0xFF	; 255
    3500:	49 f0       	breq	.+18     	; 0x3514 <strtod+0x26e>
    3502:	20 e0       	ldi	r18, 0x00	; 0
    3504:	30 e0       	ldi	r19, 0x00	; 0
    3506:	a9 01       	movw	r20, r18
    3508:	c5 01       	movw	r24, r10
    350a:	b4 01       	movw	r22, r8
    350c:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__cmpsf2>
    3510:	81 11       	cpse	r24, r1
    3512:	06 c0       	rjmp	.+12     	; 0x3520 <strtod+0x27a>
    3514:	82 e2       	ldi	r24, 0x22	; 34
    3516:	90 e0       	ldi	r25, 0x00	; 0
    3518:	90 93 e4 01 	sts	0x01E4, r25	; 0x8001e4 <errno+0x1>
    351c:	80 93 e3 01 	sts	0x01E3, r24	; 0x8001e3 <errno>
    3520:	c5 01       	movw	r24, r10
    3522:	b4 01       	movw	r22, r8
    3524:	09 c0       	rjmp	.+18     	; 0x3538 <strtod+0x292>
    3526:	60 e0       	ldi	r22, 0x00	; 0
    3528:	70 e0       	ldi	r23, 0x00	; 0
    352a:	80 e8       	ldi	r24, 0x80	; 128
    352c:	9f ef       	ldi	r25, 0xFF	; 255
    352e:	04 c0       	rjmp	.+8      	; 0x3538 <strtod+0x292>
    3530:	60 e0       	ldi	r22, 0x00	; 0
    3532:	70 e0       	ldi	r23, 0x00	; 0
    3534:	80 ec       	ldi	r24, 0xC0	; 192
    3536:	9f e7       	ldi	r25, 0x7F	; 127
    3538:	cd b7       	in	r28, 0x3d	; 61
    353a:	de b7       	in	r29, 0x3e	; 62
    353c:	ec e0       	ldi	r30, 0x0C	; 12
    353e:	0c 94 7a 14 	jmp	0x28f4	; 0x28f4 <__epilogue_restores__+0xc>

00003542 <__ctype_isfalse>:
    3542:	99 27       	eor	r25, r25
    3544:	88 27       	eor	r24, r24

00003546 <__ctype_istrue>:
    3546:	08 95       	ret

00003548 <strchr_P>:
    3548:	fc 01       	movw	r30, r24
    354a:	05 90       	lpm	r0, Z+
    354c:	06 16       	cp	r0, r22
    354e:	21 f0       	breq	.+8      	; 0x3558 <strchr_P+0x10>
    3550:	00 20       	and	r0, r0
    3552:	d9 f7       	brne	.-10     	; 0x354a <strchr_P+0x2>
    3554:	c0 01       	movw	r24, r0
    3556:	08 95       	ret
    3558:	31 97       	sbiw	r30, 0x01	; 1
    355a:	cf 01       	movw	r24, r30
    355c:	08 95       	ret

0000355e <strncasecmp_P>:
    355e:	fb 01       	movw	r30, r22
    3560:	dc 01       	movw	r26, r24
    3562:	41 50       	subi	r20, 0x01	; 1
    3564:	50 40       	sbci	r21, 0x00	; 0
    3566:	88 f0       	brcs	.+34     	; 0x358a <strncasecmp_P+0x2c>
    3568:	8d 91       	ld	r24, X+
    356a:	81 34       	cpi	r24, 0x41	; 65
    356c:	1c f0       	brlt	.+6      	; 0x3574 <strncasecmp_P+0x16>
    356e:	8b 35       	cpi	r24, 0x5B	; 91
    3570:	0c f4       	brge	.+2      	; 0x3574 <strncasecmp_P+0x16>
    3572:	80 5e       	subi	r24, 0xE0	; 224
    3574:	65 91       	lpm	r22, Z+
    3576:	61 34       	cpi	r22, 0x41	; 65
    3578:	1c f0       	brlt	.+6      	; 0x3580 <strncasecmp_P+0x22>
    357a:	6b 35       	cpi	r22, 0x5B	; 91
    357c:	0c f4       	brge	.+2      	; 0x3580 <strncasecmp_P+0x22>
    357e:	60 5e       	subi	r22, 0xE0	; 224
    3580:	86 1b       	sub	r24, r22
    3582:	61 11       	cpse	r22, r1
    3584:	71 f3       	breq	.-36     	; 0x3562 <strncasecmp_P+0x4>
    3586:	99 0b       	sbc	r25, r25
    3588:	08 95       	ret
    358a:	88 1b       	sub	r24, r24
    358c:	fc cf       	rjmp	.-8      	; 0x3586 <strncasecmp_P+0x28>

0000358e <memset>:
    358e:	dc 01       	movw	r26, r24
    3590:	01 c0       	rjmp	.+2      	; 0x3594 <memset+0x6>
    3592:	6d 93       	st	X+, r22
    3594:	41 50       	subi	r20, 0x01	; 1
    3596:	50 40       	sbci	r21, 0x00	; 0
    3598:	e0 f7       	brcc	.-8      	; 0x3592 <memset+0x4>
    359a:	08 95       	ret

0000359c <fgetc>:
    359c:	cf 93       	push	r28
    359e:	df 93       	push	r29
    35a0:	ec 01       	movw	r28, r24
    35a2:	2b 81       	ldd	r18, Y+3	; 0x03
    35a4:	20 ff       	sbrs	r18, 0
    35a6:	33 c0       	rjmp	.+102    	; 0x360e <fgetc+0x72>
    35a8:	26 ff       	sbrs	r18, 6
    35aa:	0a c0       	rjmp	.+20     	; 0x35c0 <fgetc+0x24>
    35ac:	2f 7b       	andi	r18, 0xBF	; 191
    35ae:	2b 83       	std	Y+3, r18	; 0x03
    35b0:	8e 81       	ldd	r24, Y+6	; 0x06
    35b2:	9f 81       	ldd	r25, Y+7	; 0x07
    35b4:	01 96       	adiw	r24, 0x01	; 1
    35b6:	9f 83       	std	Y+7, r25	; 0x07
    35b8:	8e 83       	std	Y+6, r24	; 0x06
    35ba:	8a 81       	ldd	r24, Y+2	; 0x02
    35bc:	90 e0       	ldi	r25, 0x00	; 0
    35be:	29 c0       	rjmp	.+82     	; 0x3612 <fgetc+0x76>
    35c0:	22 ff       	sbrs	r18, 2
    35c2:	0f c0       	rjmp	.+30     	; 0x35e2 <fgetc+0x46>
    35c4:	e8 81       	ld	r30, Y
    35c6:	f9 81       	ldd	r31, Y+1	; 0x01
    35c8:	80 81       	ld	r24, Z
    35ca:	08 2e       	mov	r0, r24
    35cc:	00 0c       	add	r0, r0
    35ce:	99 0b       	sbc	r25, r25
    35d0:	00 97       	sbiw	r24, 0x00	; 0
    35d2:	19 f4       	brne	.+6      	; 0x35da <fgetc+0x3e>
    35d4:	20 62       	ori	r18, 0x20	; 32
    35d6:	2b 83       	std	Y+3, r18	; 0x03
    35d8:	1a c0       	rjmp	.+52     	; 0x360e <fgetc+0x72>
    35da:	31 96       	adiw	r30, 0x01	; 1
    35dc:	f9 83       	std	Y+1, r31	; 0x01
    35de:	e8 83       	st	Y, r30
    35e0:	0e c0       	rjmp	.+28     	; 0x35fe <fgetc+0x62>
    35e2:	ea 85       	ldd	r30, Y+10	; 0x0a
    35e4:	fb 85       	ldd	r31, Y+11	; 0x0b
    35e6:	09 95       	icall
    35e8:	97 ff       	sbrs	r25, 7
    35ea:	09 c0       	rjmp	.+18     	; 0x35fe <fgetc+0x62>
    35ec:	2b 81       	ldd	r18, Y+3	; 0x03
    35ee:	01 96       	adiw	r24, 0x01	; 1
    35f0:	11 f0       	breq	.+4      	; 0x35f6 <fgetc+0x5a>
    35f2:	80 e2       	ldi	r24, 0x20	; 32
    35f4:	01 c0       	rjmp	.+2      	; 0x35f8 <fgetc+0x5c>
    35f6:	80 e1       	ldi	r24, 0x10	; 16
    35f8:	82 2b       	or	r24, r18
    35fa:	8b 83       	std	Y+3, r24	; 0x03
    35fc:	08 c0       	rjmp	.+16     	; 0x360e <fgetc+0x72>
    35fe:	2e 81       	ldd	r18, Y+6	; 0x06
    3600:	3f 81       	ldd	r19, Y+7	; 0x07
    3602:	2f 5f       	subi	r18, 0xFF	; 255
    3604:	3f 4f       	sbci	r19, 0xFF	; 255
    3606:	3f 83       	std	Y+7, r19	; 0x07
    3608:	2e 83       	std	Y+6, r18	; 0x06
    360a:	99 27       	eor	r25, r25
    360c:	02 c0       	rjmp	.+4      	; 0x3612 <fgetc+0x76>
    360e:	8f ef       	ldi	r24, 0xFF	; 255
    3610:	9f ef       	ldi	r25, 0xFF	; 255
    3612:	df 91       	pop	r29
    3614:	cf 91       	pop	r28
    3616:	08 95       	ret

00003618 <fputc>:
    3618:	0f 93       	push	r16
    361a:	1f 93       	push	r17
    361c:	cf 93       	push	r28
    361e:	df 93       	push	r29
    3620:	fb 01       	movw	r30, r22
    3622:	23 81       	ldd	r18, Z+3	; 0x03
    3624:	21 fd       	sbrc	r18, 1
    3626:	03 c0       	rjmp	.+6      	; 0x362e <fputc+0x16>
    3628:	8f ef       	ldi	r24, 0xFF	; 255
    362a:	9f ef       	ldi	r25, 0xFF	; 255
    362c:	2c c0       	rjmp	.+88     	; 0x3686 <fputc+0x6e>
    362e:	22 ff       	sbrs	r18, 2
    3630:	16 c0       	rjmp	.+44     	; 0x365e <fputc+0x46>
    3632:	46 81       	ldd	r20, Z+6	; 0x06
    3634:	57 81       	ldd	r21, Z+7	; 0x07
    3636:	24 81       	ldd	r18, Z+4	; 0x04
    3638:	35 81       	ldd	r19, Z+5	; 0x05
    363a:	42 17       	cp	r20, r18
    363c:	53 07       	cpc	r21, r19
    363e:	44 f4       	brge	.+16     	; 0x3650 <fputc+0x38>
    3640:	a0 81       	ld	r26, Z
    3642:	b1 81       	ldd	r27, Z+1	; 0x01
    3644:	9d 01       	movw	r18, r26
    3646:	2f 5f       	subi	r18, 0xFF	; 255
    3648:	3f 4f       	sbci	r19, 0xFF	; 255
    364a:	31 83       	std	Z+1, r19	; 0x01
    364c:	20 83       	st	Z, r18
    364e:	8c 93       	st	X, r24
    3650:	26 81       	ldd	r18, Z+6	; 0x06
    3652:	37 81       	ldd	r19, Z+7	; 0x07
    3654:	2f 5f       	subi	r18, 0xFF	; 255
    3656:	3f 4f       	sbci	r19, 0xFF	; 255
    3658:	37 83       	std	Z+7, r19	; 0x07
    365a:	26 83       	std	Z+6, r18	; 0x06
    365c:	14 c0       	rjmp	.+40     	; 0x3686 <fputc+0x6e>
    365e:	8b 01       	movw	r16, r22
    3660:	ec 01       	movw	r28, r24
    3662:	fb 01       	movw	r30, r22
    3664:	00 84       	ldd	r0, Z+8	; 0x08
    3666:	f1 85       	ldd	r31, Z+9	; 0x09
    3668:	e0 2d       	mov	r30, r0
    366a:	09 95       	icall
    366c:	89 2b       	or	r24, r25
    366e:	e1 f6       	brne	.-72     	; 0x3628 <fputc+0x10>
    3670:	d8 01       	movw	r26, r16
    3672:	16 96       	adiw	r26, 0x06	; 6
    3674:	8d 91       	ld	r24, X+
    3676:	9c 91       	ld	r25, X
    3678:	17 97       	sbiw	r26, 0x07	; 7
    367a:	01 96       	adiw	r24, 0x01	; 1
    367c:	17 96       	adiw	r26, 0x07	; 7
    367e:	9c 93       	st	X, r25
    3680:	8e 93       	st	-X, r24
    3682:	16 97       	sbiw	r26, 0x06	; 6
    3684:	ce 01       	movw	r24, r28
    3686:	df 91       	pop	r29
    3688:	cf 91       	pop	r28
    368a:	1f 91       	pop	r17
    368c:	0f 91       	pop	r16
    368e:	08 95       	ret

00003690 <ungetc>:
    3690:	fb 01       	movw	r30, r22
    3692:	23 81       	ldd	r18, Z+3	; 0x03
    3694:	20 ff       	sbrs	r18, 0
    3696:	12 c0       	rjmp	.+36     	; 0x36bc <ungetc+0x2c>
    3698:	26 fd       	sbrc	r18, 6
    369a:	10 c0       	rjmp	.+32     	; 0x36bc <ungetc+0x2c>
    369c:	8f 3f       	cpi	r24, 0xFF	; 255
    369e:	3f ef       	ldi	r19, 0xFF	; 255
    36a0:	93 07       	cpc	r25, r19
    36a2:	61 f0       	breq	.+24     	; 0x36bc <ungetc+0x2c>
    36a4:	82 83       	std	Z+2, r24	; 0x02
    36a6:	2f 7d       	andi	r18, 0xDF	; 223
    36a8:	20 64       	ori	r18, 0x40	; 64
    36aa:	23 83       	std	Z+3, r18	; 0x03
    36ac:	26 81       	ldd	r18, Z+6	; 0x06
    36ae:	37 81       	ldd	r19, Z+7	; 0x07
    36b0:	21 50       	subi	r18, 0x01	; 1
    36b2:	31 09       	sbc	r19, r1
    36b4:	37 83       	std	Z+7, r19	; 0x07
    36b6:	26 83       	std	Z+6, r18	; 0x06
    36b8:	99 27       	eor	r25, r25
    36ba:	08 95       	ret
    36bc:	8f ef       	ldi	r24, 0xFF	; 255
    36be:	9f ef       	ldi	r25, 0xFF	; 255
    36c0:	08 95       	ret

000036c2 <__muluhisi3>:
    36c2:	0e 94 6c 1b 	call	0x36d8	; 0x36d8 <__umulhisi3>
    36c6:	a5 9f       	mul	r26, r21
    36c8:	90 0d       	add	r25, r0
    36ca:	b4 9f       	mul	r27, r20
    36cc:	90 0d       	add	r25, r0
    36ce:	a4 9f       	mul	r26, r20
    36d0:	80 0d       	add	r24, r0
    36d2:	91 1d       	adc	r25, r1
    36d4:	11 24       	eor	r1, r1
    36d6:	08 95       	ret

000036d8 <__umulhisi3>:
    36d8:	a2 9f       	mul	r26, r18
    36da:	b0 01       	movw	r22, r0
    36dc:	b3 9f       	mul	r27, r19
    36de:	c0 01       	movw	r24, r0
    36e0:	a3 9f       	mul	r26, r19
    36e2:	70 0d       	add	r23, r0
    36e4:	81 1d       	adc	r24, r1
    36e6:	11 24       	eor	r1, r1
    36e8:	91 1d       	adc	r25, r1
    36ea:	b2 9f       	mul	r27, r18
    36ec:	70 0d       	add	r23, r0
    36ee:	81 1d       	adc	r24, r1
    36f0:	11 24       	eor	r1, r1
    36f2:	91 1d       	adc	r25, r1
    36f4:	08 95       	ret

000036f6 <_exit>:
    36f6:	f8 94       	cli

000036f8 <__stop_program>:
    36f8:	ff cf       	rjmp	.-2      	; 0x36f8 <__stop_program>
